# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/training_manual/database_concepts/data_model.rst:6
msgid "|LS| Implementing the Data Model"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:8
msgid ""
"Now that we've covered all the theory, let's create a new database. This "
"database will be used for our exercises for the lessons that will follow "
"afterwards."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:12
msgid ""
"**The goal for this lesson:** To install the required software and use it"
" to implement our example database."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:16
msgid "Install PostgreSQL"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:18
msgid ""
"Although outside the scope of this document, Mac users can install "
"PostgreSQL using `Homebrew <http://russbrooks.com/2010/11/25/install-"
"postgresql-9-on-os-x>`_. Windows users can use the graphical installer "
"located here: `<http://www.postgresql.org/download/windows/>`_. Please "
"note that the documentation will assume users are running QGIS under "
"Ubuntu."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:26
#: ../../source/docs/training_manual/database_concepts/data_model.rst:63
msgid "Under Ubuntu:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:32
msgid "You should get a message like this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:51
msgid ""
"Press :kbd:`Y` and :kbd:`Enter` and wait for the download and "
"installation to finish."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:55
msgid "Help"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:57
msgid ""
"PostgreSQL has very good `online "
"<http://www.postgresql.org/docs/9.1/static/index.html>`_ documentation."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:61
msgid "Create a database user"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:65
msgid ""
"After the installation is complete, run this command to become the "
"postgres user and then create a new database user:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:72
msgid ""
"Type in your normal log in password when prompted (you need to have sudo "
"rights)."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:74
msgid ""
"Now, at the postgres user's bash prompt, create the database user. Make "
"sure the user name matches your unix login name: it will make your life "
"much easier, as postgres will automatically authenticate you when you are"
" logged in as that user:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:83
msgid ""
"Enter a password when prompted. You should use a different password to "
"your login password."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:86
msgid "What do those options mean?"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:98
msgid "Now you should leave the postgres user's bash shell environment by typing:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:106
msgid "Verify the new account"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:112
msgid "Should return something like this::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:122
#: ../../source/docs/training_manual/database_concepts/data_model.rst:152
msgid "Type :kbd:`q` to exit."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:125
msgid "Create a database"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:127
msgid ""
"The ``createdb`` command is used to create a new database. It should be "
"run from the bash shell prompt:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:134
msgid "You can verify the existence of your new database by using this command:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:140
msgid "Which should return something like this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:155
msgid "Starting a database shell session"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:157
msgid "You can connect to your database easily like this::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:161
msgid "To exit out of the psql database shell, type::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:165
msgid "For help in using the shell, type::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:169
msgid "For help in using sql commands, type::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:173
msgid "To get help on a specific command, type (for example)::"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:177
msgid ""
"See also the `Psql cheat sheet "
"<http://www.postgresonline.com/downloads/special_feature/postgresql90_cheatsheet_A4.pdf>`_"
" - available online `here "
"<http://www.postgresonline.com/downloads/special_feature/postgresql90_cheatsheet_A4.pdf>`_."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:182
msgid "Make Tables in SQL"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:184
msgid ""
"Let's start making some tables! We will use our ER Diagram as a guide. "
"First, connect to the address db:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:191
msgid "Then create a :file:`streets` table:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:197
msgid ""
":kbd:`serial` and :kbd:`varchar` are **data types**. :kbd:`serial` tells "
"PostgreSQL to start an integer sequence (auto-number) to populate the "
":kbd:`id` automatically for every new record. :kbd:`varchar(50)` tells "
"PostgreSQL to create a character field of 50 characters in length."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:202
msgid ""
"You will notice that the command ends with a :kbd:`;` - all SQL commands "
"should be terminated this way. When you press :kbd:`Enter`, psql will "
"report something like this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:214
msgid ""
"That means your table was created successfully, with a primary key "
":kbd:`streets_pkey` using :kbd:`streets.id`."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:217
msgid ""
"Note: If you hit return without entering a :kbd:`;`, then you will get a "
"prompt like this: :kbd:`address-#`. This is because PG is expecting you "
"to enter more. Enter :kbd:`;` to run your command."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:221
msgid "To view your table schema, you can do this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:227
#: ../../source/docs/training_manual/database_concepts/data_model.rst:246
msgid "Which should show something like this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:240
msgid "To view your table contents, you can do this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:254
msgid "As you can see, our table is currently empty."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:257
msgid "|TY| |moderate|"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:259
msgid "Use the approach shown above to make a table called people:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:261
msgid ""
"Add fields such as phone number, home address, name, etc. (these aren't "
"all valid names: change them to make them valid). Make sure you give the "
"table an ID column with the same data-type as above."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:265
msgid ":ref:`Check your results <database-concepts-4>`"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:270
msgid "Create Keys in SQL"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:272
msgid ""
"The problem with our solution above is that the database doesn't know "
"that people and streets have a logical relationship. To express this "
"relationship, we have to define a foreign key that points to the primary "
"key of the streets table."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:280
msgid "There are two ways to do this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:282
msgid "Add the key after the table has been created"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:283
msgid "Define the key at time of table creation"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:285
msgid "Our table has already been created, so let's do it the first way:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:293
msgid ""
"That tells the :kbd:`people` table that its :kbd:`street_id` fields must "
"match a valid street :kbd:`id` from the :kbd:`streets` table."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:296
msgid ""
"The more usual way to create a constraint is to do it when you create the"
" table:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:308
msgid "After adding the constraint, our table schema looks like this now:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:328
msgid "Create Indexes in SQL"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:330
msgid ""
"We want lightning fast searches on peoples names. To provide for this, we"
" can create an index on the name column of our people table:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:339
msgid "Which results in:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:360
msgid "Dropping Tables in SQL"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:362
msgid "If you want to get rid of a table you can use the :kbd:`drop` command:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:369
msgid ""
"In our current example, the above command would not work. Why not? "
":ref:`See why <database-concepts-5>`"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:374
msgid ""
"If you used the same :kbd:`drop table` command on the `people` table, it "
"would be successful:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:382
msgid ""
"If you actually did enter that command and dropped the :kbd:`people` "
"table, now would be a good time to rebuild it, as you will need it in the"
" next exercises."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:387
msgid "A word on pgAdmin III"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:389
msgid ""
"We are showing you the SQL commands from the `psql` prompt because it's a"
" very useful way to learn about databases. However, there are quicker and"
" easier ways to do a lot of what we are showing you. Install pgAdmin III "
"and you can create, drop, alter etc tables using 'point and click' "
"operations in a GUI."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:394
msgid "Under Ubuntu, you can install it like this:"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:400
msgid "pgAdmin III will be covered in more detail in another module."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:403
msgid "|IC|"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:405
msgid ""
"You have now seen how to create a brand new database, starting completely"
" from scratch."
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:409
msgid "|WN|"
msgstr ""

#: ../../source/docs/training_manual/database_concepts/data_model.rst:411
msgid "Next you'll learn how to use the DBMS to add new data."
msgstr ""

