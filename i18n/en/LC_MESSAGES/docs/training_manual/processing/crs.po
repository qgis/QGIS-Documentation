# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/training_manual/processing/crs.rst:6
msgid "CRSs. Reprojecting"
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:9
msgid ""
"In this lesson we will discuss how Processing uses CRSs. We will also see"
" a very useful algorithm: reprojecting."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:12
msgid ""
"CRS's are a great source of confusion for QGIS Processing users, so here "
"are some general rules about how they are handled by geoalgorithms when "
"creating a new layer."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:14
msgid ""
"If there are input layers, it will use the CRS of the first layer. This "
"is assumed to be the CRS of all input layers, since they should have the "
"same one. If you use layers with unmatching CRS's, QGIS will warn you "
"about it. Notice that the CRS of input layers is shown along with its "
"name in the parameters dialog."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:18
msgid ""
"If there are no input layer, it will use the project CRS, unless the "
"algorithm contains a specific CRS field (as it happenend in the last "
"lesson with the graticule algorithm)"
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:20
msgid ""
"Open the project corresponding to this lesson and you will see two layers"
" named 23030 and 4326. They both contain the same points, but in "
"different CRSs (EPSG:23030 and EPSG:4326). They appear in the same place "
"because QGIS is reprojecting on the fly to the project CRS (EPSG:4326), "
"but they are not actually the same layer."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:22
msgid "Open the *Export/Add geometry columns* algorithm."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:26
msgid ""
"This algorithm add new columns to the attributes table of a vector layer."
" The content of the columns depend on the type of geometry of the layer. "
"In the case of points, it adds new columns with the X and Y coordinates "
"of each point."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:28
msgid ""
"In the list of available layers that you will find in the input layer "
"field, you will see each one with its corresponding CRS. That means that,"
" although they appear in the same place in your canvas, they will be "
"treated differently. Select the 4326 layer."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:30
msgid ""
"The other parameter of the algorithm allows to set how the algorithm uses"
" coordinates to calculate the new value that it will add to the resulting"
" layers. Most algorithms do not have an option like that, and just use "
"the coordinates directly. Select the *Layer CRS* option to just use "
"coordinates as they are. This is how almost all geoalgorithms work."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:32
msgid ""
"You should get a new layer with exactly the same points as the other two "
"layers. If you right click on the name of the layer and open its "
"properties, you will see that it shares the same CRS of the input layer, "
"that is, EPSG:4326. When the layer is loaded into QGIS, you will not be "
"asked to enter the CRS of the layer, since QGIS already knows about it."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:34
msgid ""
"If you open the attributes table of the new layer you will see that it "
"contains two new fields with the X and Y coordinates of each point."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:38
msgid ""
"Those coordinate values are given in the layer CRS, since we chose that "
"option. However, even if you choose another option, the output CRS of the"
" layer would have been the same, since the input CRS is used to set the "
"CRS of the output layer. Choosing another option will cause the values to"
" be different, but not the resulting point to change or the CRS of the "
"ouput layer to be different to the CRS of the input one."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:41
msgid ""
"Now do the same calculation using the other layer. You should find the "
"resulting layer rendered exactly in the same place as the other ones, and"
" it will have the EPSG:23030 CRS, since that was the one of the input "
"layer."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:43
msgid ""
"If you go to its attribute table, you will see values that are different "
"to the ones in the first layer that we created."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:47
msgid ""
"This is because the original data is different (it uses a different CRS),"
" and those coordinates are taken from it."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:49
msgid ""
"What should you learn from this? The main idea behind these examples is "
"that geoalgorithms use the layer as it is in its original data source, "
"and completely ignore the reprojections that QGIS might be doing before "
"rendering. In other words, do not trust what you see in the canvas, but "
"always have in mind that the original data will be used. That is not so "
"important in this case, since we are just using one single layer at a "
"time, but in an algorithm that needs several of them (such as a clip "
"algorithm), layers that appear to match or overlay might be very far one "
"from each other, since they might have different CRSs."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:51
msgid ""
"Algorithms performs no reprojection (except in the reprojection algorithm"
" that we will see next), so it is up to you to make sure that layers have"
" matching CRS's."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:53
msgid ""
"An interesting module that deals with CRS's is the reprojection one. It "
"represents a particular case, since it has an input layer (the one to "
"reproject), but it will not use its CRS for the output one."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:55
msgid "Open the *Reproject layer* algorithm."
msgstr ""

#: ../../source/docs/training_manual/processing/crs.rst:59
msgid ""
"Select any of the layers as input, and select EPSG:23029 as the "
"destination CRS. Run the algorithm and you will get a new layer, "
"identical to the input one, but with a different CRS. It will appear on "
"the same region of the canvas, like the other ones, since QGIS will "
"reproject it on the fly, but its original coordinates are different. You "
"can see that by running the *Export/Add geometry columns* algorithm using"
" this new layer as input, and veryfing that the added coordinates are "
"different to the ones in the attribute tables of both of the two layers "
"that we had computed before."
msgstr ""

