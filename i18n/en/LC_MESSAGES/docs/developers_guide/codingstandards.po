# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/developers_guide/codingstandards.rst:8
msgid "QGIS Coding Standards"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:13
msgid "These standards should be followed by all QGIS developers."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:16
msgid "Classes"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:20
#: ../../source/docs/developers_guide/codingstandards.rst:215
msgid "Names"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:22
msgid "Class in QGIS begin with Qgs and are formed using camel case."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:24
#: ../../source/docs/developers_guide/codingstandards.rst:194
#: ../../source/docs/developers_guide/codingstandards.rst:266
msgid "Examples:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:26
msgid "``QgsPoint``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:27
msgid "``QgsMapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:28
msgid "``QgsRasterLayer``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:32
msgid "Members"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:35
msgid ""
"Class member names begin with a lower case m and are formed using mixed "
"case."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:38
msgid "``mMapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:39
msgid "``mCurrentExtent``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:41
msgid ""
"All class members should be private. Public class members are STRONGLY "
"discouraged. Protected members should be avoided when the member may need"
" to be accessed from Python subclasses, since protected members cannot be"
" used from the Python bindings."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:46
msgid ""
"Mutable static class member names should begin with a lower case ``s``, "
"but constant static class member names should be all caps:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:49
msgid "``sRefCounter``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:50
msgid "``DEFAULT_QUEUE_SIZE``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:54
msgid "Accessor Functions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:57
msgid ""
"Class member values should be obtained through accesssor functions. The "
"function should be named without a get prefix. Accessor functions for the"
" two private members above would be:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:61
msgid "``mapCanvas()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:62
msgid "``currentExtent()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:64
msgid ""
"Ensure that accessors are correctly marked with ``const``. Where "
"appropriate, this may require that cached value type member variables are"
" marked with ``mutable``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:69
msgid "Functions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:72
msgid ""
"Function names begin with a lowercase letter and are formed using mixed "
"case. The function name should convey something about the purpose of the "
"function."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:75
msgid "``updateMapExtent()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:76
msgid "``setUserOptions()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:78
msgid ""
"For consistency with the existing QGIS API and with the Qt API, "
"abbreviations should be avoided. E.g. ``setDestinationSize`` instead of "
"``setDestSize``, ``setMaximumValue`` instead of ``setMaxVal``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:82
msgid ""
"Acronyms should also be camel cased for consistency. E.g. ``setXml`` "
"instead of ``setXML``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:87
msgid "Function Arguments"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:90
msgid ""
"Function arguments should use descriptive names. Do not use single letter"
" arguments (e.g. ``setColor( const QColor& color )`` instead of "
"``setColor( const QColor& c )``)."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:94
msgid ""
"Pay careful attention to when arguments should be passed by reference. "
"Unless argument objects are small and trivially copied (such as QPoint "
"objects), they should be passed by const reference. For consistency with "
"the Qt API, even implicitly shared objects are passed by const reference "
"(e.g. ``setTitle( const QString& title )`` instead of ``setTitle( QString"
" title )``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:103
msgid "Function Return Values"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:105
msgid ""
"Return small and trivially copied objects as values. Larger objects "
"should be returned by const reference. The one exception to this is "
"implicitly shared objects, which are always returned by value. Return "
"``QObject`` or subclassed objects as pointers."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:110
msgid "``int maximumValue() const``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:111
msgid "``const LayerSet& layers() const``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:112
msgid "``QString title() const`` (``QString`` is implicitly shared)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:113
msgid "``QList< QgsMapLayer* > layers() const`` (``QList`` is implicitly shared)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:114
msgid ""
"``QgsVectorLayer *layer() const;`` (``QgsVectorLayer`` inherits "
"``QObject``)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:115
msgid ""
"``QgsAbstractGeometry *geometry() const;`` (``QgsAbstractGeometry`` is "
"abstract and will probably need to be casted)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:120
msgid "API Documentation"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:122
msgid ""
"It is required to write API documentation for every class, method, enum "
"and other code that is available in the public API."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:125
msgid ""
"QGIS uses Doxygen for documentation. Write descriptive and meaningful "
"comments that give a reader information about what to expect, what "
"happens in edge cases and give hints about other interfaces he could be "
"looking for, best best practice and code samples."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:131
msgid "Methods"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:133
msgid ""
"Method descriptions should be written in a descriptive form, using the "
"3rd person. Methods require a ``\\since`` tag that defines when they have"
" been introduced. You should add additional ``\\since`` tags for "
"important changes that were introduced later on."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:154
msgid "Members Variables"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:156
msgid ""
"Member variables should normally be in the ``private`` section and made "
"available via getters and setters. One exception to this is for data "
"containers like for error reporting. In such cases do not prefix the "
"member with an ``m``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:186
msgid "Qt Designer"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:189
msgid "Generated Classes"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:191
msgid ""
"QGIS classes that are generated from Qt Designer (ui) files should have a"
" Base suffix. This identifies the class as a generated base class."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:196
msgid "``QgsPluginManagerBase``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:197
msgid "``QgsUserOptionsBase``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:201
msgid "Dialogs"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:203
msgid ""
"All dialogs should implement tooltip help for all toolbar icons and other"
" relevant widgets. Tooltips add greatly to feature discoverability for "
"both new and experienced users."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:207
msgid ""
"Ensure that the tab order for widgets is updated whenever the layout of a"
" dialog changes."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:212
msgid "C++ Files"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:217
msgid ""
"C++ implementation and header files should have a .cpp and .h extension "
"respectively. Filename should be all lowercase and, in the case of "
"classes, match the class name."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:221
msgid ""
"Example: Class ``QgsFeatureAttribute`` source files are "
":file:`qgsfeatureattribute.cpp` and :file:`qgsfeatureattribute.h`"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:225
msgid ""
"In case it is not clear from the statement above, for a filename to match"
" a class name it implicitly means that each class should be declared and "
"implemented in its own file. This makes it much easier for newcomers to "
"identify where the code is relating to specific class."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:232
msgid "Standard Header and License"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:234
msgid ""
"Each source file should contain a header section patterned after the "
"following example:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:254
msgid ""
"There is a template for Qt Creator in git. To use it, copy it from "
":file:`doc/qt_creator_license_template` to a local location, adjust the "
"mail address and - if required - the name and configure QtCreator to use "
"it: :menuselection:`Tools --> Options --> C++ --> File Naming`."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:261
msgid "Variable Names"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:263
msgid ""
"Local variable names begin with a lower case letter and are formed using "
"mixed case. Do not use prefixes like ``my`` or ``the``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:268
msgid "``mapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:269
msgid "``currentExtent``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:273
msgid "Enumerated Types"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:275
msgid "Enumerated types should be named in CamelCase with a leading capital e.g.:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:287
msgid ""
"Do not use generic type names that will conflict with other types. e.g. "
"use ``UnkownUnit`` rather than ``Unknown``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:291
msgid "Global Constants & Macros"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:293
msgid ""
"Global constants and macros should be written in upper case underscore "
"separated e.g.:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:302
msgid "Qt Signals and Slots"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:304
msgid ""
"All signal/slot connects should be made using the \"new style\" connects "
"available in Qt5. Futher information on this requirement is available in "
"`QEP #77 <https://github.com/qgis/QGIS-Enhancement-"
"Proposals/issues/77>`_."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:308
msgid ""
"Avoid use of Qt auto connect slots (i.e. those named ``void "
"on_mSpinBox_valueChanged``). Auto connect slots are fragile and prone to "
"breakage without warning if dialogs are refactored."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:314
msgid "Editing"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:316
msgid ""
"Any text editor/IDE can be used to edit QGIS code, providing the "
"following requirements are met."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:320
msgid "Tabs"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:322
msgid ""
"Set your editor to emulate tabs with spaces. Tab spacing should be set to"
" 2 spaces."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:325
msgid "In vim this is done with ``set expandtab ts=2``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:328
msgid "Indentation"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:330
msgid ""
"Source code should be indented to improve readability. There is a "
":file:`scripts/prepare-commit.sh` that looks up the changed files and "
"reindents them using astyle. This should be run before committing. You "
"can also use :file:`scripts/astyle.sh` to indent individual files."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:335
msgid ""
"As newer versions of astyle indent differently than the version used to "
"do a complete reindentation of the source, the script uses an old astyle "
"version, that we include in our repository (enable ``WITH_ASTYLE`` in "
"cmake to include it in the build)."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:341
msgid "Braces"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:343
msgid "Braces should start on the line following the expression:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:359
msgid "API Compatibility"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:361
msgid "There is `API documentation <https://qgis.org/api/>`_ for C++."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:363
msgid ""
"We try to keep the API stable and backwards compatible. Cleanups to the "
"API should be done in a manner similar to the Qt sourcecode e.g."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:403
msgid "SIP Bindings"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:405
msgid ""
"Some of the SIP files are automatically generated using a dedicated "
"script."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:409
msgid "Header pre-processing"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:412
msgid ""
"All the information to properly build the SIP file must be found in the "
"C++ header file. Some macros are available for such definition:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:415
msgid ""
"Use ``#ifdef SIP_RUN`` to generate code only in SIP files or ``#ifndef "
"SIP_RUN`` for C++ code only. ``#else`` statements are handled in both "
"cases."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:418
msgid "Use ``SIP_SKIP`` to discard a line"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:419
msgid "The following annotations are handled:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:421
msgid "``SIP_FACTORY``: ``/Factory/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:422
msgid "``SIP_OUT``: ``/Out/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:423
msgid "``SIP_INOUT``: ``/In,Out/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:424
msgid "``SIP_TRANSFER``: ``/Transfer/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:425
msgid "``SIP_PYNAME(name)``: ``/PyName=name/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:426
msgid "``SIP_KEEPREFERENCE``: ``/KeepReference/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:427
msgid "``SIP_TRANSFERTHIS``: ``/TransferThis/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:428
msgid "``SIP_TRANSFERBACK``: ``/TransferBack/``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:430
msgid ""
"``private`` sections are not displayed, except if you use a ``#ifdef "
"SIP_RUN`` statement in this block."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:432
msgid ""
"``SIP_PYDEFAULTVALUE(value)`` can be used to define an alternative "
"default value of the python method. If the default value contains a comma"
" ``,``, the value should be surrounded by single quotes ``'``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:435
msgid ""
"``SIP_PYTYPE(type)`` can be used to define an alternative type for an "
"argument of the python method. If the type contains a comma ``,``, the "
"type should be surrounded by single quotes ``'``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:439
msgid "A demo file can be found in :file:`tests/scripts/sipifyheader.h`."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:442
msgid "Generating the SIP file"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:444
msgid "The SIP file can be generated using a dedicated script. For instance:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:451
msgid ""
"As soon as a SIP file is added to one of the source file "
"(:file:`python/core/core.sip`, :file:`python/gui/gui.sip` or "
":file:`python/analysis/analysis.sip`), it will be considered as generated"
" automatically. A test on Travis will ensure that this file is up to date"
" with its corresponding header."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:457
msgid ""
"Older files for which the automatic creation is not enabled yet are "
"listed in :file:`python/auto_sip.blacklist`."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:461
msgid "Improving sipify script"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:463
msgid ""
"If some improvements are required for sipify script, please add the "
"missing bits to the demo file :file:`tests/scripts/sipifyheader.h` and "
"create the expected header "
":file:`tests/scripts/sipifyheader.expected.si`. This will also be "
"automatically tested on Travis as a unit test of the script itself."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:470
msgid "Coding Style"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:473
msgid ""
"Here are described some programming hints and tips that will hopefully "
"reduce errors, development time and maintenance."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:478
msgid "Where-ever Possible Generalize Code"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:481
msgid ""
"If you are cut-n-pasting code, or otherwise writing the same thing more "
"than once, consider consolidating the code into a single function."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:484
msgid "This will:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:486
msgid "allow changes to be made in one location instead of in multiple places"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:487
msgid "help prevent code bloat"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:488
msgid ""
"make it more difficult for multiple copies to evolve differences over "
"time, thus making it harder to understand and maintain for others"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:493
msgid "Prefer Having Constants First in Predicates"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:495
msgid "Prefer to put constants first in predicates."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:497
msgid "``0 == value`` instead of ``value == 0``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:499
msgid ""
"This will help prevent programmers from accidentally using ``=`` when "
"they meant to use ``==``, which can introduce very subtle logic bugs. The"
" compiler will generate an error if you accidentally use ``=`` instead of"
" ``==`` for comparisons since constants inherently cannot be assigned "
"values."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:505
msgid "Whitespace Can Be Your Friend"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:507
msgid ""
"Adding spaces between operators, statements, and functions makes it "
"easier for humans to parse code."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:510
msgid "Which is easier to read, this:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:516
msgid "or this:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:522
msgid ":file:`scripts/prepare-commit.sh` will take care of this."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:526
msgid "Put commands on separate lines"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:528
msgid ""
"When reading code it's easy to miss commands, if they are not at the "
"beginning of the line. When quickly reading through code, it's common to "
"skip lines if they don't look like what you are looking for in the first "
"few characters. It's also common to expect a command after a conditional "
"like ``if``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:533
msgid "Consider:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:541
msgid "It's very easy to miss part of what the flow of control. Instead use"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:553
msgid "Indent access modifiers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:555
msgid ""
"Access modifiers structure a class into sections of public API, protected"
" API and private API. Access modifiers themselves group the code into "
"this structure. Indent the access modifier and declarations."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:572
msgid "Book recommendations"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:575
msgid ""
"`Effective Modern C++ "
"<https://shop.oreilly.com/product/0636920033707.do>`_, Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:576
msgid ""
"`More Effective C++ <https://www.informit.com/store/more-effective-c"
"-plus-plus-35-new-ways-to-improve-your-9780201633719>`_, Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:577
msgid ""
"`Effective STL <https://www.informit.com/store/effective-stl-50-specific-"
"ways-to-improve-your-use-9780201749625>`_, Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:578
msgid ""
"`Design Patterns <https://www.amazon.com/Design-Patterns-Elements-"
"Reusable-Object-Oriented/dp/0201633612>`_, GoF"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:580
msgid ""
"You should also really read this article from Qt Quarterly on `designing "
"Qt style (APIs) <https://doc.qt.io/archives/qq/qq13-apis.html>`_"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:585
msgid "Credits for contributions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:587
msgid ""
"Contributors of new functions are encouraged to let people know about "
"their contribution by:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:590
msgid ""
"adding a note to the changelog for the first version where the code has "
"been incorporated, of the type::"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:596
msgid ""
"writing an article about the new feature on a blog, and add it to the "
"QGIS planet https://plugins.qgis.org/planet/"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:598
msgid "adding their name to:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:600
msgid "https://github.com/qgis/QGIS/blob/master/doc/CONTRIBUTORS"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:601
msgid "https://github.com/qgis/QGIS/blob/master/doc/AUTHORS"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:602
msgid "https://github.com/qgis/QGIS/blob/master/doc/contributors.json"
msgstr ""

#~ msgid "There is `API documentation <http://qgis.org/api/>`_ for C++."
#~ msgstr ""

#~ msgid ""
#~ "`Effective Modern C++ "
#~ "<http://shop.oreilly.com/product/0636920033707.do>`_, Scott "
#~ "Meyers"
#~ msgstr ""

#~ msgid ""
#~ "`More Effective C++ <http://www.informit.com/store"
#~ "/more-effective-c-plus-plus-35-new-ways-to-"
#~ "improve-your-9780201633719>`_, Scott Meyers"
#~ msgstr ""

#~ msgid ""
#~ "`Effective STL <http://www.informit.com/store"
#~ "/effective-stl-50-specific-ways-to-improve-"
#~ "your-use-9780201749625>`_, Scott Meyers"
#~ msgstr ""

#~ msgid ""
#~ "`Design Patterns <http://www.amazon.com/Design-"
#~ "Patterns-Elements-Reusable-Object-"
#~ "Oriented/dp/0201633612>`_, GoF"
#~ msgstr ""

#~ msgid ""
#~ "writing an article about the new "
#~ "feature on a blog, and add it "
#~ "to the QGIS planet "
#~ "http://plugins.qgis.org/planet/"
#~ msgstr ""

