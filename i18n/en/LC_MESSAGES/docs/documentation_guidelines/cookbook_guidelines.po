# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:9
msgid "Writing code in the PyQGIS Cookbook"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:11
msgid ""
"If you are planning to add or update some chapters of the :ref:`PyQGIS-"
"Developer-Cookbook`, then you should follow some rules to enable "
"automatic testing of the code snippets."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:15
msgid ""
"Testing is really important because it allows automatic checking of the "
"code. Code snippets with errors or code that uses outdated methods will "
"fail and the notification will help you fix the problems."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:19
msgid ""
"For testing, we use the `Sphinx doctest extension <https://www.sphinx-"
"doc.org/en/master/usage/extensions/doctest.html>`_. Refer to the "
"extension documentation for more detailed information."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:25
msgid "How to write testable code snippets"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:27
msgid ""
"Writing testable code snippets is not so different from the *old* method."
" Basically, you need to use a different Sphinx `directive`."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:31
msgid "Doctest sphinx directives"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:33
msgid ""
"Instead of embedding the code in a ``.. code-block:: python`` directive "
"(which would highlight the code syntax automatically), you now need to "
"embed it in a ``.. testcode::``. That is, instead of  this::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:42
msgid "You now use this::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:49
msgid ""
"After you wrote the example code, you should add some *assertion* that "
"will evaluate the code and that will be run automatically."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:52
msgid ""
"In the above example, you are creating a crs and with ``assert "
"crs.isValid()`` you **test** if it is valid. If the code has a wrong "
"python syntax or the ``crs.isValid()`` returns ``False``, this code "
"snippet will fail during testing."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:56
msgid ""
"To successfully run the tests on snippets, you must import all the "
"classes and declare any variables used in the code snippets. You can "
"include those in the code snippet itself (visible in the HTML pages) or "
"you can add them to a ``.. testsetup::`` directive (hidden in the HTML "
"pages). The ``.. testsetup::`` needs to be placed before the ``.. "
"testcode::``::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:71
msgid ""
"If the code snippet is not creating an object (and therefore you cannot "
"use something like ``assert object.isValid()``) you can still compare the"
" output with another directive using the ``print()`` method. If your code"
" has printed outputs, you need to add the expected results within a ``.. "
"testoutput::`` to compare the expected output::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:87
msgid ""
"By default, the content of `.. testoutput::` is shown in the HTLM output."
" To hide it from the HTML use the `:hide:` option::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:97
msgid "Grouping tests"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:99
msgid ""
"For each rst document, the code snippets are tested sequentially, which "
"means you can use one ``.. testsetup::`` for all the following code "
"snippets and that later snippets will have access to variables declared "
"in earlier ones in the document."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:103
msgid ""
"Alternatively, you can use groups to break down the examples on the same "
"page in different tests."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:106
msgid ""
"You add the code snippet to groups by adding one or more group names "
"(separated by commas) in the respective directive::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:114
msgid "The ``doctest`` will pick each group snippets and run them independently."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:118
msgid ""
"Use group names that make sense with the related content. Use something "
"similar to <chapter>_<subchapter>, for example: crs_intro, crs_fromwkt. "
"In case of failures, this will help identifying where the failures occur."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:123
msgid ""
"If you don't declare any group, the code snippet will be added to a group"
" named ``default``. If instead, you use ``*`` as a group name, the "
"snippet will be used in all testing groups, something normally usefull to"
" use in the test setup::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:132
msgid "How to test snippets on your local machine"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:134
msgid "instructions are valid for Linux system."
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:136
msgid ""
"To test Python code snippets, you need a *QGIS* installation. For this, "
"there are many options:"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:139
msgid ""
"You can use your system *QGIS* installation with *Sphinx* from a Python "
"virtual environment::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:144
msgid ""
"You can use a manually built installation of *QGIS*, to do so, you need "
"to create a custom ``Makefile`` extension on top of the ``venv.mk`` file,"
" for example a ``user.mk`` file with the following content::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:156
msgid "Then, use it to run target ``doctest``::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:160
msgid ""
"Or you can run target ``doctest`` inside the official *QGIS* docker "
"image::"
msgstr ""

#: ../../source/docs/documentation_guidelines/cookbook_guidelines.rst:164
msgid ""
"You have to install `Docker <https://www.docker.com/>`_ first because we "
"will use a docker image with QGIS in it."
msgstr ""

