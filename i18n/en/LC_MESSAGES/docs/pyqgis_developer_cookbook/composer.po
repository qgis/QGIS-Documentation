# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:11
msgid "Map Rendering and Printing"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:16
msgid ""
"There are generally two approaches when input data should be rendered as "
"a map: either do it quick way using :class:`QgsMapRenderer` or produce "
"more fine-tuned output by composing the map with :class:`QgsComposition` "
"class and friends."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:23
msgid "Simple Rendering"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:25
msgid ""
"Render some layers using :class:`QgsMapRenderer` --- create destination "
"paint device (``QImage``, ``QPainter`` etc.), set up layer set, extent, "
"output size and do the rendering"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:68
msgid "Rendering layers with different CRS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:70
msgid ""
"If you have more than one layer and they have a different CRS, the simple"
" example above will probably not work: to get the right values from the "
"extent calculations you have to explicitly set the destination CRS and "
"enable OTF reprojection as in the example below (only the renderer "
"configuration part is reported)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:95
msgid "Output using Map Composer"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:97
msgid ""
"Map composer is a very handy tool if you would like to do a more "
"sophisticated output than the simple rendering shown above. Using the "
"composer it is possible to create complex map layouts consisting of map "
"views, labels, legend, tables and other elements that are usually present"
" on paper maps. The layouts can be then exported to PDF, raster images or"
" directly printed on a printer."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:103
msgid ""
"The composer consists of a bunch of classes. They all belong to the core "
"library. QGIS application has a convenient GUI for placement of the "
"elements, though it is not available in the GUI library. If you are not "
"familiar with `Qt Graphics View framework "
"<http://doc.qt.io/qt-4.8/qgraphicsview.html>`_, then you are encouraged "
"to check the documentation now, because the composer is based on it. Also"
" check the `Python documentation of the implementation of QGraphicView "
"<http://pyqt.sourceforge.net/Docs/PyQt4/qgraphicsview.html>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:111
msgid ""
"The central class of the composer is :class:`QgsComposition` which is "
"derived from :class:`QGraphicsScene`. Let us create one"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:120
msgid ""
"Note that the composition takes an instance of :class:`QgsMapRenderer`. "
"In the code we expect we are running within QGIS application and thus use"
" the map renderer from map canvas. The composition uses various "
"parameters from the map renderer, most importantly the default set of map"
" layers and the current extent. When using composer in a standalone "
"application, you can create your own map renderer instance the same way "
"as shown in the section above and pass it to the composition."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:128
msgid ""
"It is possible to add various elements (map, label, ...) to the "
"composition --- these elements have to be descendants of "
":class:`QgsComposerItem` class. Currently supported items are:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:132
msgid ""
"map --- this item tells the libraries where to put the map itself. Here "
"we create a map and stretch it over the whole paper size"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:142
msgid ""
"label --- allows displaying labels. It is possible to modify its font, "
"color, alignment and margin"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:152
msgid "legend"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:160
msgid "scale bar"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:170
msgid "arrow"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:171
msgid "picture"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:172
msgid "basic shape"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:173
msgid "nodes based shape"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:197
msgid "table"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:199
msgid ""
"By default the newly created composer items have zero position (top left "
"corner of the page) and zero size. The position and size are always "
"measured in millimeters"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:210
msgid "A frame is drawn around each item by default. How to remove the frame"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:216
msgid ""
"Besides creating the composer items by hand, QGIS has support for "
"composer templates which are essentially compositions with all their "
"items saved to a .qpt file (with XML syntax). Unfortunately this "
"functionality is not yet available in the API."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:221
msgid ""
"Once the composition is ready (the composer items have been created and "
"added to the composition), we can proceed to produce a raster and/or "
"vector output."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:224
msgid ""
"The default output settings for composition are page size A4 and "
"resolution 300 DPI. You can change them if necessary. The paper size is "
"specified in millimeters"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:236
msgid "Output to a raster image"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:238
msgid ""
"The following code fragment shows how to render a composition to a raster"
" image"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:263
msgid "Output to PDF"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:265
msgid "The following code fragment renders a composition to a PDF file"
msgstr ""

