# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:6
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:12
msgid "Introduction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:14
msgid ""
"This document is intended to be both a tutorial and a reference guide. "
"While it does not list all possible use cases, it should give a good "
"overview of the principal functionality."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:21
msgid ""
"Python support was first introduced in QGIS 0.9. Today, there are several"
" ways to use Python in QGIS Desktop, they are covered in the following "
"sections:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:25
msgid "Issue commands in the Python console within QGIS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:26
msgid "Create and use plugins"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:27
msgid "Automatically run Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:28
msgid "Create custom applications based on the QGIS API"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:30
msgid ""
"Python bindings are also available for QGIS Server, including Python "
"plugins (see :ref:`server_plugins`) and Python bindings that can be used "
"to embed QGIS Server into a Python application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:37
msgid ""
"There is a `complete QGIS API <https://qgis.org/api/>`_ reference that "
"documents the classes from the QGIS libraries. `The Pythonic QGIS API "
"(pyqgis) <https://qgis.org/pyqgis>`_ is nearly identical to the C++ API."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:41
msgid ""
"A good resource for learning how to perform common tasks is to download "
"existing plugins from the `plugin repository "
"<https://plugins.qgis.org/>`_ and examine their code."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:52
msgid "Scripting in the Python Console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:54
msgid ""
"QGIS provides an integrated :ref:`Python console <console>` for "
"scripting. It can be opened from the :menuselection:`Plugins --> Python "
"Console` menu:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:61
msgid "QGIS Python console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:63
msgid ""
"The screenshot above illustrates how to get the layer currently selected "
"in the layer list, show its ID and optionally, if it is a vector layer, "
"show the feature count. For interaction with the QGIS environment, there "
"is a :data:`iface` variable, which is an instance of "
":class:`QgisInterface <qgis.gui.QgisInterface>`. This interface allows "
"access to the map canvas, menus, toolbars and other parts of the QGIS "
"application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:71
msgid ""
"For user convenience, the following statements are executed when the "
"console is started (in the future it will be possible to set further "
"initial commands)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:80
msgid ""
"For those which use the console often, it may be useful to set a shortcut"
" for triggering the console (within :menuselection:`Settings --> "
"Configure shortcuts...`)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:87
msgid "Python Plugins"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:89
msgid ""
"The functionality of QGIS can be extended using plugins. It is now also "
"possible to use plugins written in Python. The main advantage over C++ "
"plugins is simplicity of distribution (no compiling for each platform) "
"and easier development."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:95
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to "
"easily fetch, upgrade and remove Python plugins. See the `Python Plugins "
"<https://plugins.qgis.org/>`_ page for more information about plugins and"
" plugin development."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:101
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:106
msgid ""
"Python plugins are also available for QGIS server "
"(:ref:`label_qgisserver`), see :ref:`server_plugins` for further details."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:115
msgid "Running Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:117
msgid "There are two distinct methods to run Python code every time QGIS starts."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:120
msgid "Creating a startup.py script"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:122
msgid ""
"Setting the ``PYQGIS_STARTUP`` environment variable to an existing Python"
" file"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:129
msgid "The :file:`startup.py` file"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:131
msgid "Every time QGIS starts, the user's Python home directory"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:133
msgid "Linux: :file:`.local/share/QGIS/QGIS3/profiles/default/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:134
msgid ""
"Windows: "
":file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3\\\\profiles\\\\default\\\\python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:135
msgid "macOS: :file:`Library/Application Support/QGIS/QGIS3/profiles/default`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:137
msgid ""
"is searched for a file named :file:`startup.py`. If that file exists, it "
"is executed by the embedded Python interpreter."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:140
msgid ""
"The default path depends on the operating system. To find the path that "
"will work for you, open the Python Console and run "
"``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)`` to "
"see the list of default directories."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:149
msgid "PYQGIS_STARTUP environment variable"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:151
msgid ""
"You can run Python code just before QGIS initialization completes by "
"setting the ``PYQGIS_STARTUP`` environment variable to the path of an "
"existing Python file."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:155
msgid ""
"This code will run before QGIS initialization is complete. This method is"
" very useful for cleaning sys.path, which may have undesireable paths, or"
" for isolating/loading the initial environ without requiring a virtual "
"environment, e.g. homebrew or MacPorts installs on Mac."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:168
msgid "Python Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:170
msgid ""
"It is often handy to create  scripts for automating processes. With "
"PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` "
"module, initialize it and you are ready for the processing."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:175
msgid ""
"Or you may want to create an interactive application that uses GIS "
"functionality --- perform measurements, export a map as PDF, or any other"
" functionality. The :mod:`qgis.gui` module brings various GUI components,"
" most notably the map canvas widget that can be incorporated into the "
"application with support for zooming, panning and/or any further custom "
"map tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:182
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources such as projection information, providers for "
"reading vector and raster layers, etc. QGIS Resources are initialized by "
"adding a few lines to the beginning of your application or script. The "
"code to initialize QGIS for custom applications and standalone scripts is"
" similar. Examples of each are provided below."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:192
msgid ""
"Do *not* use :file:`qgis.py` as a name for your test script Python will "
"not be able to import the bindings as the script's name will shadow them."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:199
msgid "Using PyQGIS in standalone scripts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:201
msgid ""
"To start a standalone script, initialize the QGIS resources at the "
"beginning of the script similar to the following code:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:226
msgid ""
"We begin by importing the :mod:`qgis.core` module and then configuring "
"the prefix path. The prefix path is the location where QGIS is installed "
"on your system. It is configured in the script by calling the "
"``setPrefixPath`` method. The second argument of ``setPrefixPath`` is set"
" to :const:`True`, which controls whether the default paths are used."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:233
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your your system is to use the :ref:`pythonconsole` from within QGIS and "
"look at the output from running ``QgsApplication.prefixPath()``."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:238
msgid ""
"After the prefix path is configured, we save a reference to "
"``QgsApplication`` in the variable ``qgs``. The second argument is set to"
" ``False``, which indicates that we do not plan to use the GUI since we "
"are writing a standalone script. With the ``QgsApplication`` configured, "
"we load the QGIS data providers and layer registry by calling the "
"``qgs.initQgis()`` method. With QGIS initialized, we are ready to write "
"the rest of the script. Finally, we wrap up by calling ``qgs.exitQgis()``"
" to remove the data providers and layer registry from memory."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:250
msgid "Using PyQGIS in custom applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:252
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
"``QgsApplication``. Pass :const:`True` instead of ``False`` to indicate "
"that we plan to use a GUI."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:281
msgid ""
"Now you can work with the QGIS API --- load layers and do some processing"
" or fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:289
msgid "Running Custom Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:291
msgid ""
"You will need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location --- "
"otherwise Python will complain::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:298
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In "
"the following commands, ``<qgispath>`` should be replaced with your "
"actual QGIS installation path:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:302
msgid "on Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:303
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:304
msgid ""
"on macOS: :command:`export "
"PYTHONPATH=/<qgispath>/Contents/Resources/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:306
msgid ""
"The path to the PyQGIS modules is now known, however they depend on the "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only "
"as wrappers). The path to these libraries is typically unknown to the "
"operating system, so you get an import error again (the message might "
"vary depending on the system)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:316
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to "
"search path of the dynamic linker:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:319
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:320
msgid ""
"on Windows: :command:`set "
"PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%`"
" where ``<qgisrelease>`` should be replaced with the type of release you "
"are targeting (eg, ``qgis-ltr``, ``qgis``, ``qgis-dev``)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:324
msgid ""
"These commands can be put into a bootstrap script that will take care of "
"the startup. When deploying custom applications using PyQGIS, there are "
"usually two possibilities:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:328
msgid ""
"require the user to install QGIS on his platform prior to installing your"
" application. The application installer should look for default locations"
" of QGIS libraries and allow user to set the path if not found. This "
"approach has the advantage of being simpler, however it requires the user"
" to do more steps."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:334
msgid ""
"package QGIS together with your application. Releasing the application "
"may be more challenging and the package will be larger, but the user will"
" be saved from the burden of downloading and installing additional pieces"
" of software."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:339
msgid ""
"The two deployment models can be mixed - deploy standalone application on"
" Windows and macOS, for Linux leave the installation of QGIS up to user "
"and his package manager."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:344
msgid "Technical notes on PyQt and SIP"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:346
msgid ""
"We've decided for Python as it's one of the most favoured languages for "
"scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason "
"for using SIP instead of more widely used SWIG is that the QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are also done "
"using SIP and this allows seamless integration of PyQGIS with PyQt."
msgstr ""

#~ msgid ""
#~ "This document is intended to work "
#~ "both as a tutorial and a reference"
#~ " guide. While it does not list "
#~ "all possible use cases, it should "
#~ "give a good overview of the "
#~ "principal functionality."
#~ msgstr ""

#~ msgid ""
#~ "Starting from 0.9 release, QGIS has "
#~ "optional scripting support using Python "
#~ "language. We've decided for Python as"
#~ " it's one of the most favourite "
#~ "languages for scripting. PyQGIS bindings "
#~ "depend on SIP and PyQt4. The "
#~ "reason for using SIP instead of "
#~ "more widely used SWIG is that the"
#~ " whole QGIS code depends on Qt "
#~ "libraries. Python bindings for Qt (PyQt)"
#~ " are done also using SIP and "
#~ "this allows seamless integration of "
#~ "PyQGIS with PyQt."
#~ msgstr ""

#~ msgid ""
#~ "There are several ways how to use"
#~ " Python bindings in QGIS desktop, "
#~ "they are covered in detail in the"
#~ " following sections:"
#~ msgstr ""

#~ msgid "automatically run Python code when QGIS starts"
#~ msgstr ""

#~ msgid "issue commands in Python console within QGIS"
#~ msgstr ""

#~ msgid "create and use plugins in Python"
#~ msgstr ""

#~ msgid "create custom applications based on QGIS API"
#~ msgstr ""

#~ msgid "Python bindings are also available for QGIS Server:"
#~ msgstr ""

#~ msgid ""
#~ "starting from 2.8 release, Python "
#~ "plugins are also available on QGIS "
#~ "Server (see :ref:`Server Python Plugins "
#~ "<server_plugins>`)"
#~ msgstr ""

#~ msgid ""
#~ "starting from 2.11 version (Master at"
#~ " 2015-08-11), QGIS Server library has "
#~ "Python bindings that can be used "
#~ "to embed QGIS Server into a Python"
#~ " application."
#~ msgstr ""

#~ msgid ""
#~ "There is a `complete QGIS API "
#~ "<http://qgis.org/api/>`_ reference that documents"
#~ " the classes from the QGIS libraries."
#~ " Pythonic QGIS API is nearly "
#~ "identical to the API in C++."
#~ msgstr ""

#~ msgid ""
#~ "A good resource when dealing with "
#~ "plugins is to download some plugins "
#~ "from `plugin repository <http://plugins.qgis.org/>`_"
#~ " and examine their code. Also, the"
#~ " ``python/plugins/`` folder in your QGIS"
#~ " installation contains some plugin that "
#~ "you can use to learn how to "
#~ "develop such plugin and how to "
#~ "perform some of the most common "
#~ "tasks."
#~ msgstr ""

#~ msgid "Run Python code when QGIS starts"
#~ msgstr ""

#~ msgid ""
#~ "You can run Python code just "
#~ "before QGIS initialization completes by "
#~ "setting the ``PYQGIS_STARTUP`` environment "
#~ "variable  to the path of an "
#~ "existing Python file."
#~ msgstr ""

#~ msgid ""
#~ "This method is something you will "
#~ "probably rarely need, but worth "
#~ "mentioning here because it is one "
#~ "of the several ways to run Python"
#~ " code within QGIS and because this"
#~ " code will run before QGIS "
#~ "initialization is complete. This method "
#~ "is very useful for cleaning sys.path,"
#~ " which may have undesireable paths, "
#~ "or for isolating/loading the initial "
#~ "environ without requiring a virt env,"
#~ " e.g. homebrew or MacPorts installs "
#~ "on Mac."
#~ msgstr ""

#~ msgid ""
#~ "Every time QGIS starts, the user's "
#~ "Python home directory (usually: "
#~ ":file:`.qgis2/python`) is searched for a "
#~ "file named :file:`startup.py`, if that "
#~ "file exists, it is executed by the"
#~ " embedded Python interpreter."
#~ msgstr ""

#~ msgid "Python Console"
#~ msgstr ""

#~ msgid ""
#~ "For scripting, it is possible to "
#~ "take advantage of integrated Python "
#~ "console. It can be opened from "
#~ "menu: :menuselection:`Plugins --> Python "
#~ "Console`. The console opens as a "
#~ "non-modal utility window:"
#~ msgstr ""

#~ msgid ""
#~ "The screenshot above illustrates how to"
#~ " get the layer currently selected in"
#~ " the layer list, show its ID "
#~ "and optionally, if it is a vector"
#~ " layer, show the feature count. For"
#~ " interaction with QGIS environment, there"
#~ " is a :data:`iface` variable, which "
#~ "is an instance of :class:`QgsInterface`. "
#~ "This interface allows access to the "
#~ "map canvas, menus, toolbars and other"
#~ " parts of the QGIS application."
#~ msgstr ""

#~ msgid ""
#~ "For convenience of the user, the "
#~ "following statements are executed when "
#~ "the console is started (in future "
#~ "it will be possible to set further"
#~ " initial commands)"
#~ msgstr ""

#~ msgid ""
#~ "For those which use the console "
#~ "often, it may be useful to set "
#~ "a shortcut for triggering the console"
#~ " (within menu :menuselection:`Settings --> "
#~ "Configure shortcuts...`)"
#~ msgstr ""

#~ msgid ""
#~ "QGIS allows enhancement of its "
#~ "functionality using plugins. This was "
#~ "originally possible only with C++ "
#~ "language. With the addition of Python"
#~ " support to QGIS, it is also "
#~ "possible to use plugins written in "
#~ "Python. The main advantage over C++ "
#~ "plugins is its simplicity of "
#~ "distribution (no compiling for each "
#~ "platform needed) and easier development."
#~ msgstr ""

#~ msgid ""
#~ "Many plugins covering various functionality"
#~ " have been written since the "
#~ "introduction of Python support. The "
#~ "plugin installer allows users to easily"
#~ " fetch, upgrade and remove Python "
#~ "plugins. See the `Python Plugin "
#~ "Repositories "
#~ "<http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page "
#~ "for various sources of plugins."
#~ msgstr ""

#~ msgid ""
#~ "Python plugins are also available in "
#~ "QGIS server (:ref:`label_qgisserver`), see "
#~ ":ref:`server_plugins` for further details."
#~ msgstr ""

#~ msgid ""
#~ "Often when processing some GIS data, "
#~ "it is handy to create some scripts"
#~ " for automating the process instead "
#~ "of doing the same task again and"
#~ " again. With PyQGIS, this is "
#~ "perfectly possible --- import the "
#~ ":mod:`qgis.core` module, initialize it and "
#~ "you are ready for the processing."
#~ msgstr ""

#~ msgid ""
#~ "Or you may want to create an "
#~ "interactive application that uses some "
#~ "GIS functionality --- measure some data,"
#~ " export a map in PDF or any "
#~ "other functionality. The :mod:`qgis.gui` "
#~ "module additionally brings various GUI "
#~ "components, most notably the map canvas"
#~ " widget that can be very easily "
#~ "incorporated into the application with "
#~ "support for zooming, panning and/or any"
#~ " further custom map tools."
#~ msgstr ""

#~ msgid ""
#~ "PyQGIS custom applications or standalone "
#~ "scripts must be configured to locate "
#~ "the QGIS resources such as projection"
#~ " information, providers for reading vector"
#~ " and raster layers, etc. QGIS "
#~ "Resources are initialized by adding a"
#~ " few lines to the beginning of "
#~ "your application or script. The code "
#~ "to initialize QGIS for custom "
#~ "applications and standalone scripts is "
#~ "similar, but examples of each are "
#~ "provided below."
#~ msgstr ""

#~ msgid ""
#~ "Note: do *not* use :file:`qgis.py` as"
#~ " a name for your test script "
#~ "--- Python will not be able to "
#~ "import the bindings as the script's "
#~ "name will shadow them."
#~ msgstr ""

#~ msgid ""
#~ "Now you can work with QGIS API "
#~ "--- load layers and do some "
#~ "processing or fire up a GUI with"
#~ " a map canvas. The possibilities are"
#~ " endless :-)"
#~ msgstr ""

#~ msgid ""
#~ "This can be fixed by setting the"
#~ " ``PYTHONPATH`` environment variable. In "
#~ "the following commands, ``qgispath`` should"
#~ " be replaced with your actual QGIS"
#~ " installation path:"
#~ msgstr ""

#~ msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
#~ msgstr ""

#~ msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
#~ msgstr ""

#~ msgid ""
#~ "The path to the PyQGIS modules is"
#~ " now known, however they depend on"
#~ " ``qgis_core`` and ``qgis_gui`` libraries "
#~ "(the Python modules serve only as "
#~ "wrappers). Path to these libraries is"
#~ " typically unknown for the operating "
#~ "system, so you get an import error"
#~ " again (the message might vary "
#~ "depending on the system)::"
#~ msgstr ""

#~ msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
#~ msgstr ""

#~ msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
#~ msgstr ""

#~ msgid ""
#~ "require user to install QGIS on "
#~ "his platform prior to installing your"
#~ " application. The application installer "
#~ "should look for default locations of "
#~ "QGIS libraries and allow user to "
#~ "set the path if not found. This"
#~ " approach has the advantage of being"
#~ " simpler, however it requires user to"
#~ " do more steps."
#~ msgstr ""

