# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:9
msgid "Introduction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:15
msgid ""
"This document is intended to work both as a tutorial and a reference "
"guide. While it does not list all possible use cases, it should give a "
"good overview of the principal functionality."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:19
msgid ""
"Starting from 0.9 release, QGIS has optional scripting support using "
"Python language. We've decided for Python as it's one of the most "
"favourite languages for scripting. PyQGIS bindings depend on SIP and "
"PyQt4. The reason for using SIP instead of more widely used SWIG is that "
"the whole QGIS code depends on Qt libraries. Python bindings for Qt "
"(PyQt) are done also using SIP and this allows seamless integration of "
"PyQGIS with PyQt."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:26
msgid ""
"There are several ways how to use Python bindings in QGIS desktop, they "
"are covered in detail in the following sections:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:29
msgid "automatically run Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:30
msgid "issue commands in Python console within QGIS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:31
msgid "create and use plugins in Python"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:32
msgid "create custom applications based on QGIS API"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:35
msgid "Python bindings are also available for QGIS Server:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:37
msgid ""
"starting from 2.8 release, Python plugins are also available on QGIS "
"Server (see :ref:`Server Python Plugins <server_plugins>`)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:39
msgid ""
"starting from 2.11 version (Master at 2015-08-11), QGIS Server library "
"has Python bindings that can be used to embed QGIS Server into a Python "
"application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:44
msgid ""
"There is a `complete QGIS API <http://qgis.org/api/>`_ reference that "
"documents the classes from the QGIS libraries. Pythonic QGIS API is "
"nearly identical to the API in C++."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:48
msgid ""
"A good resource when dealing with plugins is to download some plugins "
"from `plugin repository <http://plugins.qgis.org/>`_ and examine their "
"code. Also, the ``python/plugins/`` folder in your QGIS installation "
"contains some plugin that you can use to learn how to develop such plugin"
" and how to perform some of the most common tasks."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:58
msgid "Run Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:60
msgid "There are two distinct methods to run Python code every time QGIS starts."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:66
msgid "PYQGIS_STARTUP environment variable"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:68
msgid ""
"You can run Python code just before QGIS initialization completes by "
"setting the ``PYQGIS_STARTUP`` environment variable  to the path of an "
"existing Python file."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:71
msgid ""
"This method is something you will probably rarely need, but worth "
"mentioning here because it is one of the several ways to run Python code "
"within QGIS and because this code will run before QGIS initialization is "
"complete. This method is very useful for cleaning sys.path, which may "
"have undesireable paths, or for isolating/loading the initial environ "
"without requiring a virt env, e.g. homebrew or MacPorts installs on Mac."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:83
msgid "The :file:`startup.py` file"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:85
msgid ""
"Every time QGIS starts, the user's Python home directory (usually: "
":file:`.qgis2/python`) is searched for a file named :file:`startup.py`, "
"if that file exists, it is executed by the embedded Python interpreter."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:96
msgid "Python Console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:98
msgid ""
"For scripting, it is possible to take advantage of integrated Python "
"console. It can be opened from menu: :menuselection:`Plugins --> Python "
"Console`. The console opens as a non-modal utility window:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:106
msgid "QGIS Python console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:108
msgid ""
"The screenshot above illustrates how to get the layer currently selected "
"in the layer list, show its ID and optionally, if it is a vector layer, "
"show the feature count. For interaction with QGIS environment, there is a"
" :data:`iface` variable, which is an instance of :class:`QgsInterface`. "
"This interface allows access to the map canvas, menus, toolbars and other"
" parts of the QGIS application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:115
msgid ""
"For convenience of the user, the following statements are executed when "
"the console is started (in future it will be possible to set further "
"initial commands)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:124
msgid ""
"For those which use the console often, it may be useful to set a shortcut"
" for triggering the console (within menu :menuselection:`Settings --> "
"Configure shortcuts...`)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:131
msgid "Python Plugins"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:133
msgid ""
"QGIS allows enhancement of its functionality using plugins. This was "
"originally possible only with C++ language. With the addition of Python "
"support to QGIS, it is also possible to use plugins written in Python. "
"The main advantage over C++ plugins is its simplicity of distribution (no"
" compiling for each platform needed) and easier development."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:139
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to "
"easily fetch, upgrade and remove Python plugins. See the `Python Plugin "
"Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page"
" for various sources of plugins."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:145
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:150
msgid ""
"Python plugins are also available in QGIS server "
"(:ref:`label_qgisserver`), see :ref:`server_plugins` for further details."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:161
msgid "Python Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:163
msgid ""
"Often when processing some GIS data, it is handy to create some scripts "
"for automating the process instead of doing the same task again and "
"again. With PyQGIS, this is perfectly possible --- import the "
":mod:`qgis.core` module, initialize it and you are ready for the "
"processing."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:168
msgid ""
"Or you may want to create an interactive application that uses some GIS "
"functionality --- measure some data, export a map in PDF or any other "
"functionality. The :mod:`qgis.gui` module additionally brings various GUI"
" components, most notably the map canvas widget that can be very easily "
"incorporated into the application with support for zooming, panning "
"and/or any further custom map tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:175
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources such as projection information, providers for "
"reading vector and raster layers, etc. QGIS Resources are initialized by "
"adding a few lines to the beginning of your application or script. The "
"code to initialize QGIS for custom applications and standalone scripts is"
" similar, but examples of each are provided below."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:182
msgid ""
"Note: do *not* use :file:`qgis.py` as a name for your test script --- "
"Python will not be able to import the bindings as the script's name will "
"shadow them."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:188
msgid "Using PyQGIS in standalone scripts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:190
msgid ""
"To start a standalone script, initialize the QGIS resources at the "
"beginning of the script similar to the following code:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:213
msgid ""
"We begin by importing the :mod:`qgis.core` module and then configuring "
"the prefix path. The prefix path is the location where QGIS is installed "
"on your system. It is configured in the script by calling the "
"``setPrefixPath`` method. The second argument of ``setPrefixPath`` is set"
" to :const:`True`, which controls whether the default paths are used."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:219
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your your system is to use the :ref:`pythonconsole` from within QGIS and "
"look at the output from running ``QgsApplication.prefixPath()``."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:223
msgid ""
"After the prefix path is configured, we save a reference to "
"``QgsApplication`` in the variable ``qgs``. The second argument is set to"
" ``False``, which indicates that we do not plan to use the GUI since we "
"are writing a standalone script. With the ``QgsApplication`` configured, "
"we load the QGIS data providers and layer registry by calling the "
"``qgs.initQgis()`` method. With QGIS initialized, we are ready to write "
"the rest of the script. Finally, we wrap up by calling ``qgs.exitQgis()``"
" to remove the data providers and layer registry from memory."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:234
msgid "Using PyQGIS in custom applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:236
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
"``QgsApplication``. Pass :const:`True` instead of ``False`` to indicate "
"that we plan to use a GUI."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:262
msgid ""
"Now you can work with QGIS API --- load layers and do some processing or "
"fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:270
msgid "Running Custom Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:272
msgid ""
"You will need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location --- "
"otherwise Python will complain::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:279
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In "
"the following commands, ``qgispath`` should be replaced with your actual "
"QGIS installation path:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:283
msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:284
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:286
msgid ""
"The path to the PyQGIS modules is now known, however they depend on "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only "
"as wrappers). Path to these libraries is typically unknown for the "
"operating system, so you get an import error again (the message might "
"vary depending on the system)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:294
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to "
"search path of the dynamic linker:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:297
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:298
msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:300
msgid ""
"These commands can be put into a bootstrap script that will take care of "
"the startup. When deploying custom applications using PyQGIS, there are "
"usually two possibilities:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:304
msgid ""
"require user to install QGIS on his platform prior to installing your "
"application. The application installer should look for default locations "
"of QGIS libraries and allow user to set the path if not found. This "
"approach has the advantage of being simpler, however it requires user to "
"do more steps."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:310
msgid ""
"package QGIS together with your application. Releasing the application "
"may be more challenging and the package will be larger, but the user will"
" be saved from the burden of downloading and installing additional pieces"
" of software."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:315
msgid ""
"The two deployment models can be mixed - deploy standalone application on"
" Windows and macOS, for Linux leave the installation of QGIS up to user "
"and his package manager."
msgstr ""

