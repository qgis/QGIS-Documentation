# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:11
msgid "Geometry Handling"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:16
msgid ""
"Points, linestrings and polygons that represent a spatial feature are "
"commonly referred to as geometries. In QGIS they are represented with the"
" :class:`QgsGeometry` class. All possible geometry types are nicely shown"
" in `JTS discussion page "
"<http://www.vividsolutions.com/jts/discussion.htm#spatialDataModel>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:21
msgid ""
"Sometimes one geometry is actually a collection of simple (single-part) "
"geometries. Such a geometry is called a multi-part geometry. If it "
"contains just one type of simple geometry, we call it multi-point, multi-"
"linestring or multi-polygon. For example, a country consisting of "
"multiple islands can be represented as a multi-polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:27
msgid ""
"The coordinates of geometries can be in any coordinate reference system "
"(CRS). When fetching features from a layer, associated geometries will "
"have coordinates in CRS of the layer."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:34
msgid "Geometry Construction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:36
msgid "There are several options for creating a geometry:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:38
msgid "from coordinates"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:47
msgid "Coordinates are given using :class:`QgsPoint` class."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:49
msgid ""
"Polyline (Linestring) is represented by a list of points. Polygon is "
"represented by a list of linear rings (i.e. closed linestrings). First "
"ring is outer ring (boundary), optional subsequent rings are holes in the"
" polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:53
msgid ""
"Multi-part geometries go one level further: multi-point is a list of "
"points, multi-linestring is a list of linestrings and multi-polygon is a "
"list of polygons."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:57
msgid "from well-known text (WKT)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:63
msgid "from well-known binary (WKB)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:77
msgid "Access to Geometry"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:79
msgid ""
"First, you should find out geometry type, :func:`wkbType` method is the "
"one to use --- it returns a value from ``QGis.WkbType`` enumeration"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:93
msgid ""
"As an alternative, one can use :func:`type` method which returns a value "
"from ``QGis.GeometryType`` enumeration. There is also a helper function "
":func:`isMultipart` to find out whether a geometry is multipart or not."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:97
msgid ""
"To extract information from geometry there are accessor functions for "
"every vector type. How to use accessors"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:109
msgid ""
"The tuples (x,y) are not real tuples, they are :class:`QgsPoint` objects,"
" the values are accessible with :func:`x` and :func:`y` methods."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:112
msgid ""
"For multipart geometries there are similar accessor functions: "
":func:`asMultiPoint`, :func:`asMultiPolyline`, :func:`asMultiPolygon()`."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:118
msgid "Geometry Predicates and Operations"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:120
msgid ""
"QGIS uses GEOS library for advanced geometry operations such as geometry "
"predicates (:func:`contains`, :func:`intersects`, ...) and set operations"
" (:func:`union`, :func:`difference`, ...). It can also compute geometric "
"properties of geometries, such as area (in the case of polygons) or "
"lengths (for polygons and lines)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:126
msgid ""
"Here you have a small example that combines iterating over the features "
"in a given layer and performing some geometric computations based on "
"their geometries."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:139
msgid ""
"Areas and perimeters don't take CRS into account when computed using "
"these methods from the :class:`QgsGeometry` class. For a more powerful "
"area and distance calculation, the :class:`QgsDistanceArea` class can be "
"used. If projections are turned off, calculations will be planar, "
"otherwise they'll be done on the ellipsoid."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:153
msgid ""
"You can find many example of algorithms that are included in QGIS and use"
" these methods to analyze and transform vector data. Here are some links "
"to the code of a few of them."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:157
msgid "Additional information can be found in following sources:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:159
msgid ""
"Geometry transformation: `Reproject algorithm "
"<https://raw.github.com/qgis/QGIS/release-2_18/python/plugins/processing/algs/qgis/ReprojectLayer.py>`_"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:160
msgid ""
"Distance and area using the :class:`QgsDistanceArea` class: `Distance "
"matrix algorithm "
"<https://raw.github.com/qgis/QGIS/release-2_18/python/plugins/processing/algs/qgis/PointDistance.py>`_"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:161
msgid ""
"`Multi-part to single-part algorithm "
"<https://raw.github.com/qgis/QGIS/release-2_18/python/plugins/processing/algs/qgis/MultipartToSingleparts.py>`_"
msgstr ""

