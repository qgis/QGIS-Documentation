# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-28 10:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:7
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:12
msgid "Security Considerations"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:19
msgid ""
"Once the master password is entered, the API is open to access "
"authentication configs in the authentication database, similar to how "
"Firefox works. However, in the initial implementation, no wall against "
"PyQGIS access has been defined. This may lead to issues where a user "
"downloads/installs a malicious PyQGIS plugin or standalone app that gains"
" access to authentication credentials."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:25
msgid ""
"The quick solution for initial release of feature is to just not include "
"most PyQGIS bindings for the authentication system."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:28
msgid ""
"Another simple, though not robust, fix is to add a combobox in "
":menuselection:`Settings --> Options --> Authentication` (defaults to "
"\"never\"):"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:36
msgid ""
"Such an option's setting would need to be saved in a location non-"
"accessible to Python, e.g. the authentication database, and encrypted "
"with the master password."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:40
msgid "Another option may be to track which plugins the user has specifically"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:41
msgid ""
"allowed to access the authentication system, though it may be tricky to "
"deduce which plugin is actually making the call."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:45
msgid ""
"Sandboxing plugins, possibly in their own virtual environments, would "
"reduce 'cross-plugin' hacking of authentication configs from another "
"plugin that is authorized. This might mean limiting cross-plugin "
"communication as well, but maybe only between third-party plugins."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:50
msgid ""
"Another good solution is to issue code-signing certificates to vetted "
"plugin authors. Then validate the plugin's certificate upon loading. If "
"need be the user can also directly set an untrusted policy for the "
"certificate associated with the plugin using existing certificate "
"management dialogs."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:55
msgid "Alternatively, access to sensitive authentication system data from Python"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:56
msgid ""
"could never be allowed, and only the use of QGIS core widgets, or "
"duplicating authentication system integrations, would allow the plugin to"
" work with resources that have an authentication configuration, while "
"keeping master password and authentication config loading in the realm of"
" the main app."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:62
msgid ""
"The same security concerns apply to C++ plugins, though it will be harder"
" to restrict access, since there is no function binding to simply be "
"removed as with Python."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:67
msgid "Restrictions"
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:69
msgid ""
"The confusing `licensing and exporting`_ issues associated with OpenSSL "
"apply. In order for Qt to work with SSL certificates, it needs access to "
"the OpenSSL libraries. Depending upon how Qt was compiled, the default is"
" to dynamically link to the OpenSSL libs at run-time (to avoid the export"
" limitations)."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:74
msgid ""
"QCA follows a similar tactic, whereby linking to QCA incurs no "
"restrictions, because the qca-ossl (OpenSSL) plugin is loaded at run-"
"time. The qca-ossl plugin is directly linked to the OpenSSL libs. "
"Packagers would be the ones needing to ensure any OpenSSL-linking "
"restrictions are met, if they ship the plugin. Maybe.  I don't really "
"know. I'm not a lawyer."
msgstr ""

#: ../../source/docs/user_manual/auth_system/auth_considerations.rst:80
msgid ""
"The authentication system safely disables itself when ``qca-ossl`` is not"
" found at run-time."
msgstr ""

