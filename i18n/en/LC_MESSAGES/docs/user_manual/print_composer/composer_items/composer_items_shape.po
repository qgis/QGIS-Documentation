# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:6
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:9
msgid "Shape Items"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:16
msgid ""
"QGIS provides a couple of tools to draw regular or more complex shapes "
"over the print layout."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:20
msgid ""
"Unlike other print layout items, you can not style the frame nor the "
"background color of the shapes bounding frame (set to transparent by "
"default)."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:29
msgid "The Regular Shape Item"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:31
msgid ""
"The :guilabel:`Shape` item is a tool that helps to decorate your map with"
" regular shapes like triangle, rectangle, ellipse... You can add a "
"regular shape using the |addBasicShape| :sup:`Add Shape` tool which gives"
" access to particular tools like |addBasicRectangle| :sup:`Add "
"Rectangle`, |addBasicCircle| :sup:`Add Ellipse` and |addBasicTriangle| "
":sup:`Add Triangle`. Once you have selected the appropriate tool, you can"
" draw the item following :ref:`items creation instructions "
"<create_layout_item>`. Like other layout items, a regular shape can be "
"manipulated the same way as exposed in :ref:`interact_layout_item`."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:41
msgid ""
"Holding down the :kbd:`Shift` key while drawing the basic shape with the "
"click and drag method helps you create a perfect square, circle or "
"triangle."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:44
msgid ""
"The default shape item can be customized using its :guilabel:`Item "
"Properties` panel. Other than the :ref:`items common properties "
"<item_common_properties>`, this feature has the following functionalities"
" (see figure_layout_label):"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:53
msgid "Shape Item Properties Panel"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:55
msgid ""
"The :guilabel:`Main properties` group shows and allows you to switch the "
"type of the shape item (**Ellipse**, **Rectangle** or **Triangle**) "
"inside the given frame."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:58
msgid ""
"You can set the style of the shape using the advanced :ref:`symbol "
"<symbol-selector>` and :ref:`color <color-selector>` selector widget..."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:61
msgid ""
"For the rectangle shape, you can set in different units the value of the "
":guilabel:`Corner radius` to round of the corners."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:70
msgid "The Node-Based Shape Items"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:72
msgid ""
"While the |addBasicShape| :guilabel:`Add Shape` tool provides way to "
"create simple and predefined geometric item, the |addNodesShape| "
":guilabel:`Add Node Item` tool helps you create a custom and more "
"advanced geometric item. For polylines or polygons, you can draw as many "
"lines or sides as you want and vertices of the items can be independently"
" and directly manipulated using the |editNodesShape| :guilabel:`Edit "
"Nodes Item`. The item itself can be manipulated as exposed in "
":ref:`interact_layout_item`."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:80
msgid ""
"To add a node-based shape, click the |addNodesShape| :sup:`Add Node Item`"
" icon and select either |addPolygon| :sup:`Add Polygon` or |addPolyline| "
":sup:`Add Polyline` tool. Then perform left clicks to add nodes to your "
"current shape. If you hold down the :kbd:`Shift` key while drawing a "
"segment, it is constrained to follow an orientation multiple of 45\\ "
"|degrees|."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:86
msgid ""
"When you're done, a simple right click terminates the shape, allowing you"
" to customize the appearance in the :guilabel:`Item Properties` panel."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:94
msgid "Polygon Node Shape Item Properties Panel"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:96
msgid ""
"In the :guilabel:`Main properties`, you can set the style of the shape "
"using the advanced :ref:`symbol <symbol-selector>` and :ref:`color "
"<color-selector>` selector widget..."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:100
msgid ""
"For polyline node items, you can also parameterize the :guilabel:`Line "
"markers` i.e. add:"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:103
msgid "start and/or end markers with options:"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:105
msgid ":guilabel:`None`: draws a simple polyline."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:106
msgid ""
":guilabel:`Arrow`: adds a regular triangular arrow head that you can "
"customize."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:108
msgid ""
":guilabel:`SVG` marker: uses an :file:`SVG` file as arrow head of the "
"item."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:110
msgid "customize the arrow head:"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:112
msgid ":guilabel:`Arrow stroke color`: sets the stroke color of the arrow head."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:113
msgid ":guilabel:`Arrow fill color`: sets the fill color of the arrow head."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:114
msgid ":guilabel:`Arrow stroke width`: sets the stroke width of the arrow head."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:115
msgid ":guilabel:`Arrow head width`: sets the size of the arrow head."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:117
msgid ""
"SVG images are automatically rotated with the line. Stroke and fill "
"colors of QGIS predefined SVG images can be changed using the "
"corresponding options. Custom SVG may require some tags following this "
":ref:`instruction <parameterized_svg>`."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:126
msgid "Polyline Node Shape Item Properties Panel"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:133
msgid "The Arrow Item"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:135
msgid ""
"The |addArrow| :sup:`Add Arrow` tool is a shortcut to create an arrow-"
"enabled polyline by default and thus has same properties and behavior as "
"a polyline node item."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:139
msgid ""
"Actually, the arrow item can be used to add a simple arrow, for example, "
"to show the relation between two different print layout items. However, "
"to create a north arrow, the :ref:`image item <layout_picture_item>` "
"should be considered first as it gives access to a set of north arrows in"
" :file:`.SVG` format that you can sync with a map item so that it rotates"
" automatically with it."
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:146
msgid "Editing a node item geometry"
msgstr ""

#: ../../source/docs/user_manual/print_composer/composer_items/composer_items_shape.rst:148
msgid ""
"A specific tool is provided to edit node-based shapes through "
"|editNodesShape| :sup:`Edit Nodes Item`. Within this mode, you can select"
" a node by clicking on it (a marker is displayed on the selected node). A"
" selected node can be moved either by dragging it or by using the arrow "
"keys. Moreover, in this mode, you are able to add nodes to an existing "
"shape: double-click on a segment and a node is added at the place you "
"click. Finally, you can remove the currently selected node by hitting the"
" :kbd:`Del` key."
msgstr ""

#~ msgid ""
#~ "To add an arrow, click the "
#~ "|addArrow| :sup:`Add Arrow` icon, place "
#~ "the element holding down the left "
#~ "mouse button and drag a line to"
#~ " draw the arrow on the Print "
#~ "Composer canvas and position and "
#~ "customize the appearance in the scale"
#~ " bar :guilabel:`Item Properties` panel."
#~ msgstr ""

#~ msgid ""
#~ "When you also hold down the "
#~ ":kbd:`Shift` key while placing the "
#~ "arrow, it is placed in an angle"
#~ " of exactly 45\\ |degrees| ."
#~ msgstr ""

#~ msgid ""
#~ "The arrow item can be used to "
#~ "add a line or a simple arrow "
#~ "that can be used, for example, to"
#~ " show the relation between other "
#~ "print composer items. To create a "
#~ "north arrow, the image item should "
#~ "be considered first. QGIS has a "
#~ "set of North arrows in SVG format."
#~ " Furthermore you can connect an image"
#~ " item with a map so it can "
#~ "rotate automatically with the map (see"
#~ " :ref:`image_item`)."
#~ msgstr ""

#~ msgid "Arrow Item Properties Panel"
#~ msgstr ""

#~ msgid "Item Properties"
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Arrow` item properties panel"
#~ " allows you to configure an arrow "
#~ "item."
#~ msgstr ""

#~ msgid ""
#~ "The  **[Line style...]** button can be"
#~ " used to set the line style "
#~ "using the line style symbol editor."
#~ msgstr ""

#~ msgid ""
#~ "In :guilabel:`Arrows markers` you can "
#~ "select one of three radio buttons."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Default`: To draw a regular "
#~ "arrow, gives you options to style "
#~ "the arrow head"
#~ msgstr ""

#~ msgid ":guilabel:`None`: To draw a line without arrow head"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`SVG Marker`: To draw a line"
#~ " with an SVG :guilabel:`Start marker` "
#~ "and/or :guilabel:`End marker`"
#~ msgstr ""

#~ msgid ""
#~ "For :guilabel:`Default` Arrow marker you "
#~ "can use following options to style "
#~ "the arrow head."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Arrow outline color`: Set the "
#~ "outline color of the arrow head"
#~ msgstr ""

#~ msgid ":guilabel:`Arrow fill color`: Set the fill color of the arrow head"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Arrow outline width`: Set the "
#~ "outline width of the arrow head"
#~ msgstr ""

#~ msgid ":guilabel:`Arrow head width`: Set the size of the arrow head"
#~ msgstr ""

#~ msgid "For :guilabel:`SVG Marker` you can use following options."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Start marker`: Choose an SVG "
#~ "image to draw at the beginning of"
#~ " the line"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`End marker`: Choose an SVG "
#~ "image to draw at the end of "
#~ "the line"
#~ msgstr ""

#~ msgid ":guilabel:`Arrow head width`: Set the size of Start and/or End marker"
#~ msgstr ""

#~ msgid ""
#~ "SVG images are automatically rotated "
#~ "with the line. Outline and fill "
#~ "colors of QGIS predefined SVG images "
#~ "can be changed using the corresponding"
#~ " options. Custom SVG may require some"
#~ " tags following this :ref:`instruction "
#~ "<parameterized_svg>`."
#~ msgstr ""

#~ msgid "The Basic Shape Items"
#~ msgstr ""

#~ msgid ""
#~ "To add a basic shape (ellipse, "
#~ "rectangle, triangle), click the "
#~ "|addBasicShape| :sup:`Add basic shape` icon,"
#~ "  place the element holding down the"
#~ " left mouse. Customize the appearance "
#~ "in the :guilabel:`Item Properties` panel."
#~ msgstr ""

#~ msgid ""
#~ "When you also hold down the "
#~ ":kbd:`Shift` key while placing the basic"
#~ " shape you can create a perfect "
#~ "square, circle or triangle."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Shape` item properties panel"
#~ " allows you to select if you "
#~ "want to draw an ellipse, rectangle "
#~ "or triangle inside the given frame."
#~ msgstr ""

#~ msgid ""
#~ "You can set the style of the "
#~ "shape using the advanced symbol style"
#~ " dialog with which you can define "
#~ "its outline and fill color, fill "
#~ "pattern, use markers..."
#~ msgstr ""

#~ msgid ""
#~ "For the rectangle shape, you can "
#~ "set the value of the corner radius"
#~ " to round of the corners."
#~ msgstr ""

#~ msgid ""
#~ "Unlike other items, you can not "
#~ "style the frame or the background "
#~ "color of the frame."
#~ msgstr ""

#~ msgid ""
#~ "While arrow and basic shape items "
#~ "offer you simple and predefined "
#~ "geometric item to use, a node-"
#~ "based shape (polygon or polyline) helps"
#~ " you create a custom and more "
#~ "advanced geometric item. You can add "
#~ "as many lines or sides as you "
#~ "want to the item and independently "
#~ "and directly interact with each of "
#~ "its vertices."
#~ msgstr ""

#~ msgid ""
#~ "To add a node-based shape, click"
#~ " the |addNodesShape| :sup:`Add nodes item`"
#~ " icon. Then perform left clicks to"
#~ " add nodes to your current shape. "
#~ "When you're done, a simple right "
#~ "click terminates the shape. Customize "
#~ "the appearance in the :guilabel:`Item "
#~ "Properties` panel."
#~ msgstr ""

#~ msgid "Nodes Shape Item Properties Panel"
#~ msgstr ""

#~ msgid ""
#~ "You can set the style of the "
#~ "shape using the advanced symbol style"
#~ " dialog available thanks to the "
#~ "**[Change...]** button in :guilabel:`Main "
#~ "properties`."
#~ msgstr ""

#~ msgid ""
#~ "A specific tool is provided to "
#~ "edit node-based shapes through "
#~ "|editNodesShape| :sup:`Edit Nodes Item`. "
#~ "Within this mode, you can select a"
#~ " node by clicking on it (a "
#~ "marker is displayed on the selected "
#~ "node). A selected node can be "
#~ "moved either by dragging it or by"
#~ " using the arrow keys. Moreover, in"
#~ " this mode, you are able to add"
#~ " nodes to an existing shape. You "
#~ "just have to do a left click "
#~ "near a segment and if you are "
#~ "not too far from the shape, a "
#~ "node is added. Finally, you can "
#~ "remove the currently selected node by"
#~ " hitting the :kbd:`DEL` key."
#~ msgstr ""

