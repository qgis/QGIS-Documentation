# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:6
msgid "|updatedisclaimer|"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:12
msgid "The Vector Properties Dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:19
msgid ""
"The :guilabel:`Layer Properties` dialog for a vector layer provides "
"general settings to manage appearance of layer features in the map "
"(symbology, labeling, diagrams), interaction with the mouse (actions, map"
" tips, form design). It also provides information about the layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:24
msgid "To access the :guilabel:`Layer Properties` dialog:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:26
msgid ""
"In the :guilabel:`Layers` panel, double-click the layer or right-click "
"and select :guilabel:`Properties...` from the pop-up menu;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:28
msgid ""
"Go to :menuselection:`Layer --> Properties...` menu when the layer is "
"selected."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:30
msgid ""
"The vector :guilabel:`Layer Properties` dialog provides the following "
"sections:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:32
msgid "|metadata| :ref:`Information <vectorinformationmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:33
msgid "|system| :ref:`Source <vectorsourcemenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:34
msgid ""
"|symbology| :ref:`Symbology <vector_style_menu>` (also available in the "
":ref:`Layer styling panel <layer_styling_panel>`)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:36
msgid ""
"|labeling| :ref:`Labels <vector_labels_tab>` (also available in the "
":guilabel:`Layer styling` panel)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:38
msgid "|diagram| :ref:`Diagrams <sec_diagram>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:39
msgid ""
"|3d| :guilabel:`3D View` (also available in the :guilabel:`Layer styling`"
" panel)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:40
msgid "|sourceFields| :ref:`Source Fields <vector_fields_menu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:41
msgid "|formView| :ref:`Attributes Form <vector_attributes_menu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:42
msgid "|join| :ref:`Joins <sec_joins>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:43
msgid "|auxiliaryStorage| :ref:`Auxiliary Storage <vector_auxiliary_storage>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:44
msgid "|action| :ref:`Actions <actions_menu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:45
msgid "|display| :ref:`Display <maptips>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:46
msgid "|rendering| :ref:`Rendering <vectorrenderingmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:47
msgid "|expression| :ref:`Variables <vectorvariablesmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:48
msgid "|editMetadata| :ref:`Metadata <vectormetadatamenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:49
msgid "|dependencies| :ref:`Dependencies <vectordependenciesmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:50
msgid "|legend| :ref:`Legend <vectorlegendmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:51
msgid "|overlay| :ref:`QGIS Server <vectorservermenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:52
msgid "|digitizing| :ref:`Digitizing <digitizingmenu>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:53
msgid ""
"and optionally, new tabs added by :ref:`external plugins <plugins>` you "
"have installed. Those are not presented below."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:56
msgid "**Share full or partial properties of the layer styles**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:58
msgid ""
"The :menuselection:`Style` menu at the bottom of the dialog allows you to"
" import or export these or part of these properties from/to several "
"destination (file, clipboard, database). See :ref:`manage_custom_style`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:64
msgid ""
"Because properties (symbology, label, actions, default values, forms...) "
"of embedded layers (see :ref:`nesting_projects`) are pulled from the "
"original project file and to avoid changes that may break this behavior, "
"the layer properties dialog is made unavailable for these layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:73
msgid "Information Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:75
msgid ""
"|metadata| The :guilabel:`Information` tab is read-only and represents an"
" interesting place to quickly grab summarized information and metadata on"
" the current layer. Provided information are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:79
msgid ""
"based on the provider of the layer (format of storage, path, geometry "
"type, data source encoding, extent...);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:81
msgid ""
"picked from the :ref:`filled metadata <vectormetadatamenu>` (access, "
"links, contacts, history...);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:83
msgid ""
"or related to its geometry (spatial extent, CRS...) or its attributes "
"(number of fields, characteristics of each...)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:90
msgid "Source Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:92
msgid "|system| Use this tab to define general settings for the vector layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:100
msgid "Source tab in vector Layer Properties dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:103
msgid ""
"Other than setting the :guilabel:`Layer name` to display in the "
":guilabel:`Layers Panel`, available options include:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:107
msgid "Coordinate Reference System"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:109
msgid ""
"Displays the layer's Coordinate Reference System (CRS) as a PROJ.4 "
"string. You can change the layer's CRS, selecting a recently used one in "
"the drop-down list or clicking on |setProjection| :sup:`Select CRS` "
"button (see :ref:`crs_selector`). Use this process only if the CRS "
"applied to the layer is a wrong one or if none was applied. If you wish "
"to reproject your data into another CRS, rather use layer reprojection "
"algorithms from Processing or :ref:`Save it into another layer "
"<general_saveas>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:116
msgid ":guilabel:`Create spatial index` (only for OGR-supported formats)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:117
msgid ":guilabel:`Update extents` information for a layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:123
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:146
msgid "Query Builder"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:125
msgid ""
"The :guilabel:`Query Builder` dialog is accessible through the eponym "
"button at the bottom of the :guilabel:`Source` tab in the Layer "
"Properties dialog, under the :guilabel:`Provider feature filter` group."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:129
msgid ""
"The Query Builder provides an interface that allows you to define a "
"subset of the features in the layer using a SQL-like WHERE clause and to "
"display the result in the main window. As long as the query is active, "
"only the features corresponding to its result are available in the "
"project. For example, using the ``TYPE_2`` field of the :file:`regions` "
"layer from the QGIS sample data, you could constrain the file to display "
"only regions that are of ``borough`` type in the project (see "
"Figure_vector_querybuilder_ for such an example). The filter is made at "
"the data provider (OGR, PostgreSQL, MSSQL...) level."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:149
msgid ""
"You can also open the :guilabel:`Query Builder` dialog using the "
":guilabel:`Filter...` option from the :menuselection:`View` menu or the "
"layer contextual menu. The :guilabel:`Fields`, :guilabel:`Values` and "
":guilabel:`Operators` sections in the dialog help you to construct the "
"SQL-like query exposed in the :guilabel:`Provider specific filter "
"expression` box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:155
msgid ""
"The **Fields** list contains all the fields of the layer. To add an "
"attribute column to the SQL WHERE clause field, double-click its name or "
"just type it into the SQL box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:159
msgid ""
"The **Values** frame lists the values of the currently selected field. To"
" list all unique values of a field, click the :guilabel:`All` button. To "
"instead list the first 25 unique values of the column, click the "
":guilabel:`Sample` button. To add a value to the SQL WHERE clause field, "
"double click its name in the Values list. You can use the search box at "
"the top of the Values frame to easily browse and find attribute values in"
" the list."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:166
msgid ""
"The **Operators** section contains all usable operators. To add an "
"operator to the SQL WHERE clause field, click the appropriate button. "
"Relational operators ( ``=`` , ``>`` , ...), string comparison operator "
"(``LIKE``), and logical operators (``AND``, ``OR``, ...) are available."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:171
msgid ""
"The :guilabel:`Test` button helps you check your query and displays a "
"message box with the number of features satisfying the current query. Use"
" the :guilabel:`Clear` button to wipe the SQL query and revert the layer "
"to its original state (ie, fully load all the features)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:176
msgid ""
"When a filter is applied, QGIS treats the resulting subset acts as if it "
"were the entire layer. For example if you applied the filter above for "
"'Borough' (``\"TYPE_2\" = 'Borough'``), you can not display, query, save "
"or edit ``Anchorage``, because that is a 'Municipality' and therefore not"
" part of the subset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:182
msgid "**Filtered layers are indicated in the Layers Panel**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:184
msgid ""
"In the :guilabel:`Layers` panel, filtered layer is listed with a "
"|indicatorFilter| :sup:`Filter` icon next to it indicating the query used"
" when the mouse hovers over the button. Double-click the icon opens the "
":guilabel:`Query Builder` dialog for edit."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:194
msgid "Symbology Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:196
msgid ""
"|symbology| The Symbology tab provides you with a comprehensive tool for "
"rendering and symbolizing your vector data. You can use tools that are "
"common to all vector data, as well as special symbolizing tools that were"
" designed for the different kinds of vector data. However all types share"
" the following dialog structure: in the upper part, you have a widget "
"that helps you prepare the classification and the symbol to use for "
"features and at the bottom the :ref:`layer_rendering` widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:204
msgid "**Switch quickly between different layer representations**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:206
msgid ""
"Using the :menuselection:`Styles --> Add` menu at the bottom of the "
":guilabel:`Layer Properties` dialog, you can save as many styles as "
"needed. A style is the combination of all properties of a layer (such as "
"symbology, labeling, diagram, fields form, actions...) as you want. Then,"
" simply switch between styles from the context menu of the layer in "
":guilabel:`Layers Panel` to automatically get different representations "
"of your data."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:214
msgid "**Export vector symbology**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:216
msgid ""
"You have the option to export vector symbology from QGIS into Google "
"\\*.kml, \\*.dxf and MapInfo \\*.tab files. Just open the right mouse "
"menu of the layer and click on :menuselection:`Save As...` to specify the"
" name of the output file and its format. In the dialog, use the "
":menuselection:`Symbology export` menu to save the symbology either as "
":menuselection:`Feature symbology -->` or as :menuselection:`Symbol layer"
" symbology -->`. If you have used symbol layers, it is recommended to use"
" the second setting."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:227
msgid "Features rendering"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:229
msgid ""
"The renderer is responsible for drawing a feature together with the "
"correct symbol. Regardless layer geometry type, there are four common "
"types of renderers: single symbol, categorized, graduated and rule-based."
" For point layers, there are a point displacement and a heatmap renderers"
" available while polygon layers can also be rendered with the inverted "
"polygons and 2.5 D renderers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:235
msgid ""
"There is no continuous color renderer, because it is in fact only a "
"special case of the graduated renderer. The categorized and graduated "
"renderers can be created by specifying a symbol and a color ramp - they "
"will set the colors for symbols appropriately. For each data type "
"(points, lines and polygons), vector symbol layer types are available. "
"Depending on the chosen renderer, the dialog provides different "
"additional sections."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:244
msgid ""
"If you change the renderer type when setting the style of a vector layer "
"the settings you made for the symbol will be maintained. Be aware that "
"this procedure only works for one change. If you repeat changing the "
"renderer type the settings for the symbol will get lost."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:254
msgid "Single Symbol Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:256
msgid ""
"The |singleSymbol| :guilabel:`Single Symbol` renderer is used to render "
"all features of the layer using a single user-defined symbol. See :ref"
":`symbol-selector` for further information about symbol representation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:266
msgid "Single symbol line properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:268
msgid "**Edit symbol directly from layer panel**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:270
msgid ""
"If in your **Layers Panel** you have layers with categories defined "
"through categorized, graduated or rule-based symbology mode, you can "
"quickly change the fill color of the symbol of the categories by right-"
"clicking on a category and choose the color you prefer from a "
"|colorWheel| :sup:`color wheel` menu. Right-clicking on a category will "
"also give you access to the options **Hide all items**, **Show all "
"items** and **Edit symbol**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:283
msgid "No Symbols Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:285
msgid ""
"The |nullSymbol| :guilabel:`No Symbols` renderer is a special use case of"
" the Single Symbol renderer as it applies the same rendering to all "
"features. Using this renderer, no symbol will be drawn for features, but "
"labeling, diagrams and other non-symbol parts will still be shown."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:290
msgid ""
"Selections can still be made on the layer in the canvas and selected "
"features will be rendered with a default symbol. Features being edited "
"will also be shown."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:294
msgid ""
"This is intended as a handy shortcut for layers which you only want to "
"show labels or diagrams for, and avoids the need to render symbols with "
"totally transparent fill/border to achieve this."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:304
msgid "Categorized Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:306
msgid ""
"The |categorizedSymbol| :guilabel:`Categorized` renderer is used to "
"render the features of a layer, using a user-defined symbol whose aspect "
"reflects the discrete values of a field or an expression. The Categorized"
" menu allows you to"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:310
msgid "select an existing field (using the Column listbox) or"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:311
msgid ""
"type or build an :ref:`expression <vector_expressions>` using the "
"|expression| :sup:`Set column expression`. The expression used to "
"classify features can be of any type; it can for example:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:315
msgid ""
"be a comparison, e.g. ``myfield >= 100``, ``$id = @atlas_featureid``, "
"``myfield % 2 = 0``, ``within( $geometry, @atlas_geometry )``. In this "
"case, QGIS returns values ``1`` (**True**) and ``0`` (**False**)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:318
msgid ""
"combine different fields, e.g. ``concat( field1, ' ', field2 )`` "
"particularly useful when you want to process classification on two or "
"more fields simultaneously."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:321
msgid ""
"be a calculation on fields, e.g. ``myfield % 2``, ``year( myfield )`` "
"``field_1 + field_2``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:323
msgid "be used to transform linear values in discrete classes, e.g.:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:329
msgid "combine several discrete values in one single category, e.g.:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:339
msgid ""
"While you can use any kind of expression to categorize features, for some"
" complex expressions it might be simpler to use :ref:`rule-based "
"rendering <rule_based_rendering>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:343
msgid ""
"the symbol (using the :ref:`symbol-selector` dialog) which will be used "
"as base symbol for each class;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid ""
"the range of colors (using the Color ramp listbox) from which color "
"applied to the symbol is selected."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:348
msgid ""
"Then click on :guilabel:`Classify` button to create classes from the "
"distinct value of the attribute column. Each class can be disabled "
"unchecking the checkbox at the left of the class name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:352
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:441
msgid ""
"To change symbol, value and/or label of the class, just double click on "
"the item you want to change."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:355
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:444
msgid ""
"Right-click shows a contextual menu to **Copy/Paste**, **Change color**, "
"**Change transparency**, **Change output unit**, **Change symbol width**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:358
msgid ""
"The example in figure_categorized_symbology_ shows the category rendering"
" dialog used for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:366
msgid "Categorized Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:370
msgid "**Select and change multiple symbols**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:372
msgid ""
"The Symbology allows you to select multiple symbols and right click to "
"change color, transparency, size, or width of selected entries."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:376
msgid "**Match categories to symbol name**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:378
msgid ""
"In the [Advanced] menu, under the classes, you can choose one of the two "
"first actions to match symbol name to a category name in your "
"classification. *Matched to saved symbols* match category name with a "
"symbol name from your *Style Manager*. *Match to symbols from file* match"
" category name to a symbol name from an external file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:390
msgid "Graduated Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:392
msgid ""
"The |graduatedSymbol| :guilabel:`Graduated` renderer is used to render "
"all the features from a layer, using an user-defined symbol whose color "
"or size reflects the assignment of a selected feature's attribute to a "
"class."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:396
msgid ""
"Like the Categorized Renderer, the Graduated Renderer allows you to "
"define rotation and size scale from specified columns."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:399
msgid "Also, analogous to the Categorized Renderer, it allows you to select:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:401
msgid ""
"The attribute (using the Column listbox or the |expression| :sup:`Set "
"column expression` function)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:403
msgid "The symbol (using the Symbol selector dialog)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:404
msgid "The legend format and the precision"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:405
msgid "The method to use to change the symbol: color or size"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:406
msgid "The colors (using the color Ramp list) if the color method is selected"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:407
msgid "The size (using the size domain and its unit)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:409
msgid ""
"Then you can use the Histogram tab which shows an interactive histogram "
"of the values from the assigned field or expression. Class breaks can be "
"moved or added using the histogram widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:415
msgid ""
"You can use Statistical Summary panel to get more information on your "
"vector layer. See :ref:`statistical_summary`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:418
msgid ""
"Back to the Classes tab, you can specify the number of classes and also "
"the mode for classifying features within the classes (using the Mode "
"list). The available modes are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:422
msgid ""
"Equal Interval: each class has the same size (e.g. values from 0 to 16 "
"and 4 classes, each class has a size of 4)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:424
msgid ""
"Quantile: each class will have the same number of element inside (the "
"idea of a boxplot)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:426
msgid ""
"Natural Breaks (Jenks): the variance within each class is minimal while "
"the variance between classes is maximal."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:428
msgid ""
"Standard Deviation: classes are built depending on the standard deviation"
" of the values."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:430
msgid ""
"Pretty Breaks: Computes a sequence of about n+1 equally spaced nice "
"values which cover the range of the values in x. The values are chosen so"
" that they are 1, 2 or 5 times a power of 10. (based on pretty from the R"
" statistical environment "
"http://astrostatistics.psu.edu/datasets/R/html/base/html/pretty.html)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:435
msgid ""
"The listbox in the center part of the :guilabel:`Symbology` tab lists the"
" classes together with their ranges, labels and symbols that will be "
"rendered."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:438
msgid ""
"Click on **Classify** button to create classes using the chosen mode. "
"Each classes can be disabled unchecking the checkbox at the left of the "
"class name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:447
msgid ""
"The example in figure_graduated_symbology_ shows the graduated rendering "
"dialog for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:455
msgid "Graduated Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:457
msgid "**Thematic maps using an expression**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:459
msgid ""
"Categorized and graduated thematic maps can be created using the result "
"of an expression. In the properties dialog for vector layers, the "
"attribute chooser is extended with a |expression| :sup:`Set column "
"expression` function. So you don't need to write the classification "
"attribute to a new column in your attribute table if you want the "
"classification attribute to be a composite of multiple fields, or a "
"formula of some sort."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:470
msgid "Proportional Symbol and Multivariate Analysis"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:472
msgid ""
"Proportional Symbol and Multivariate Analysis are not rendering types "
"available from the Symbology rendering drop-down list. However with the "
":ref:`data-defined override <data_defined>` options applied over any of "
"the previous rendering options, QGIS allows you to display your point and"
" line data with such representation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:479
msgid "**Creating proportional symbol**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:481
msgid "To apply a proportional rendering:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:483
msgid ""
"First apply to the layer the :ref:`single symbol renderer "
"<single_symbol_renderer>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:485
msgid "Then set the symbol to apply to the features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:486
msgid ""
"Select the item at the upper level of the symbol tree, and use the "
"|dataDefined| :sup:`Data-defined override` :ref:`button <data_defined>` "
"next to the :guilabel:`Size` (for point layer) or :guilabel:`Width` (for "
"line layer) option."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:490
msgid ""
"Select a field or enter an expression, and for each feature, QGIS will "
"apply the output value to the property and proportionally resize the "
"symbol in the map canvas."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:494
msgid ""
"If need be, use the :guilabel:`Size assistant...` option of the "
"|dataDefined| menu to apply some transformation (exponential, "
"flannery...) to the symbol size rescaling (see "
":ref:`data_defined_assistant` for more details)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:498
msgid ""
"You can choose to display the proportional symbols in the :ref:`Layers "
"panel <label_legend>` and the :ref:`print layout legend item "
"<layout_legend_item>`: unfold the :guilabel:`Advanced` drop-down list at "
"the bottom of the main dialog of the :guilabel:`Symbology` tab and select"
" **Data-defined size legend...** to configure the legend items (see "
":ref:`data_defined_size_legend` for details)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:509
msgid "Scaling airports size based on elevation of the airport"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:511
msgid "**Creating multivariate analysis**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:513
msgid ""
"A multivariate analysis rendering helps you evaluate the relationship "
"between two or more variables e.g., one can be represented by a color "
"ramp while the other is represented by a size."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:517
msgid "The simplest way to create multivariate analysis in QGIS is to:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:519
msgid ""
"First apply a categorized or graduated rendering on a layer, using the "
"same type of symbol for all the classes."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:521
msgid "Then, apply a proportional symbology on the classes:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:523
msgid ""
"Click on the :guilabel:`Change` button above the classification frame: "
"you get the :ref:`symbol-selector` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:525
msgid ""
"Rescale the size or width of the symbol layer using the |dataDefined| "
":ref:`data defined override <data_defined>` widget as seen above."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:528
msgid ""
"Like the proportional symbol, the scaled symbology can be added to the "
"layer tree, on top of the categorized or graduated classes symbols using "
"the :ref:`data defined size legend <data_defined_size_legend>` feature. "
"And both representation are also available in the print layout legend "
"item."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:538
msgid "Multivariate example with scaled size legend"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:547
msgid "Rule-based Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:549
msgid ""
"The |ruleBasedSymbol| :guilabel:`Rule-based` renderer is used to render "
"all the features from a layer, using rule-based symbols whose aspect "
"reflects the assignment of a selected feature's attribute to a class. The"
" rules are based on SQL statements and can be nested. The dialog allows "
"rule grouping by filter or scale, and you can decide if you want to "
"enable symbol levels or use only the first-matched rule."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:557
msgid "To create a rule:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:559
msgid ""
"Activate an existing row by double-clicking it (by default, QGIS adds a "
"symbol without a rule when the rendering mode is enabled) or click the "
"|projectProperties| :sup:`Edit rule` or |signPlus| :sup:`Add rule` "
"button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:562
msgid ""
"In the :guilabel:`Edit Rule` dialog that opens, you can define a label to"
" help you identify each rule. This is the label that will be displayed in"
" the :guilabel:`Layers Panel` and also in the print composer legend."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:565
msgid ""
"Manually enter an expression in the text box next to the |radioButtonOn| "
":guilabel:`Filter` option or press the |expression| button next to it to "
"open the expression string builder dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:568
msgid ""
"Use the provided functions and the layer attributes to build an "
":ref:`expression <vector_expressions>` to filter the features you'd like "
"to retrieve. Press the :guilabel:`Test` button to check the result of the"
" query."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:571
msgid "You can enter a longer label to complete the rule description."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:572
msgid ""
"You can use the |checkbox| :guilabel:`Scale Range` option to set scales "
"at which the rule should be applied."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:574
msgid ""
"Finally, configure the :ref:`symbol to use <symbol-selector>` for these "
"features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:575
msgid "And press :guilabel:`OK`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:577
msgid ""
"A new row summarizing the rule is added to the Layer Properties dialog. "
"You can create as many rules as necessary following the steps above or "
"copy pasting an existing rule. Drag-and-drop the rules on top of each "
"other to nest them and refine the upper rule features in subclasses."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:582
msgid ""
"Selecting a rule, you can also organize its features in subclasses using "
"the :guilabel:`Refine selected rules` drop-down menu. Automated rule "
"refinement can be based on:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:586
msgid "**scales**;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:587
msgid ""
"**categories**: applying a :ref:`categorized renderer "
"<categorized_renderer>`;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:588
msgid "or **ranges**: applying a :ref:`graduated renderer <graduated_renderer>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:590
msgid ""
"Refined classes appear like sub-items of the rule, in a tree hierarchy "
"and like above, you can set symbology of each class."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:593
msgid ""
"In the :guilabel:`Edit rule` dialog, you can avoid writing all the rules "
"and make use of the |radioButtonOff| :guilabel:`Else` option to catch all"
" the features that do not match any of the other rules, at the same "
"level. This can also be achieved by writing ``Else`` in the *Rule* column"
" of the :menuselection:`Layer Properties --> Symbology --> Rule-based` "
"dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:599
msgid ""
"The created rules also appear in a tree hierarchy in the map legend. "
"Double-click the rules in the map legend and the Symbology tab of the "
"layer properties appears showing the rule that is the background for the "
"symbol in the tree."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:604
msgid ""
"The example in figure_rule_based_symbology_ shows the rule-based "
"rendering dialog for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:612
msgid "Rule-based Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:619
msgid "Point displacement Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:621
msgid ""
"The |pointDisplacementSymbol| :guilabel:`Point Displacement` renderer "
"works to visualize all features of a point layer, even if they have the "
"same location. To do this, the renderer takes the points falling in a "
"given :guilabel:`Distance` tolerance from each other and places them "
"around their barycenter following different :guilabel:`Placement "
"methods`:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:627
msgid ""
"**Ring**: places all the features on a circle whose radius depends on the"
" number of features to display."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:629
msgid ""
"**Concentric rings**: uses a set of concentric circles to show the "
"features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:630
msgid ""
"**Grid**: generates a regular grid with a point symbol at each "
"intersection."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:632
msgid ""
"The :guilabel:`Center symbol` widget helps you customize the symbol and "
"color of the middle point. For the distributed points symbols, you can "
"apply any of the *No symbols*, *Single symbol*, *Categorized*, "
"*Graduated* or *Rule-based* renderer using the :guilabel:`Renderer` drop-"
"down list and customize them using the :guilabel:`Renderer Settings...` "
"button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:639
msgid ""
"While the minimal spacing of the :guilabel:`Displacement lines` depends "
"on the point symbol renderer's, you can still customize some of its "
"settings such as the :guilabel:`Stroke width`, :guilabel:`Stroke color` "
"and :guilabel:`Size adjustment` (eg, to add more spacing between the "
"rendered points)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:644
msgid ""
"Use the :guilabel:`Labels` group options to perform points labeling: the "
"labels are placed near the displaced position of the symbol, and not at "
"the feature real position. Other than the :guilabel:`Label attribute`, "
":guilabel:`Label font` and :guilabel:`Label color`, you can set the "
":guilabel:`Minimum map scale` to display the labels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:655
msgid "Point displacement dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:659
msgid ""
"Point Displacement renderer does not alter feature geometry, meaning that"
" points are not moved from their position. They are still located at "
"their initial place. Changes are only visual, for rendering purpose. Use "
"instead the Processing :ref:`qgispointsdisplacement` algorithm if you "
"want to create displaced features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:671
msgid "Point Cluster Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:673
msgid ""
"Unlike the |pointDisplacementSymbol| :guilabel:`Point Displacement` "
"renderer which blows up nearest or overlaid point features placement, the"
" |pointClusterSymbol| :guilabel:`Point Cluster` renderer groups nearby "
"points into a single rendered marker symbol. Based on a specified "
":guilabel:`Distance`, points that fall within from each others are merged"
" into a single symbol. Points aggregation is made based on the closest "
"group being formed, rather than just assigning them the first group "
"within the search distance."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:681
msgid "From the main dialog, you can:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:683
msgid ""
"set the symbol to represent the point cluster in the :guilabel:`Cluster "
"symbol`; the default rendering displays the number of aggregated features"
" thanks to the ``@cluster_size`` :ref:`variable "
"<general_tools_variables>` on Font marker symbol layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:687
msgid ""
"use the :guilabel:`Renderer` drop-down list to apply any of the other "
"feature rendering types to the layer (single, categorized, rule-"
"based...). Then, push the :guilabel:`Renderer Settings...` button to "
"configure features' symbology as usual. Note that this renderer is only "
"visible on features that are not clustered. Also, when the symbol color "
"is the same for all the point features inside a cluster, that color sets "
"the ``@cluster_color`` variable of the cluster."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:699
msgid "Point Cluster dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:703
msgid ""
"Point Cluster renderer does not alter feature geometry, meaning that "
"points are not moved from their position. They are still located at their"
" initial place. Changes are only visual, for rendering purpose. Use "
"instead the Processing :ref:`qgiskmeansclustering` or "
":ref:`qgisdbscanclustering` algorithm if you want to create cluster-based"
" features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:715
msgid "Inverted Polygon Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:717
msgid ""
"The |invertedSymbol| :guilabel:`Inverted Polygon` renderer allows user to"
" define a symbol to fill in outside of the layer's polygons. As above you"
" can select subrenderers, namely Single symbol, Graduated, Categorized, "
"Rule-Based or 2.5D renderer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:727
msgid "Inverted Polygon dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:734
msgid "Heatmap Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:736
msgid ""
"With the |heatmapSymbol| :guilabel:`Heatmap` renderer you can create live"
" dynamic heatmaps for (multi)point layers. You can specify the heatmap "
"radius in millimeters, points, pixels, map units or inches, choose and "
"edit a color ramp for the heatmap style and use a slider for selecting a "
"trade-off between render speed and quality. You can also define a maximum"
" value limit and give a weight to points using a field or an expression. "
"When adding or removing a feature the heatmap renderer updates the "
"heatmap style automatically."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:750
msgid "Heatmap dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:757
msgid "2.5D Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:759
msgid ""
"Using the |25dSymbol| :guilabel:`2.5D` renderer it's possible to create a"
" 2.5D effect on your layer's features. You start by choosing a "
":guilabel:`Height` value (in map units). For that you can use a fixed "
"value, one of your layer's fields, or an expression. You also need to "
"choose an :guilabel:`Angle` (in degrees) to recreate the viewer position "
"(0 |degrees| means west, growing in counter clock wise). Use advanced "
"configuration options to set the :guilabel:`Roof Color` and "
":guilabel:`Wall Color`. If you would like to simulate solar radiation on "
"the features walls, make sure to check the |checkbox| :guilabel:`Shade "
"walls based on aspect` option. You can also simulate a shadow by setting "
"a :guilabel:`Color` and :guilabel:`Size` (in map units)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:776
msgid "2.5D dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:778
msgid "**Using 2.5D effect with other renderers**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:780
msgid ""
"Once you have finished setting the basic style on the 2.5D renderer, you "
"can convert this to another renderer (single, categorized, graduated). "
"The 2.5D effects will be kept and all other renderer specific options "
"will be available for you to fine tune them (this way you can have for "
"example categorized symbols with a nice 2.5D representation or add some "
"extra styling to your 2.5D symbols). To make sure that the shadow and the"
" \"building\" itself do not interfere with other nearby features, you may"
" need to enable Symbols Levels ( :menuselection:`Advanced --> Symbol "
"levels...`). The 2.5D height and angle values are saved in the layer's "
"variables, so you can edit it afterwards in the variables tab of the "
"layer's properties dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:795
msgid "Layer rendering"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:797
msgid ""
"From the Symbology tab, you can also set some options that invariably act"
" on all features of the layer:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:800
msgid ""
":guilabel:`Opacity` |slider|: You can make the underlying layer in the "
"map canvas visible with this tool. Use the slider to adapt the visibility"
" of your vector layer to your needs. You can also make a precise "
"definition of the percentage of visibility in the the menu beside the "
"slider."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:805
msgid ""
":guilabel:`Blending mode` at the :guilabel:`Layer` and "
":guilabel:`Feature` levels: You can achieve special rendering effects "
"with these tools that you may previously only know from graphics "
"programs. The pixels of your overlaying and underlaying layers are mixed "
"through the settings described in :ref:`blend-modes`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:810
msgid ""
"Apply :ref:`paint effects <draw_effects>` on all the layer features with "
"the :guilabel:`Draw Effects` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:813
msgid ""
":guilabel:`Control feature rendering order` allows you, using features "
"attributes, to define the z-order in which they shall be rendered. "
"Activate the checkbox and click on the |sort| button beside. You then get"
" the :guilabel:`Define Order` dialog in which you:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:818
msgid "Choose a field or build an expression to apply to the layer features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:819
msgid ""
"Set in which order the fetched features should be sorted, i.e. if you "
"choose **Ascending** order, the features with lower value are rendered "
"under those with higher value."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:822
msgid ""
"Define when features returning NULL value should be rendered: **first** "
"(bottom) or **last** (top)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:824
msgid "Repeat the above steps as many times as rules you wish to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:826
msgid ""
"The first rule is applied to all the features in the layer, z-ordering "
"them according to their returned value. Then, within each group of "
"features with the same value (including those with NULL value) and thus "
"the same z-level, the next rule is applied to sort them. And so on..."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:837
msgid "Layer rendering options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:841
msgid "Other Settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:847
msgid "Symbol levels"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:849
msgid ""
"For renderers that allow stacked symbol layers (only heatmap doesn't) "
"there is an option to control the rendering order of each symbol's "
"levels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:852
msgid ""
"For most of the renderers, you can access the Symbols levels option by "
"clicking the :guilabel:`Advanced` button below the saved symbols list and"
" choosing :guilabel:`Symbol levels`. For the :ref:`rule_based_rendering` "
"the option is directly available through :guilabel:`Symbols Levels...` "
"button, while for :ref:`point_displacement` renderer the same button is "
"inside the :guilabel:`Rendering settings` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:859
msgid ""
"To activate symbols levels, select the |checkbox| :guilabel:`Enable "
"symbol levels`. Each row will show up a small sample of the combined "
"symbol, its label and the individual symbols layer divided into columns "
"with a number next to it. The numbers represent the rendering order level"
" in which the symbol layer will be drawn. Lower values levels are drawn "
"first, staying at the bottom, while higher values are drawn last, on top "
"of the others."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:871
msgid "Symbol levels dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:875
msgid ""
"If symbols levels are deactivated, the complete symbols will be drawn "
"according to their respective features order. Overlapping symbols will "
"simply obfuscate to other below. Besides, similar symbols won't \"merge\""
" with each other."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:885
msgid "Symbol levels activated (A) and deactivated (B) difference"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:890
msgid "Data-defined size legend"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:892
msgid ""
"When a layer is rendered with the :ref:`proportional symbol or the "
"multivariate rendering <proportional_symbols>` or when a :ref:`scaled "
"size diagram <diagram_size>` is applied to the layer, you can allow the "
"display of the scaled symbols in both the :ref:`Layers panel "
"<label_legend>` and the :ref:`print layout legend <layout_legend_item>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:898
msgid ""
"To enable the :guilabel:`Data-defined Size Legend` dialog to render "
"symbology, select the eponym option in the :guilabel:`Advanced` button "
"below the saved symbols list. For diagrams, the option is available under"
" the :guilabel:`Legend` tab. The dialog provides the following options "
"to:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:903
msgid ""
"select the type of legend: |radioButtonOn| :guilabel:`Legend not "
"enabled`, |radioButtonOff| :guilabel:`Separated legend items` and "
"|radioButtonOff| :guilabel:`Collapsed legend`. For the latter option, you"
" can select whether the legend items are aligned at the **Bottom** or at "
"the **Center**;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:907
msgid "set the :ref:`symbol to use <symbol-selector>` for legend representation;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:908
msgid "insert the title in the legend;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:909
msgid ""
"resize the classes to use: by default, QGIS provides you with a legend of"
" five classes (based on natural pretty breaks) but you can apply your own"
" classification using the |checkbox| :guilabel:`Manual size classes` "
"option. Use the |signPlus| and |signMinus| buttons to set your custom "
"classes values and labels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:915
msgid ""
"A preview of the legend is displayed in the right panel of the dialog and"
" updated as you set the parameters. For collapsed legend, a leader line "
"from the horizontal center of the symbol to the corresponding legend text"
" is drawn."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:924
msgid "Setting size scaled legend"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:926
msgid ""
"Currently, data-defined size legend for layer symbology can only be "
"applied to point layer using single, categorized or graduated symbology."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:934
msgid "Draw effects"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:936
msgid ""
"In order to improve layer rendering and avoid (or at least reduce) the "
"resort to other software for final rendering of maps, QGIS provides "
"another powerful functionality: the |paintEffects| :guilabel:`Draw "
"Effects` options, which adds paint effects for customizing the "
"visualization of vector layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:941
msgid ""
"The option is available in the :menuselection:`Layer Properties --> "
"Symbology` dialog, under the :ref:`Layer rendering <layer_rendering>` "
"group (applying to the whole layer) or in :ref:`symbol layer properties "
"<symbol-selector>` (applying to corresponding features). You can combine "
"both usage."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:946
msgid ""
"Paint effects can be activated by checking the |checkbox| :guilabel:`Draw"
" effects` option and clicking the |paintEffects| :sup:`Customize effects`"
" button. That will open the :guilabel:`Effect Properties` Dialog (see "
"figure_effects_source_). The following effect types, with custom options "
"are available:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:951
msgid ""
"**Source**: Draws the feature's original style according to the "
"configuration of the layer's properties. The :guilabel:`Opacity` of its "
"style can be adjusted as well as the :ref:`Blend mode <blend-modes>` and "
":ref:`Draw mode <draw_modes>`. These are common properties for all types "
"of effects."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:961
msgid "Draw Effects: Source dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:963
msgid ""
"**Blur**: Adds a blur effect on the vector layer. The custom options that"
" you can change are the :guilabel:`Blur type` (:guilabel:`Stack blur "
"(fast)` or :guilabel:`Gaussian blur (quality)`) and the :guilabel:`Blur "
"strength`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:972
msgid "Draw Effects: Blur dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:974
msgid ""
"**Colorise**: This effect can be used to make a version of the style "
"using one single hue. The base will always be a grayscale version of the "
"symbol and you can:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:978
msgid ""
"Use the |selectString| :guilabel:`Grayscale` to select how to create it: "
"options are 'By lightness', 'By luminosity', 'By average' and 'Off'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:980
msgid ""
"If |checkbox| :guilabel:`Colorise` is selected, it will be possible to "
"mix another color and choose how strong it should be."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:982
msgid ""
"Control the :guilabel:`Brightness`, :guilabel:`Contrast` and "
":guilabel:`Saturation` levels of the resulting symbol."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:990
msgid "Draw Effects: Colorize dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:992
msgid ""
"**Drop Shadow**: Using this effect adds a shadow on the feature, which "
"looks like adding an extra dimension. This effect can be customized by "
"changing the :guilabel:`Offset` angle and distance, determining where the"
" shadow shifts towards to and the proximity to the source object. "
":menuselection:`Drop Shadow` also has the option to change the "
":guilabel:`Blur radius` and the :guilabel:`Color` of the effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1004
msgid "Draw Effects: Drop Shadow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1006
msgid ""
"**Inner Shadow**: This effect is similar to the :guilabel:`Drop Shadow` "
"effect, but it adds the shadow effect on the inside of the edges of the "
"feature. The available options for customization are the same as the "
":guilabel:`Drop Shadow` effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1016
msgid "Draw Effects: Inner Shadow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1018
msgid ""
"**Inner Glow**: Adds a glow effect inside the feature. This effect can be"
" customized by adjusting the :guilabel:`Spread` (width) of the glow, or "
"the :guilabel:`Blur radius`. The latter specifies the proximity from the "
"edge of the feature where you want any blurring to happen. Additionally, "
"there are options to customize the color of the glow using a "
":guilabel:`Single color` or a :guilabel:`Color ramp`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1030
msgid "Draw Effects: Inner Glow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1032
msgid ""
"**Outer Glow**: This effect is similar to the :guilabel:`Inner Glow` "
"effect, but it adds the glow effect on the outside of the edges of the "
"feature. The available options for customization are the same as the "
":guilabel:`Inner Glow` effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1042
msgid "Draw Effects: Outer Glow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1044
msgid ""
"**Transform**: Adds the possibility of transforming the shape of the "
"symbol. The first options available for customization are the "
":guilabel:`Reflect horizontal` and :guilabel:`Reflect vertical`, which "
"actually create a reflection on the horizontal and/or vertical axes. The "
"other options are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1049
msgid ":guilabel:`Shear X,Y`: Slants the feature along the X and/or Y axis."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1050
msgid ""
":guilabel:`Scale X,Y`: Enlarges or minimizes the feature along the X "
"and/or Y axis by the given percentage."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1052
msgid ":guilabel:`Rotation`: Turns the feature around its center point."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1053
msgid ""
"and :guilabel:`Translate X,Y` changes the position of the item based on a"
" distance given on the X and/or Y axis."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1061
msgid "Draw Effects: Transform dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1063
msgid ""
"One or more effect types can be used at the same time. You (de)activate "
"an effect using its checkbox in the effects list. You can change the "
"selected effect type by using the |selectString| :guilabel:`Effect type` "
"option. You can reorder the effects using |arrowUp| :sup:`Move up` and "
"|arrowDown| :sup:`Move down` buttons, and also add/remove effects using "
"the |signPlus| :sup:`Add new effect` and |signMinus| :sup:`Remove effect`"
" buttons."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1070
msgid ""
"There are some common options available for all draw effect types. "
":guilabel:`Opacity` and :guilabel:`Blend mode` options work similar to "
"the ones described in :ref:`layer_rendering` and can be used in all draw "
"effects except for the transform one."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1077
msgid ""
"There is also a |selectString| :guilabel:`Draw mode` option available for"
" every effect, and you can choose whether to render and/or modify the "
"symbol, following some rules:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1081
msgid "Effects render from top to bottom."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1082
msgid ":guilabel:`Render only` mode means that the effect will be visible."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1083
msgid ""
":guilabel:`Modifier only` mode means that the effect will not be visible "
"but the changes that it applies will be passed to the next effect (the "
"one immediately below)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1086
msgid ""
"The :guilabel:`Render and Modify` mode will make the effect visible and "
"pass any changes to the next effect. If the effect is at the top of the "
"effects list or if the immediately above effect is not in modify mode, "
"then it will use the original source symbol from the layers properties "
"(similar to source)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1095
msgid "Labels Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1097
msgid ""
"The |labeling| :guilabel:`Labels` properties provides you with all the "
"needed and appropriate capabilities to configure smart labeling on vector"
" layers. This dialog can also be accessed from the :guilabel:`Layer "
"Styling` panel, or using the |labeling| :sup:`Layer Labeling Options` "
"icon of the **Labels toolbar**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1102
msgid ""
"The first step is to choose the labeling method from the drop-down list. "
"Available methods are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1105
msgid ""
"|labelingNone| :guilabel:`No labels`: the default value, showing no "
"labels from the layer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1107
msgid "|labeling| :ref:`Single labels <showlabels>`, described below"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1108
msgid "|labelingRuleBased| :ref:`Rule-based labeling <rule_based_labeling>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1109
msgid ""
"and |labelingObstacle| :guilabel:`Blocking`: allows to set a layer as "
"just an obstacle for other layer's labels without rendering any labels of"
" its own."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1115
msgid "Setting a label"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1117
msgid ""
"The next steps assume you select the |labeling| :guilabel:`Single labels`"
" option, enabling following tabs that help you configure the labeling:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1120
msgid ":ref:`Text <labels_text>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1121
msgid ":ref:`Formatting <labels_formatting>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1122
msgid ":ref:`Buffer <labels_buffer>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1123
msgid ":ref:`Background <labels_background>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1124
msgid ":ref:`Shadow <labels_shadow>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1125
msgid ":ref:`Placement <labels_placement>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1126
msgid ":ref:`Rendering <labels_rendering>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1128
msgid ""
"It also enables the :guilabel:`Label with` drop-down list, from which you"
" can select an attribute column to use. Click |expression| if you want to"
" define labels based on expressions - See "
":ref:`labeling_with_expressions`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1132
msgid ""
"The following steps describe simple labeling without using the "
":guilabel:`Data defined override` functions, which are situated next to "
"the drop-down menus - see :ref:`data_defined_labeling` for a use case."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1141
msgid "Layer labeling settings - Text tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1146
msgid "Text tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1148
msgid ""
"In the |text| :guilabel:`Text` tab, you can define the :guilabel:`Font`, "
":guilabel:`Style`, and :guilabel:`Size` of your labels' text (see "
"Figure_labels_). There are options available to set the labels' "
":guilabel:`Color` and :guilabel:`Transparency`. Use the :guilabel:`Type "
"case` option to change the capitalization style of the text. You have the"
" possibility to render the text as 'All uppercase', 'All lowercase' or "
"'Capitalize first letter'. In :guilabel:`Spacing`, you can change the "
"space between words and between individual letters. Finally, use the "
":guilabel:`Blend mode` option to determine how your labels will mix with "
"the map features below them (see more about it in :ref:`blend-modes`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1159
msgid ""
"The :guilabel:`Apply label text substitutes` option gives you ability to "
"specify a list of texts to substitute to texts in feature labels (e.g., "
"abbreviating street types). Replacement texts are thus used to display "
"labels in the map canvas. Users can also export and import lists of "
"substitutes to make reuse and sharing easier."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1168
msgid "Formatting tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1170
msgid ""
"In the |labelformatting| :guilabel:`Formatting` tab, you can define a "
"character for a line break in the labels with the :guilabel:`Wrap on "
"character` option. You can also format the :guilabel:`Line Height` and "
"the :guilabel:`alignment`. For the latter, typical values are available "
"(left, right, and center), plus *Follow label placement* for point "
"layers. When set to this mode, text alignment for labels will be "
"dependent on the final placement of the label relative to the point. "
"E.g., if the label is placed to the left of the point, then the label "
"will be right aligned, while if it is placed to the right, it will be "
"left aligned."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1181
msgid ""
"For line vector layers you can include :guilabel:`Line directions "
"symbols` to help determine the lines directions. They work particularly "
"well when used with the *curved* or *Parallel* placement options from the"
" :guilabel:`Placement` tab. There are options to set the symbols "
"position, and to :guilabel:`reverse direction`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1187
msgid ""
"Use the |checkbox| :guilabel:`Formatted numbers` option to format numeric"
" labels. You can set the number of :guilabel:`Decimal places`. By "
"default, 3 decimal places will be used. Use the |checkbox| "
":guilabel:`Show plus sign` if you want to show the plus sign in positive "
"numbers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1195
msgid "Buffer tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1197
msgid ""
"To create a buffer around the labels, activate the |checkbox| "
":guilabel:`Draw text buffer` checkbox in the |labelbuffer| "
":guilabel:`Buffer` tab. You can set the buffer's :guilabel:`Size`, "
":guilabel:`color`, and :guilabel:`Transparency`. The buffer expands from "
"the label's outline , so, if the |checkbox| :guilabel:`color buffer's "
"fill` checkbox is activated, the buffer interior is filled. This may be "
"relevant when using partially transparent labels or with non-normal "
"blending modes, which will allow seeing behind the label's text. "
"Deactivating |checkbox| :guilabel:`color buffer's fill` checkbox (while "
"using totally transparent labels) will allow you to create outlined text "
"labels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1211
msgid "Background tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1213
msgid ""
"In the |labelbackground| :guilabel:`Background` tab, you can define with "
":guilabel:`Size X` and :guilabel:`Size Y` the shape of your background. "
"Use :guilabel:`Size type` to insert an additional 'Buffer' into your "
"background. The buffer size is set by default here. The background then "
"consists of the buffer plus the background in :guilabel:`Size X` and "
":guilabel:`Size Y`. You can set a :guilabel:`Rotation` where you can "
"choose between 'Sync with label', 'Offset of label' and 'Fixed'. Using "
"'Offset of label' and 'Fixed', you can rotate the background. Define an "
":guilabel:`Offset X,Y` with X and Y values, and the background will be "
"shifted. When applying :guilabel:`Radius X,Y`, the background gets "
"rounded corners. Again, it is possible to mix the background with the "
"underlying layers in the map canvas using the :guilabel:`Blend mode` (see"
" :ref:`blend-modes`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1230
msgid "Shadow tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1232
msgid ""
"Use the |labelshadow| :guilabel:`Shadow` tab for a user-defined "
":guilabel:`Draw drop shadow`. The drawing of the background is very "
"variable. Choose between 'Lowest label component', 'Text', 'Buffer' and "
"'Background'. The :guilabel:`Offset` angle depends on the orientation of "
"the label. If you choose the |checkbox| :guilabel:`Use global shadow` "
"checkbox, then the zero point of the angle is always oriented to the "
"north and doesn't depend on the orientation of the label. You can "
"influence the appearance of the shadow with the :guilabel:`Blur radius`. "
"The higher the number, the softer the shadows. The appearance of the drop"
" shadow can also be altered by choosing a blend mode."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1264
msgid "Placement tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1266
msgid ""
"Choose the |labelplacement| :guilabel:`Placement` tab for configuring "
"label placement and labeling priority. Note that the placement options "
"differ according to the type of vector layer, namely point, line or "
"polygon, and are affected by the global :ref:`PAL setting "
"<automated_placement>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1274
msgid "Placement for point layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1276
msgid ""
"With the |radioButtonOn| :guilabel:`Cartographic` placement mode, point "
"labels are generated with a better visual relationship with the point "
"feature, following ideal cartographic placement rules. Labels can be "
"placed at a set :guilabel:`Distance` either from the point feature itself"
" or from the bounds of the symbol used to represent the feature. The "
"latter option is especially useful when the symbol size isn't fixed, e.g."
" if it's set by a data defined size or when using different symbols in a "
"categorized renderer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1285
msgid "By default, placements are prioritised in the following order:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1287
msgid "top right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1288
msgid "top left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1289
msgid "bottom right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1290
msgid "bottom left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1291
msgid "middle right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1292
msgid "middle left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1293
msgid "top, slightly right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1294
msgid "bottom, slightly left."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1296
msgid ""
"Placement priority can, however, be customized or set for an individual "
"feature using a data defined list of prioritised positions. This also "
"allows only certain placements to be used, so e.g. for coastal features "
"you can prevent labels being placed over the land."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1301
msgid ""
"The |radioButtonOn| :guilabel:`Around point` setting places the label in "
"an equal radius (set in :guilabel:`Distance`) circle around the feature. "
"The placement of the label can even be constrained using the "
":guilabel:`Quadrant` option."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1306
msgid ""
"With the |radioButtonOn| :guilabel:`Offset from point`, labels are placed"
" at a fixed offset from the point feature. You can select the "
":guilabel:`Quadrant` in which to place your label. You are also able to "
"set the :guilabel:`Offset X,Y` distances between the points and their "
"labels and can alter the angle of the label placement with the "
":guilabel:`Rotation` setting. Thus, placement in a selected quadrant with"
" a defined rotation is possible."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1315
msgid "Placement for line layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1317
msgid ""
"Label options for line layers include |radioButtonOn| "
":guilabel:`Parallel`, |radioButtonOff| :guilabel:`Curved` or "
"|radioButtonOff| :guilabel:`Horizontal`. For the |radioButtonOn| "
":guilabel:`Parallel` and |radioButtonOff| :guilabel:`Curved` options, you"
" can set the position to |checkbox| :guilabel:`Above line`, |checkbox| "
":guilabel:`On line` and |checkbox| :guilabel:`Below line`. It's possible "
"to select several options at once. In that case, QGIS will look for the "
"optimal label position. For Parallel and curved placement options, you "
"can also use the line orientation for the position of the label. "
"Additionally, you can define a :guilabel:`Maximum angle between curved "
"characters` when selecting the |radioButtonOff| :guilabel:`Curved` option"
" (see Figure_labels_placement_line)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1334
msgid "Label placement examples in lines"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1336
msgid ""
"For all three placement options, in :guilabel:`Repeat`, you can set up a "
"minimum distance for repeating labels. The distance can be in ``mm`` or "
"in ``map units``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1341
msgid "Placement for polygon layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1343
msgid ""
"You can choose one of the following options for placing labels in "
"polygons (see figure_labels_placement_polygon_):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1346
msgid "|radioButtonOn| :guilabel:`Offset from centroid`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1347
msgid "|radioButtonOff| :guilabel:`Horizontal (slow)`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1348
msgid "|radioButtonOff| :guilabel:`Around centroid`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1349
msgid "|radioButtonOff| :guilabel:`Free (slow)`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1350
msgid "|radioButtonOff| :guilabel:`Using perimeter`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1351
msgid "and |radioButtonOff| :guilabel:`Using perimeter (curved)`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1353
msgid ""
"In the :guilabel:`Offset from centroid` settings you can specify if the "
"centroid is of the |radioButtonOn| :guilabel:`visible polygon` or "
"|radioButtonOff| :guilabel:`whole polygon`. That means that either the "
"centroid is used for the polygon you can see on the map or the centroid "
"is determined for the whole polygon, no matter if you can see the whole "
"feature on the map. You can place your label within a specific quadrant, "
"and define offset and rotation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1361
msgid ""
"The :guilabel:`Around centroid` setting places the label at a specified "
"distance around the centroid. Again, you can define |radioButtonOn| "
":guilabel:`visible polygon` or |radioButtonOff| :guilabel:`whole polygon`"
" for the centroid."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1366
msgid ""
"With the :guilabel:`Horizontal (slow)` or :guilabel:`Free (slow)` "
"options, QGIS places at the best position either a horizontal or a "
"rotated label inside the polygon."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1370
msgid ""
"With the :guilabel:`Using perimeter` option, the label will be drawn next"
" to the polygon boundary. The label will behave like the parallel option "
"for lines. You can define a position and a distance for the label. For "
"the position, |checkbox| :guilabel:`Above line`, |checkbox| :guilabel:`On"
" line`, |checkbox| :guilabel:`Below line` and |checkbox| :guilabel:`Line "
"orientation dependent position` are possible. You can specify the "
"distance between the label and the polygon outline, as well as the repeat"
" interval for the label."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1379
msgid ""
"The :guilabel:`Using perimeter (curved)` option helps you draw the label "
"along the polygon boundary, using a curved labeling. In addition to the "
"parameters available with :guilabel:`Using perimeter` setting, you can "
"set the :guilabel:`Maximum angle between curved characters polygon`, "
"either inside or outside."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1390
msgid "Label placement examples in polygons"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1392
msgid ""
"In the :guilabel:`priority` section you can define the priority with "
"which labels are rendered for all three vector layer types (point, line, "
"polygon). This placement option interacts with the labels from other "
"vector layers in the map canvas. If there are labels from different "
"layers in the same location, the label with the higher priority will be "
"displayed and the others will be left out."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1402
msgid "Rendering tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1404
msgid ""
"In the |render| :guilabel:`Rendering` tab, you can tune when the labels "
"can be rendered and their interaction with other labels and features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1407
msgid ""
"Under :guilabel:`Label options`, you find the :ref:`scale-based "
"<label_scaledepend>` and the :guilabel:`Pixel size-based` visibility "
"settings."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1410
msgid ""
"The :guilabel:`Label z-index` determines the order in which labels are "
"rendered, as well in relation with other feature labels in the layer "
"(using data-defined override expression), as with labels from other "
"layers. Labels with a higher z-index are rendered on top of labels (from "
"any layer) with lower z-index."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1415
msgid ""
"Additionally, the logic has been tweaked so that if 2 labels have "
"matching z-indexes, then:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1418
msgid ""
"if they are from the same layer, the smaller label will be drawn above "
"the larger label"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1419
msgid ""
"if they are from different layers, the labels will be drawn in the same "
"order as their layers themselves (ie respecting the order set in the map "
"legend)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1422
msgid ""
"Note that this setting doesn't make labels to be drawn below the features"
" from other layers, it just controls the order in which labels are drawn "
"on top of all the layer's features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1426
msgid ""
"While rendering labels and in order to display readable labels, QGIS "
"automatically evaluates the position of the labels and can hide some of "
"them in case of collision. You can however choose to |checkbox| "
":guilabel:`Show all labels for this layer (including colliding labels)` "
"in order to manually fix their placement."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1432
msgid ""
"With data-defined expressions in :guilabel:`Show label` and "
":guilabel:`Always Show` you can fine tune which labels should be "
"rendered."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1436
msgid ""
"Under :guilabel:`Feature options`, you can choose to :guilabel:`label "
"every part of a multi-part feature` and :guilabel:`limit the number of "
"features to be labeled`. Both line and polygon layers offer the option to"
" set a minimum size for the features to be labeled, using "
":guilabel:`Suppress labeling of features smaller than`. For polygon "
"features, you can also filter the labels to show according to whether "
"they completely fit within the feature or not. For line features, you can"
" choose to :guilabel:`Merge connected lines to avoid duplicate labels`, "
"rendering a quite airy map in conjunction with the :guilabel:`Distance` "
"or :guilabel:`Repeat` options in Placement tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1448
msgid ""
"From the :guilabel:`Obstacles` frame, you can manage the covering "
"relation between labels and features. Activate the |checkbox| "
":guilabel:`Discourage labels from covering features` option to decide "
"whether features of the layer should act as obstacles for any label "
"(including labels from other features in the same layer). An obstacle is "
"a feature QGIS tries as far as possible to not place labels over. Instead"
" of the whole layer, you can define a subset of features to use as "
"obstacles, using the |dataDefined| :sup:`data-defined override` control "
"next to the option."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1456
msgid ""
"The |slider| priority control slider for obstacles allows you to make "
"labels prefer to overlap features from certain layers rather than others."
" A **Low weight** obstacle priority means that features of the layer are "
"less considered as obstacles and thus more likely to be covered by "
"labels. This priority can also be data-defined, so that within the same "
"layer, certain features are more likely to be covered than others."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1463
msgid ""
"For polygon layers, you can choose the type of obstacle features could be"
" by minimising the labels placement:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1466
msgid ""
"**over the feature's interior**: avoids placing labels over the interior "
"of the polygon (prefers placing labels totally outside or just slightly "
"inside the polygon)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1469
msgid ""
"or **over the feature's boundary**: avoids placing labels over boundary "
"of the polygon (prefers placing labels outside or completely inside the "
"polygon). E.g., it can be useful for regional boundary layers, where the "
"features cover an entire area. In this case, it's impossible to avoid "
"placing labels within these features, and it looks much better to avoid "
"placing them over the boundaries between features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1480
msgid "Setting the automated placement engine"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1482
msgid ""
"In the top right corner of the :guilabel:`Labels` tab, you can use the "
"|autoPlacement| :sup:`Automated placement settings (applies to all "
"layers)` to configure a global and automated behavior of the labels. "
"Clicking the |autoPlacement| button provides you with the following "
"options:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1492
msgid "The labels automated placement engine"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1494
msgid ""
"The :guilabel:`Search method` combobox provides you with different "
"placement methods for finding good placement solutions for point, line "
"and polygon labeling. More details in this `article <https://www.ee.co.za"
"/wp-"
"content/uploads/legacy/PositionIT%202009/PAL_PositIT_Jul09_p56-61.pdf>`_."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1498
msgid ""
"The :guilabel:`Number of candidates` controls set how many label "
"placement candidates should be generated for each feature type. The more "
"candidates generated, the better the labeling will be - but at a cost of "
"rendering speed. Smaller number of candidates results in less labels "
"placed but faster redraws."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1502
msgid ""
"|checkbox| :guilabel:`Draw text as outlines`: controls whether text "
"labels are drawn (and exported) as either proper text objects OR as paths"
" only. If they are exported as text objects then they can be edited in "
"external applications (e.g. Inkscape) as normal text. BUT the side effect"
" is that the rendering quality is decreased, AND there's issues with "
"rendering when certain text settings like buffers are in place. That's "
"why drawing as outlines is recommended. Note that when :ref:`exporting a "
"layout to svg <export_layout_svg>` there's actually an override for this "
"setting - so you can leave the project rendering as outlines but for a "
":file:`.svg` export export the labels as text."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1511
msgid ""
"|checkbox| :guilabel:`Show partial labels`: controls whether labels which"
" fall partially outside of the map extent should be rendered. If checked,"
" these labels will be shown (when there's no way to place them fully "
"within the visible area). If unchecked then partial visible labels will "
"be skipped."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1515
msgid ""
"|checkbox| :guilabel:`show all labels for all layers (i.e. including "
"colliding objects)`. Note that this option can be also set per layer (see"
" :ref:`labels_rendering`)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1517
msgid ""
"|checkbox| :guilabel:`show candidates (for debugging)`: controls whether "
"boxes should be drawn on the map showing all the candidates generated for"
" label placement. Like the label says, it's useful only for debugging and"
" testing the effect different labeling settings have. This could be handy"
" for a better manual placement with tools from the :ref:`label toolbar "
"<label_toolbar>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1527
msgid "Rule-based labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1529
msgid ""
"With rule-based labeling multiple label configurations can be defined and"
" applied selectively on the base of expression filters and scale range, "
"as in :ref:`Rule-based rendering <rule_based_rendering>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1533
msgid ""
"To create a rule, select the |labelingRuleBased| **Rule-based labeling** "
"option in the main drop-down list from the :guilabel:`Labels` tab and "
"click the |signPlus| button at the bottom  of the dialog. Then fill the "
"new dialog with a description and an expression to filter features. You "
"can also set a :ref:`scale range <label_scaledepend>` in which the label "
"rule should be applied. The other options available in this dialog are "
"the :ref:`common settings <showlabels>` seen beforehand."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1546
msgid "Rule settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1548
msgid ""
"A summary of existing rules is shown in the main dialog (see "
"figure_labels_rule_based_). You can add multiple rules, reorder or "
"imbricate them with a drag-and-drop. You can as well remove them with the"
" |signMinus| button or edit them with |projectProperties| button or a "
"double-click."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1558
msgid "Rule based labeling panel"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1566
msgid "Define labels based on expressions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1568
msgid ""
"Whether you choose single or rule-based labeling type, QGIS allows using "
"expressions to label features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1571
msgid ""
"Assuming you are using the :guilabel:`Single labels` method, click the "
"|expression| icon near the :guilabel:`Label with` drop-down list in the "
"|labeling| :guilabel:`Labels` tab of the properties dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1575
msgid ""
"In figure_labels_expression_, you see a sample expression to label the "
"alaska trees layer with tree type and area, based on the field 'VEGDESC',"
" some descriptive text, and the function ``$area`` in combination with "
"``format_number()`` to make it look nicer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1585
msgid "Using expressions for labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1587
msgid ""
"Expression based labeling is easy to work with. All you have to take care"
" of is that:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1590
msgid ""
"You may need to combine all elements (strings, fields, and functions) "
"with a string concatenation function such as ``concat``, ``+`` or ``||``."
" Be aware that in some situations (when null or numeric value are "
"involved) not all of these tools will fit your need."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1594
msgid "Strings are written in 'single quotes'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1595
msgid "Fields are written in \"double quotes\" or without any quote."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1597
msgid "Let's have a look at some examples:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1599
msgid "Label based on two fields 'name' and 'place' with a comma as separator::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1603
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1615
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1626
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1641
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1654
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1666
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1677
msgid "Returns::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1607
msgid "Label based on two fields 'name' and 'place' with other texts:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1619
msgid ""
"Label based on two fields 'name' and 'place' with other texts combining "
"different concatenation functions:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1630
msgid "Or, if the field 'place' is NULL, returns::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1634
msgid ""
"Multi-line label based on two fields 'name' and 'place' with a "
"descriptive text:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1646
msgid ""
"Label based on a field and the $area function to show the place's name "
"and its rounded area size in a converted unit:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1658
msgid ""
"Create a CASE ELSE condition. If the population value in field "
"`population` is <= 50000 it is a town, otherwise it is a city:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1670
msgid ""
"Display name for the cities and no label for the other features (for the "
"\"city\" context, see example above):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1681
msgid ""
"As you can see in the expression builder, you have hundreds of functions "
"available to create simple and very complex expressions to label your "
"data in QGIS. See :ref:`vector_expressions` chapter for more information "
"and examples on expressions."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1691
msgid "Using data-defined override for labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1693
msgid ""
"With the |dataDefined| :sup:`Data defined override` function, the "
"settings for the labeling are overridden by entries in the attribute "
"table or expressions based on them. This feature can be used to set "
"values for most of the labeling options described above."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1698
msgid ""
"For example, using the Alaska QGIS sample dataset, let's label the "
":file:`airports` layer with their name, based on their militarian "
"``USE``, i.e. whether the airport is accessible to :"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1702
msgid "military people, then display it in gray color, size 8;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1703
msgid "others, then show in blue color, size 10."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1705
msgid ""
"To do this, after you enabled the labeling on the ``NAME`` field of the "
"layer (see :ref:`showlabels`):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1708
msgid "Activate the :guilabel:`Text` tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1709
msgid "Click on the |dataDefined| icon next to the :guilabel:`Size` property."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1710
msgid "Select :guilabel:`Edit...` and type::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1718
msgid ""
"Press :guilabel:`OK` to validate. The dialog closes and the |dataDefined|"
" button becomes |dataDefineExpressionOn| meaning that an rule is being "
"run."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1720
msgid ""
"Then click the button next to the color property, type the expression "
"below and validate::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1728
msgid ""
"Likewise, you can customize any other property of the label, the way you "
"want. See more details on the |dataDefined| :sup:`Data-define override` "
"widget's description and manipulation in :ref:`data_defined` section."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1737
msgid "Airports labels are formatted based on their attributes"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1742
msgid "The Label Toolbar"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1744
msgid ""
"The :guilabel:`Label Toolbar` provides some tools to manipulate "
"|labeling| :ref:`label <vector_labels_tab>` or |diagram| :ref:`diagram "
"<sec_diagram>` properties, but only if the corresponding data-defined "
"option is indicated (otherwise, buttons are disabled). Layer might also "
"need to be in edit mode."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1754
msgid "The Label toolbar"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1756
msgid ""
"While for readability, ``label`` has been used below to describe the "
"Label toolbar, note that when mentioned in their name, the tools work "
"almost the same way with diagrams:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1760
msgid ""
"|pinLabels| :sup:`Pin/Unpin Labels And Diagrams` that has data-defined "
"position. By clicking or draging an area, you pin label(s). If you click "
"or drag an area holding :kbd:`Shift`, label(s) are unpinned. Finally, you"
" can also click or drag an area holding :kbd:`Ctrl` to toggle the pin "
"status of label(s)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1765
msgid ""
"|showPinnedLabels| :sup:`Highlight Pinned Labels And Diagrams`. If the "
"vector layer of the label is editable, then the highlighting is green, "
"otherwise it's blue."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1768
msgid ""
"|moveLabel| :sup:`Move Label And Diagram` that has data-defined position."
" You just have to drag the label to the desired place."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1770
msgid ""
"|showHideLabels| :sup:`Show/Hide Labels And Diagrams` that has data-"
"defined visbility. If you click or drag an area holding :kbd:`Shift`, "
"then label(s) are hidden. When a label is hidden, you just have to click "
"or drag an area around the feature's point to restore its visibility."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1774
msgid ""
"|rotateLabel| :sup:`Rotate Label`. Click the label and move around and "
"you get the text rotated."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1776
msgid ""
"|changeLabelProperties| :sup:`Change Label`. It opens a dialog to change "
"the clicked label properties; it can be the label itself, its "
"coordinates, angle, font, size... as long as this property has been "
"mapped to a field."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1780
msgid "**Label tools overwrite current field values**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1782
msgid ""
"Using the :guilabel:`Label toolbar` to customize the labeling actually "
"writes the new value of the property in the mapped field. Hence, be "
"careful to not inadvertently replace data you may need later!"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1788
msgid ""
"The :ref:`vector_auxiliary_storage` mechanism may be used to customize "
"labeling (position, and so on) without modifying the underlying data "
"source."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1792
msgid "Customize the labels from the map canvas"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1794
msgid ""
"Combined with the :guilabel:`Label Toolbar`, the data defined override "
"setting helps you manipulate labels in the map canvas (move, edit, "
"rotate). We now describe an example using the data-defined override "
"function for the |moveLabel|:sup:`Move label` function (see "
"figure_labels_coordinate_data_defined_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1799
msgid "Import :file:`lakes.shp` from the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1800
msgid ""
"Double-click the layer to open the Layer Properties. Click on "
":guilabel:`Labels` and :guilabel:`Placement`. Select |radioButtonOn| "
":guilabel:`Offset from centroid`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1802
msgid ""
"Look for the :guilabel:`Data defined` entries. Click the |dataDefined| "
"icon to define the field type for the :guilabel:`Coordinate`. Choose "
"``xlabel`` for X and ``ylabel`` for Y. The icons are now highlighted in "
"yellow."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1811
msgid "Labeling of vector polygon layers with data-defined override"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1813
msgid "Zoom into a lake."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1814
msgid ""
"Set editable the layer using the |toggleEditing| :sup:`Toggle Editing` "
"button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1815
msgid ""
"Go to the Label toolbar and click the |moveLabel| icon. Now you can shift"
" the label manually to another position (see figure_labels_move_). The "
"new position of the label is saved in the ``xlabel`` and ``ylabel`` "
"columns of the attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1819
msgid ""
"Using :ref:`geometry_generator_symbol` with the expression below, you can"
" also add a linestring symbol layer to connect each lake to its moved "
"label:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1832
msgid "Moved labels"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1836
msgid ""
"The :ref:`vector_auxiliary_storage` mechanism may be used with data-"
"defined properties without having an editable data source."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1844
msgid "Diagrams Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1846
msgid ""
"|diagram| The :guilabel:`Diagrams` tab allows you to add a graphic "
"overlay to a vector layer (see figure_diagrams_attributes_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1849
msgid "The current core implementation of diagrams provides support for:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1851
msgid ""
"|diagramNone| :guilabel:`No diagrams`: the default value with no diagram "
"displayed over the features;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1853
msgid ""
"|piechart| :guilabel:`Pie charts`, a circular statistical graphic divided"
" into slices to illustrate numerical proportion. The arc length of each "
"slice is proportional to the quantity it represents;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1856
msgid ""
"|text| :guilabel:`Text diagrams`, a horizontaly divided circle showing "
"statistics values inside;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1858
msgid "and |histogram| :guilabel:`Histograms`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1860
msgid ""
"In the top right corner of the :guilabel:`Diagrams` tab, the "
"|autoPlacement| :sup:`Automated placement settings (applies to all "
"layers)` button provides means to control diagram :ref:`labels placement "
"<automated_placement>` on the map canvas."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1865
msgid "**Switch quickly between types of diagrams**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1867
msgid ""
"Given that the settings are almost common to the different types of "
"diagram, when designing your diagram, you can easily change the diagram "
"type and check which one is more appropriate to your data without any "
"loss."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1871
msgid "For each type of diagram, the properties are divided into several tabs:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1873
msgid ":ref:`Attributes <diagram_attributes>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1874
msgid ":ref:`Rendering <diagram_appearance>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1875
msgid ":ref:`Size <diagram_size>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1876
msgid ":ref:`Placement <diagram_placement>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1877
msgid ":ref:`Options <diagram_options>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1878
msgid ":ref:`Legend <diagram_legend>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1883
msgid "Attributes"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1885
msgid ""
":guilabel:`Attributes` defines which variables to display in the diagram."
" Use |signPlus| :sup:`add item` button to select the desired fields into "
"the 'Assigned Attributes' panel. Generated attributes with "
":ref:`vector_expressions` can also be used."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1890
msgid ""
"You can move up and down any row with click and drag, sorting how "
"attributes are displayed. You can also change the label in the 'Legend' "
"column or the attribute color by double-clicking the item."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1894
msgid ""
"This label is the default text displayed in the legend of the print "
"layout or of the layer tree."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1902
msgid "Diagram properties  - Attributes tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1907
msgid "Rendering"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1909
msgid ""
":guilabel:`Rendering` defines how the diagram looks like. It provides "
"general settings that do not interfere with the statistic values such as:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1912
msgid "the graphic's opacity, its outline width and color;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1913
msgid "and, depending on the type of diagram:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1915
msgid "the width of the bar in case of histogram;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1916
msgid ""
"the circle background color in case of text diagram, and the font used "
"for texts;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1917
msgid ""
"the orientation of the left line of the first slice represented in pie "
"chart. Note that slices are displayed clockwise."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1920
msgid ""
"In this tab, you can also manage and fine tune the diagram visibility "
"with different options:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1923
msgid ""
":guilabel:`Diagram z-index`: controls how diagrams are drawn on top of "
"each other and on top of labels. A diagram with a high index is drawn "
"over diagrams and labels;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1926
msgid ""
"|checkbox| :guilabel:`Show all diagrams`: shows all the diagrams even if "
"they overlap each other;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1928
msgid ":guilabel:`Show diagram`: allows only specific diagrams to be rendered;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1929
msgid ""
":guilabel:`Always Show`: selects specific diagrams to always render, even"
" when they overlap other diagrams or map labels;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1931
msgid "setting the :ref:`Scale dependent visibility <label_scaledepend>`;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1932
msgid ""
":guilabel:`Discourage diagrams and labels from covering features`: "
"defines features to use as obstacles, ie QGIS will try to not place "
"diagrams nor labels over these features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1942
msgid "Diagram properties - Rendering tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1947
msgid "Size"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1949
msgid ""
":guilabel:`Size` is the main tab to set how the selected statistics are "
"represented. The diagram size units can be 'Millimeter', 'Points', "
"Pixels, 'Map Units' or 'Inches'. You can use :"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1954
msgid ""
":guilabel:`Fixed size`, an unique size to represent the graphic of all "
"the features, except when displaying histogram"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1956
msgid "or :guilabel:`Scaled size`, based on an expression using layer attributes."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1965
msgid "Diagram properties - Size tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1970
msgid "Placement"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1972
msgid ""
":guilabel:`Placement` helps to define diagram position. According to the "
"layer geometry type, it offers different options for the placement:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1975
msgid ""
"'Over the point' or 'Around the point' for point geometry. The latter "
"variable requires a radius to follow."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1977
msgid ""
"'Over the line' or 'Around the line' for line geometry. Like point "
"feature, the last variable requires a distance to respect and user can "
"specify the diagram placement relative to the feature ('above', 'on' "
"and/or 'below' the line) It's possible to select several options at once."
" In that case, QGIS will look for the optimal position of the diagram. "
"Remember that here you can also use the line orientation for the position"
" of the diagram."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1983
msgid ""
"'Over the centroid', 'Around the centroid' (with a distance set), "
"'Perimeter' and anywhere 'Inside polygon' are the options for polygon "
"features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1986
msgid ""
"The diagram can also be placed using feature data to fill the coordinates"
" ``X`` and ``Y`` fields."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1989
msgid ""
"The placement of the diagrams can interact with the labeling, so you can "
"detect and solve position conflicts between diagrams and labels by "
"setting the **Priority** slider value."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1998
msgid "Vector properties dialog with diagram properties, Placement tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2003
msgid "Options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2005
msgid ""
"The :guilabel:`Options` tab has settings only in case of histogram. You "
"can choose whether the bar orientation should be 'Up', 'Down', 'Right' "
"and 'Left'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2014
msgid "Legend"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2016
msgid ""
"From the :guilabel:`Legend` tab, you can choose to display items of the "
"diagram in the :ref:`label_legend`, and in the :ref:`print layout legend "
"<layout_legend_item>`, next to the layer symbology:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2020
msgid ""
"check :guilabel:`Show legend entries for diagram attributes` to display "
"in the legends the ``Color`` and ``Legend`` properties, as previously "
"assigned in the :guilabel:`Attributes` tab;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2023
msgid ""
"and, when a :ref:`scaled size <diagram_size>` is being used for the "
"diagrams, push the :guilabel:`Legend Entries for Diagram Size...` button "
"to configure the diagram symbol aspect in the legends. This opens the "
":guilabel:`Data-defined Size Legend` dialog whose options are described "
"in :ref:`data_defined_size_legend`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2028
msgid ""
"When set, the diagram legend items (attributes with color and diagram "
"size) are also displayed in the print layout legend, next to the layer "
"symbology."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2033
msgid "Case Study"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2035
msgid ""
"We will demonstrate an example and overlay on the Alaska boundary layer a"
" text diagram showing temperature data from a climate vector layer. Both "
"vector layers are part of the QGIS sample dataset (see section "
":ref:`label_sampledata`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2040
msgid ""
"First, click on the |addOgrLayer| :sup:`Load Vector` icon, browse to the "
"QGIS sample dataset folder, and load the two vector shape layers "
":file:`alaska.shp` and :file:`climate.shp`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2043
msgid ""
"Double click the ``climate`` layer in the map legend to open the "
":guilabel:`Layer Properties` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2045
msgid ""
"Click on the :guilabel:`Diagrams` tab and from the :guilabel:`Diagram "
"type` |selectString| combo box, select 'Text diagram'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2047
msgid ""
"In the :guilabel:`Appearance` tab, we choose a light blue as background "
"color, and in the :guilabel:`Size` tab, we set a fixed size to 18 mm."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2049
msgid "In the :guilabel:`Position` tab, placement could be set to 'Around Point'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2050
msgid ""
"In the diagram, we want to display the values of the three columns "
"``T_F_JAN``, ``T_F_JUL`` and ``T_F_MEAN``. So, in the "
":guilabel:`Attributes` tab first select ``T_F_JAN`` and click the "
"|signPlus| button, then repeat with ``T_F_JUL`` and finally ``T_F_MEAN``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2054
msgid ""
"Now click :guilabel:`Apply` to display the diagram in the QGIS main "
"window."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2055
msgid ""
"You can adapt the chart size in the :guilabel:`Size` tab. Activate the "
"|radioButtonOn| :guilabel:`Scaled size` and set the size of the diagrams "
"on the basis of the :guilabel:`maximum value` of an attribute and the "
":guilabel:`Size` option. If the diagrams appear too small on the screen, "
"you can activate the |checkbox| :guilabel:`Increase size of small "
"diagrams` checkbox and define the minimum size of the diagrams."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2062
msgid ""
"Change the attribute colors by double clicking on the color values in the"
" :guilabel:`Assigned attributes` field. Figure_diagrams_mapped_ gives an "
"idea of the result."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2065
msgid "Finally, click :guilabel:`OK`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2073
msgid "Diagram from temperature data overlayed on a map"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2075
msgid ""
"Remember that in the :guilabel:`Position` tab, a |checkbox| "
":guilabel:`Data defined position` of the diagrams is possible. Here, you "
"can use attributes to define the position of the diagram. You can also "
"set a scale-dependent visibility in the :guilabel:`Appearance` tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2080
msgid ""
"The size and the attributes can also be an expression. Use the "
"|expression| button to add an expression. See :ref:`vector_expressions` "
"chapter for more information and example."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2085
msgid "Using data-defined override"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2087
msgid ""
"As mentioned above, you can use some custom data-defined to tune the "
"diagrams rendering:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2090
msgid "position in :guilabel:`Placement` tab by filling ``X`` and ``Y`` fields"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2091
msgid ""
"visibility in :guilabel:`Appearance` tab by filling the ``Visibility`` "
"field"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2093
msgid "See :ref:`data_defined_labeling` for more information."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2100
msgid "Source Fields Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2102
msgid ""
"|sourceFields| The :guilabel:`Source Fields` tab provides information on "
"fields related to the layer and helps you organize them."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2105
msgid ""
"The layer can be made :ref:`editable <editingvector>` using the "
"|toggleEditing| :sup:`Toggle editing mode`. At this moment, you can "
"modify its structure using the |newAttribute| :sup:`New field` and "
"|deleteAttribute| :sup:`Delete field` buttons."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2110
msgid ""
"You can also rename fields by double-clicking its name. This is only "
"supported for data providers like PostgreSQL, Oracle, Memory layer and "
"some OGR layer depending on the OGR data format and version."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2114
msgid ""
"You can define some alias to display human readable fields in the feature"
" form or the attribute table. In this case, you don't need to switch to "
"editing mode. Alias are saved in project file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2118
msgid ""
"Depending on the data provider, you can associate a comment with a field,"
" for example at its creation. This information is retrieved and shown in "
"the :guilabel:`Comment` column and is later displayed when hovering over "
"the field label in a feature form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2123
msgid ""
"Other than the fields contained in the dataset, virtual fields and "
":ref:`Auxiliary Storage <vector_auxiliary_storage>` included, the "
":guilabel:`Source Fields` tab also lists fields from any :ref:`joined "
"layers <sec_joins>`. Depending on the origin of the field, a different "
"background color is applied to it."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2128
msgid ""
"For each listed field, the dialog also lists read-only characteristics "
"such as its ``type``, ``type name``, ``length`` and ``precision``. When "
"serving the layer as ``WMS`` or ``WFS``, you can also check here which "
"fields could be retrieved."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2137
msgid "Source Field properties tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2143
msgid "Attributes Form Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2145
msgid ""
"|formView| The :guilabel:`Attributes Form` tab helps you set up the form "
"to display when creating new features or querying existing one. You can "
"define:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2148
msgid ""
"the look and the behavior of each field in the feature form or the "
"attribute table (label, widget, constraints...);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2150
msgid "the form's structure (custom or autogenerated):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2151
msgid ""
"extra logic in Python to handle interaction with the form or field "
"widgets."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2153
msgid ""
"At the top right of the dialog, you can set whether the form is opened by"
" default when creating new features. This can be configured per layer or "
"globally with the :guilabel:`Suppress attribute form pop-up after feature"
" creation` option in the :menuselection:`Settings --> Options --> "
"Digitizing` menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2162
msgid "Customizing a form for your data"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2164
msgid ""
"By default, when you click on a feature with the |identify| "
":sup:`Identify Features` tool or switch the attribute table to the *form "
"view* mode, QGIS displays a basic form with predefined widgets (generally"
" spinboxes and textboxes --- each field is represented on a dedicated row"
" by its label next to the widget). If :ref:`relations <vector_relations>`"
" are set on the layer, fields from the referencing layers are shown in an"
" embedded frame at the bottom of the form, following the same basic "
"structure."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2172
msgid ""
"This rendering is the result of the default ``Autogenerate`` value of the"
" :guilabel:`Attribute editor layout` setting in the :menuselection:`Layer"
" properties --> Attributes Form` tab. This property holds three different"
" values:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2177
msgid ""
"``Autogenerate``: keeps the basic structure of \"one row - one field\" "
"for the form but allows to customize each corresponding widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2179
msgid ""
"``Drag-and-drop designer``: other than widget customization, the form "
"structure can be made more complex eg, with widgets embedded in groups "
"and tabs."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2182
msgid ""
"``Provide ui file``: allows to use a Qt designer file, hence a "
"potentially more complex and fully featured template, as feature form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2186
msgid "The autogenerated form"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2188
msgid ""
"When the ``Autogenerate`` option is on, the :guilabel:`Available widgets`"
" panel shows lists of fields (from the layer and its relations) that "
"would be shown in the form. Select a field and you can configure its "
"appearance and behavior in the right panel:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2193
msgid ""
"adding :ref:`custom label and automated checks <configure_field>` to the "
"field;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2194
msgid "setting a :ref:`particular widget <edit_widgets>` to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2201
msgid "The drag and drop designer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2203
msgid ""
"Choose ``Drag and drop designer`` from the :guilabel:`Attribute editor "
"layout` combobox and you enable a :guilabel:`Form Layout` panel next to "
"the :guilabel:`Available widgets` one. From this panel you can create an "
"editor form with several tabs and named groups to present the attribute "
"fields, as shown for example in figure_fields_form_."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2214
msgid "Resulting built-in form with tabs and named groups"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2216
msgid ""
"To create the form, you can drag and drop fields from the "
":guilabel:`Available Widgets` panel to the :guilabel:`Form Layout` one to"
" have fields added to your custom form and drag and drop fiels inside the"
" :guilabel:`Form Layout` to reorder their position."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2221
msgid ""
"You can also use categories (tab or group frames) to better structure the"
" form. The first step is to use the |signPlus| icon to create a tab in "
"which fields and groups will be displayed (see figure_fields_layout_). "
"You can create as many categories as you want. Use |signMinus| button to "
"remove any unwanted elements. The next step will be to assign to each "
"category the relevant fields, by simple drag and drop. You can use the "
"same fields many times."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2233
msgid "Dialog to create categories with the **Attribute editor layout**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2236
msgid ""
"You can configure tabs or groups with a double-click. QGIS opens a form "
"in which you can:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2239
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2255
msgid "choose to hide or show the item label;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2240
msgid "rename the category;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2241
msgid ""
"set over how many columns the fields under the category should be "
"distributed;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2242
msgid ""
"enter an expression to control the category visibility. The expression "
"will be re-evaluated everytime values in the form change and the tab or "
"groupbox shown/hidden accordingly;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2245
msgid "show the category as a group box (only available for tabs)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2247
msgid ""
"With a double-click on a field label, you can also specify whether the "
"label of its widget should be visible or not in the form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2250
msgid ""
"In case the layer is involved in ``one or many to many relations`` (see "
":ref:`vector_relations`), referencing layers are listed in the "
":guilabel:`Relations` frame and their form can be embedded in the current"
" layer form by drag-and-drop. Like the other items, double-click the "
"relation label to configure some options:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2256
msgid "show the link button;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2257
msgid "show the unlink button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2262
msgid "Using custom ui-file"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2264
msgid ""
"The ``Provide ui-file`` option allows you to use complex dialogs made "
"with Qt-Designer. Using a UI-file allows a great deal of freedom in "
"creating a dialog. Note that, in order to link the graphical objects "
"(textbox, combobox...) to the layer's fields, you need to give them the "
"same name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2269
msgid "Use the :guilabel:`Edit UI` to define the path to the file to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2271
msgid ""
"You'll find some example in the :ref:`Creating a new form <creating-new-"
"form>` lesson of the :ref:`QGIS-training-manual-index-reference`. For "
"more advanced information, see https://nathanw.net/2011/09/05/qgis-tips-"
"custom-feature-forms-with-python-logic/."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2278
msgid "Enhance your form with custom functions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2280
msgid ""
"QGIS forms can have a Python function that is called when the dialog is "
"opened. Use this function to add extra logic to your dialogs. The form "
"code can be specified in three different ways:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2284
msgid ""
"``load from the environment``: use a function, for example in "
":file:`startup.py` or from an installed plugin)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2286
msgid ""
"``load from an external file``: a file chooser will appear in that case "
"to allow you to select a Python file from your filesystem"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2288
msgid ""
"``provide code in this dialog``: a Python editor will appear where you "
"can directly type the function to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2291
msgid ""
"In all cases you must enter the name of the function that will be called "
"(``open`` in the example below)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2294
msgid "An example is (in module MyForms.py):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2302
msgid "Reference in Python Init Function like so: ``open``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2308
msgid "Configure the field behavior"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2310
msgid ""
"The main part of the :guilabel:`Attributes Form` tab helps you set the "
"type of widget used to fill or display values of the field, in the "
"attribute table or the feature form: you can define how user interacts "
"with each field and the values or range of values that are allowed to be "
"added to each."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2320
msgid "Dialog to select an edit widget for an attribute column"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2326
msgid "Common settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2328
msgid ""
"Regardless the type of widget applied to the field, there are some common"
" properties you can set to control whether and how a field can be edited."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2332
msgid "General options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2334
msgid ""
":guilabel:`Alias`: a human readable name to use for fields. The alias "
"will be displayed in the feature form, the attribute table, or in the "
":guilabel:`Identify results` panel. It can also be used as field name "
"replacement in the :ref:`expression builder <vector_expressions>`, easing"
" expressions understanding and reviews. Aliases are saved in project "
"file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2340
msgid ""
":guilabel:`Comment`: displays the field's comment as shown in the "
":guilabel:`Source Fields` tab, in a read-only state. This information is "
"shown as tooltip when hovering over the field label in a feature form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2343
msgid ""
"|checkbox| :guilabel:`Editable`: uncheck this option to set the field "
"read-only (not manually modifiable) even when the layer is in edit mode. "
"Note that checking this setting doesn't override any edit limitation from"
" the provider."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2346
msgid ""
"|checkbox| :guilabel:`Label on top`: places the field name above or "
"beside the widget in the feature form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2350
msgid "Default values"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2352
msgid ""
":guilabel:`Default value`: for new features, automatically populates by "
"default the field with a predefined value or an :ref:`expression-based "
"one <vector_expressions>`. For example, you can:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2356
msgid ""
"use ``$x``, ``$length``, ``$area`` to automatically populate a field with"
" the feature's X coordinate, length, area or any geometric information at"
" its creation;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2358
msgid ""
"increment a field by 1 for each new feature using "
"``maximum(\"field\")+1``;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2359
msgid "save the feature creation datetime using ``now()``;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2360
msgid ""
"use :ref:`variables <general_tools_variables>` in expressions, making it "
"easier to e.g. insert the operator name (``@user_full_name``), the "
"project file path (``@project_path``), ..."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2364
msgid ""
"A preview of the resulting default value is displayed at the bottom of "
"the widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2366
msgid ""
"The ``Default value`` option is not aware of the values in any other "
"field of the feature being created so it won't be possible to use an "
"expression combining any of those values i.e using an expression like "
"``concat(field1, field2)`` may not work."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2371
msgid ""
"|checkbox| :guilabel:`Apply default value on update`: whenever the "
"feature attribute or geometry is changed, the default value is "
"recalculated. This could be handy to save values like last user that "
"modifies data, last time it was changed..."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2378
msgid "Constraints"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2380
msgid ""
"You can constrain the value to insert in the field. This constraint can "
"be:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2382
msgid "|checkbox| :guilabel:`Not null`: requires the user to provide a value;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2383
msgid ""
"|checkbox| :guilabel:`Unique`: guarantee the inserted value to be unique "
"throughout the field;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2385
msgid ""
"based on a custom :guilabel:`expression`: e.g. "
"``regexp_match(col0,'A-Za-z')`` to ensure that the value of the field "
"*col0* has only alphabetical letter. A short description can be added to "
"help you remember the constraint."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2389
msgid ""
"Whenever a value is added or edited in a field, it's submitted to the "
"existing constraints and:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2392
msgid ""
"if it meets all the requirements, a green check is shown beside the field"
" in the form;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2394
msgid ""
"if it does not meet all the requirements, then a yellow or red cross is "
"displayed near the field. You can hover over the cross to remind which "
"constraints are applied to the field and fix the value:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2398
msgid ""
"A yellow cross appears when the unmet constraint is an unenforced one and"
" it does not prevent you to save the changes with the \"wrong\" values;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2401
msgid ""
"A red cross can not be ignored and does not allow you to save your "
"modifications until they meet the constraints. It appears when the "
"|checkbox| :guilabel:`Enforce constraint` option is checked."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2409
msgid "Edit widgets"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2411
msgid ""
"Based on the field type, QGIS automatically determines and assigns a "
"default widget type to it. You can then replace the widget with any other"
" compatible with the field type. The available widgets are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2415
msgid "**Checkbox**: Displays a checkbox whose state defines the value to insert."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2416
msgid ""
"**Classification**: Only available when a :ref:`categorized symbology "
"<categorized_renderer>` is applied to the layer, displays a combo box "
"with the values of the classes."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2419
msgid ""
"**Color**: Displays a :ref:`color widget <color-selector>` allowing to "
"select a color; the color value is stored as a html notation in the "
"attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2421
msgid ""
"**Date/Time**: Displays a line field which can open a calendar widget to "
"enter a date, a time or both. Column type must be text. You can select a "
"custom format, pop-up a calendar, etc."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2424
msgid ""
"**Enumeration**: Opens a combo box with predefined values fetched from "
"the database. This is currently only supported by the PostgreSQL "
"provider, for fields of ``enum`` type."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2427
msgid ""
"**Attachment**: Uses a \"Open file\" dialog to store file path in a "
"relative or absolute mode. It can also be used to display a hyperlink (to"
" document path), a picture or a web page."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2430
msgid ""
"**Hidden**: A hidden attribute column is invisible. The user is not able "
"to see its contents."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2432
msgid ""
"**Key/Value**: Displays a two-columns table to store sets of key/value "
"pairs within a single field. This is currently supported by the "
"PostgreSQL provider, for fields of ``hstore`` type."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2435
msgid ""
"**List**: Displays a single column table to add different values within a"
" single field. This is currently supported by the PostgreSQL provider, "
"for fields of ``array`` type."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2438
msgid ""
"**Range**: Allows you to set numeric values from a specific range. The "
"edit widget can be either a slider or a spin box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2440
msgid ""
"**Relation Reference**: This widget lets you embed the feature form of "
"the referenced layer on the feature form of the actual layer. See "
":ref:`vector_relations`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2443
msgid ""
"**Text Edit** (default): This opens a text edit field that allows simple "
"text or multiple lines to be used. If you choose multiple lines you can "
"also choose html content."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2446
msgid ""
"**Unique Values**: You can select one of the values already used in the "
"attribute table. If 'Editable' is activated, a line edit is shown with "
"autocompletion support, otherwise a combo box is used."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2449
msgid ""
"**Uuid Generator**: Generates a read-only UUID (Universally Unique "
"Identifiers) field, if empty."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2451
msgid ""
"**Value Map**: A combo box with predefined items. The value is stored in "
"the attribute, the description is shown in the combo box. You can define "
"values manually or load them from a layer or a CSV file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2454
msgid ""
"**Value Relation**: Offers values from a related table in a combobox. You"
" can select layer, key column and value column. Several options are "
"available to change the standard behaviors: allow null value, order by "
"value, allow multiple selections and use of auto-completer. The forms "
"will display either a drop-down list or a line edit field when completer "
"checkbox is enabled."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2461
msgid "**Relative Path in Attachment widget**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2463
msgid ""
"If the path which is selected with the file browser is located in the "
"same directory as the :file:`.qgs` project file or below, paths are "
"converted to relative paths. This increases portability of a :file:`.qgs`"
" project with multimedia information attached."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2473
msgid "Joins Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2475
msgid ""
"|join| The :guilabel:`Joins` tab allows you to join a loaded attribute "
"table to a loaded vector layer. After clicking |signPlus|, the "
":guilabel:`Add vector join` dialog appears. As key columns, you have to "
"define a join layer you want to connect with the target vector layer. "
"Then, you have to specify the join field that is common to both the join "
"layer and the target layer. Now you can also specify a subset of fields "
"from the joined layer based on the checkbox |checkbox| :guilabel:`Choose "
"which fields are joined`. As a result of the join, all information from "
"the join layer and the target layer are displayed in the attribute table "
"of the target layer as joined information. If you specified a subset of "
"fields only these fields are displayed in the attribute table of the "
"target layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2487
msgid ""
"If the target layer is editable, then some icons will be displayed in the"
" attribute table next to fields, in order to inform their status:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2490
msgid ""
"|joinNotEditable|: the join layer is not configured to be editable. If "
"you want to be able to edit join features from the target attribute "
"table, then you have to check the option |checkbox| :guilabel:`Editable "
"join layer`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2494
msgid ""
"|joinedLayerNotEditable|: the join layer is well configured to be "
"editable, but its current status is read only."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2496
msgid ""
"|joinHasNotUpsertOnEdit|: the join layer is editable but synchronization "
"mechanisms are not activated. If you want to automatically add a feature "
"in the join layer when a feature is created in the target layer, then you"
" have to check the option |checkbox| :guilabel:`Upsert on edit`. "
"Symmetrically, the option |checkbox| :guilabel:`Delete cascade` may be "
"activated if you want to automatically delete join features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2503
msgid ""
"Moreover, the |checkbox| :guilabel:`Dynamic form` option helps to "
"synchronize join fields on the fly, according to the :guilabel:`Target "
"field`. This way, constraints for join fields are also correctly updated."
" Note that it's deactivated by default because it may be very time "
"consuming if you have a lot of features or a myriad of joins."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2509
msgid ""
"Otherwise, the |checkbox| :guilabel:`Cache join layer in virtual memory` "
"option allows to cache values in memory (without geometries) from the "
"joined layer in order to speed up lookups."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2513
msgid ""
"QGIS currently has support for joining non-spatial table formats "
"supported by OGR (e.g., CSV, DBF and Excel), delimited text and the "
"PostgreSQL provider (see figure_joins_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2522
msgid "Join an attribute table to an existing vector layer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2524
msgid "Additionally, the add vector join dialog allows you to:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2526
msgid "|checkbox| :guilabel:`Create attribute index on the join field`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2527
msgid "|checkbox| :guilabel:`Choose which fields are joined`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2528
msgid "Create a |checkbox| :guilabel:`Custom field name prefix`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2534
msgid "Auxiliary Storage Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2536
msgid ""
"The regular way to customize styling and labeling is to use data-defined "
"properties as described in :ref:`data_defined`. However, it may not be "
"possible if the underlying data is read only. Moreover, configuring these"
" data-defined properties may be very time consuming or not desirable! For"
" example, if you want to fully use map tools coming with "
":ref:`label_toolbar`, then you need to add and configure more than 20 "
"fields in your original data source (X and Y positions, rotation angle, "
"font style, color and so on)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2544
msgid ""
"The Auxiliary Storage mechanism provides the solution to these "
"limitations and awkward configurations. Auxiliary fields are a roundabout"
" way to automatically manage and store these data-defined properties "
"(labels, diagram, symbology...) in a SQLite database thanks to editable "
"joins. This allows you to store properties for layers that aren't "
"editable."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2549
msgid ""
"A tab is available in vector layer properties dialog to manage auxiliary "
"storage:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2555
msgid "Auxiliary Storage tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2560
msgid "Labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2562
msgid ""
"Considering that the data source may be customized thanks to data-defined"
" properties without being editable, labeling map tools described in "
":ref:`label_toolbar` are always available as soon as labeling is "
"activated."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2566
msgid ""
"Actually, the auxiliary storage system needs an auxiliary layer to store "
"these properties in a SQLite database (see "
":ref:`vector_auxiliary_storage_database`). Its creation process is run "
"the first time you click on the map while a labeling map tool is "
"currently activated. Then, a window is displayed, allowing you to select "
"the primary key to use for joining (to ensure that features are uniquely "
"identified):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2578
msgid "Auxiliary Layer creation dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2581
msgid ""
"As soon as an auxiliary layer is configured for the current data source, "
"you can retrieve its information in the tab:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2587
msgid "Auxiliary Layer key"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2590
msgid "The auxiliary layer now has these characteristics:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2592
msgid "the primary key is ``ID``,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2593
msgid "there are ``0`` features using an auxiliary field,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2594
msgid "there are ``0`` auxiliary fields."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2596
msgid ""
"Now that the auxiliary layer is created, you can edit the layer labels. "
"Click on a label while the |changeLabelProperties| :sup:`Change Label` "
"map tool is activated, then you can update styling properties like sizes,"
" colors, and so on. The corresponding data-defined properties are created"
" and can be retrieved:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2605
msgid "Auxiliary Fields"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2608
msgid ""
"As you can see in the figure above, ``21`` fields are automatically "
"created and configured for labeling. For example, the ``FontStyle`` "
"auxiliary field type is a ``String`` and is named ``labeling_fontstyle`` "
"in the underlying SQLite database. There is also ``1`` feature which is "
"currently using these auxiliary fields."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2614
msgid ""
"Notice that the icon |dataDefineOn| is displayed in the "
":guilabel:`Labels` properties tab indicating that the data-defined "
"override options are set correctly:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2621
msgid "Data-defined properties automatically created"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2624
msgid ""
"Otherwise, there's another way to create an auxiliary field for a "
"specific property thanks to the |dataDefined| :sup:`data-defined "
"override` button. By clicking on :guilabel:`Store data in the project`, "
"an auxiliary field is automatically created for the :guilabel:`Opacity` "
"field. If you click on this button whereas the auxiliary layer is not "
"created yet, then the window :ref:`figure_auxiliary_layer_creation` is "
"first displayed to select the primary key to use for joining."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2634
msgid "Symbology"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2636
msgid ""
"Like the method described above for customizing labels, auxiliary fields "
"can also be used to stylize symbols and diagrams. To do this, click on "
"|dataDefined| :sup:`Data-defined override` and select :guilabel:`Store "
"data in the project` for a specific property. For example, the "
":guilabel:`Fill color` field:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2645
msgid "Data-defined property menu for symbol"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2648
msgid ""
"There are different attributes for each symbol (e.g. fill style, fill "
"color, stroke color, etc...), so each auxiliary field representing an "
"attribute requires a unique name to avoid conflicts. After selecting "
":guilabel:`Store data in the project`, a window opens and displays the "
":guilabel:`Type` of the field and prompts you to enter a unique name for "
"the auxiliary field. For example, when creating a :guilabel:`Fill color` "
"auxiliary field the following window opens:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2659
msgid "Name of the auxiliary field for a symbol"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2662
msgid ""
"Once created, the auxiliary field can be retrieved in the auxiliary "
"storage tab:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2668
msgid "Auxiliary field symbol"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2672
msgid "Attribute table and widgets"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2674
msgid ""
"Auxiliary fields can be edited using the :ref:`attribute table "
"<sec_attribute_table>`. However, not all auxiliary fields are initially "
"visible in the attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2678
msgid ""
"Auxiliary fields representing attributes of a layer's symbology, "
"labeling, appearance, or diagrams will appear automatically in the "
"attribute table. The exception are attributes that can be modified using "
"the :ref:`Label Toolbar <label_toolbar>` which are hidden by default. "
"Auxiliary fields representing a ``Color`` have a widget **Color** set by "
"default, otherwise auxiliary fields default to the **Text Edit** widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2685
msgid ""
"Auxiliary fields that represent attributes that can be modified using the"
" :ref:`Label toolbar<label_toolbar>` are **Hidden** in the attribute "
"table by default. To make a field visible, open the :ref:`Attribute Form "
"properties tab <vector_attributes_menu>` and change the value of an "
"auxiliary field :guilabel:`Widget Type` from **Hidden** to another "
"relevant value. For example, change the "
"**auxiliary_storage_labeling_size** to **Text Edit** or change "
"**auxiliary_storage_labeling_color** to the **Color** widget. Those "
"fields will now be visible in the attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2694
msgid ""
"Auxiliary fields in the attribute table will appear like the following "
"image:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2700
msgid "Form with auxiliary fields"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2704
msgid "Management"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2706
msgid ""
"The :guilabel:`Auxiliary Layer` menu allows you to manage the auxiliary "
"fields:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2711
msgid "Auxiliary layer management"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2714
msgid ""
"The first item :guilabel:`Create` is disabled in this case because the "
"auxiliary layer is already created. But in case of a fresh work, you can "
"use this action to create an auxiliary layer. As explained in "
":ref:`vector_auxiliary_storage_key`, a primary key will be needed then."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2719
msgid ""
"The :guilabel:`Clear` action allows to keep all auxiliary fields, but "
"remove their contents. This way, the number of features using these "
"fields will fall to ``0``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2723
msgid ""
"The :guilabel:`Delete` action completely removes the auxiliary layer. In "
"other words, the corresponding table is deleted from the underlying "
"SQLite database and properties customization are lost."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2727
msgid ""
"Finally, the :guilabel:`Export` action allows to save the auxiliary layer"
" as a :ref:`new vector layer <general_saveas>`. Note that geometries are "
"not stored in auxiliary storage. However, in this case, geometries are "
"exported from the original data source too."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2735
msgid "Auxiliary storage database"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2737
msgid ""
"When you save your project with the ``.qgs`` format, the SQLite database "
"used for auxiliary storage is saved at the same place but with the "
"extension ``.qgd``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2741
msgid ""
"For convenience, an archive may be used instead thanks to the ``.qgz`` "
"format. In this case, ``.qgd`` and  ``.qgs`` files are both embedded in "
"the archive."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2749
msgid "Actions Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2751
msgid ""
"|action| QGIS provides the ability to perform an action based on the "
"attributes of a feature. This can be used to perform any number of "
"actions, for example, running a program with arguments built from the "
"attributes of a feature or passing parameters to a web reporting tool."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2761
msgid "Overview action dialog with some sample actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2763
msgid ""
"Actions are useful when you frequently want to run an external "
"application or view a web page based on one or more values in your vector"
" layer. They are divided into six types and can be used like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2767
msgid "Generic, Mac, Windows and Unix actions start an external process."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2768
msgid "Python actions execute a Python expression."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2769
msgid "Generic and Python actions are visible everywhere."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2770
msgid ""
"Mac, Windows and Unix actions are visible only on the respective platform"
" (i.e., you can define three 'Edit' actions to open an editor and the "
"users can only see and execute the one 'Edit' action for their platform "
"to run the editor)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2774
msgid ""
"There are several examples included in the dialog. You can load them by "
"clicking on :guilabel:`Create Default Actions`. To edit any of the "
"examples, double-click its row. One example is performing a search based "
"on an attribute value. This concept is used in the following discussion."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2779
msgid ""
"The |checkbox| :guilabel:`Show in Attribute Table` allows you to display "
"in the attribute table dialog the checked feature-scoped actions, either "
"as :guilabel:`Combo Box` or as :guilabel:`Separate Buttons` (see "
":ref:`configure_table_columns`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2789
msgid "Defining Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2791
msgid ""
"To define an attribute action, open the vector :guilabel:`Layer "
"Properties` dialog and click on the :guilabel:`Actions` tab. In the "
":guilabel:`Actions` tab, click the |signPlus| :sup:`Add a new action` to "
"open the :guilabel:`Edit Action` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2796
#, python-format
msgid ""
"Select the action :guilabel:`Type` and provide a descriptive name for the"
" action. The action itself must contain the name of the application that "
"will be executed when the action is invoked. You can add one or more "
"attribute field values as arguments to the application. When the action "
"is invoked, any set of characters that start with a ``%`` followed by the"
" name of a field will be replaced by the value of that field. The special"
" characters ``%%`` will be replaced by the value of the field that was "
"selected from the identify results or attribute table (see using_actions_"
" below). Double quote marks can be used to group text into a single "
"argument to the program, script or command. Double quotes will be ignored"
" if preceded by a backslash."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2808
msgid ""
"The :guilabel:`Action Scopes` allows you to define *where* the action "
"should be available. You have 4 different choices:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2811
msgid ""
":guilabel:`Feature Scope`: action is available when right click in the "
"cell within the attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2813
msgid ""
":guilabel:`Field Scope`: action is available when right click in the cell"
" within the attribute table, in the feature form and in the default "
"action button of the main toolbar."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2816
msgid ""
":guilabel:`Layer Scope`: action is available in the action button in the "
"attribute table toolbar. Be aware that this type of action involves the "
"entire layer and not the single features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2819
msgid ""
":guilabel:`Canvas`: action is available in the main action button in the "
"toolbar."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2822
#, python-format
msgid ""
"If you have field names that are substrings of other field names (e.g., "
"``col1`` and ``col10``), you should indicate that by surrounding the "
"field name (and the \\% character) with square brackets (e.g., "
"``[%col10]``). This will prevent the ``%col10`` field name from being "
"mistaken for the ``%col1`` field name with a ``0`` on the end. The "
"brackets will be removed by QGIS when it substitutes in the value of the "
"field. If you want the substituted field to be surrounded by square "
"brackets, use a second set like this: ``[[%col10]]``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2830
msgid ""
"Using the :guilabel:`Identify Features` tool, you can open the "
":guilabel:`Identify Results` dialog. It includes a *(Derived)* item that "
"contains information relevant to the layer type. The values in this item "
"can be accessed in a similar way to the other fields by proceeding the "
"derived field name with ``(Derived).``. For example, a point layer has an"
" ``X`` and ``Y`` field, and the values of these fields can be used in the"
" action with ``%(Derived).X`` and ``%(Derived).Y``. The derived "
"attributes are only available from the :guilabel:`Identify Results` "
"dialog box, not the :guilabel:`Attribute Table` dialog box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2842
msgid "Two example actions are shown below:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2844
msgid "``konqueror https://www.google.com/search?q=%nam``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2845
#, python-format
msgid "``konqueror https://www.google.com/search?q=%%``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2847
msgid ""
"In the first example, the web browser konqueror is invoked and passed a "
"URL to open. The URL performs a Google search on the value of the ``nam``"
" field from our vector layer. Note that the application or script called "
"by the action must be in the path, or you must provide the full path. To "
"be certain, we could rewrite the first example as: "
"``/opt/kde3/bin/konqueror https://www.google.com/search?q=%nam``. This "
"will ensure that the konqueror application will be executed when the "
"action is invoked."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2856
msgid ""
"The second example uses the \\%\\% notation, which does not rely on a "
"particular field for its value. When the action is invoked, the \\%\\% "
"will be replaced by the value of the selected field in the identify "
"results or attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2865
msgid "Using Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2867
msgid ""
"QGIS offers many ways to execute actions you enabled on a layer. "
"Depending on their settings, they can be available:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2870
msgid ""
"in the drop-down menu of |actionRun| :sup:`Run Feature Action` button "
"from the :guilabel:`Attributes toolbar` or :guilabel:`Attribute table` "
"dialog;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2872
msgid ""
"when right-clicking a feature with the |identify| :sup:`Identify "
"Features` tool (see :ref:`identify` for more information);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2874
msgid ""
"from the :guilabel:`Identify Results` panel, under the "
":guilabel:`Actions` section;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2875
msgid ""
"as items of an :guilabel:`Actions` column in the :guilabel:`Attribute "
"Table` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2878
#, python-format
msgid ""
"If you are invoking an action that uses the ``%%`` notation, right-click "
"on the field value in the :guilabel:`Identify Results` dialog or the "
":guilabel:`Attribute Table` dialog that you wish to pass to the "
"application or script."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2883
msgid ""
"Here is another example that pulls data out of a vector layer and inserts"
" it into a file using bash and the ``echo`` command (so it will only work"
" on |nix| or perhaps |osx|). The layer in question has fields for a "
"species name ``taxon_name``, latitude ``lat`` and longitude ``long``. We "
"would like to be able to make a spatial selection of localities and "
"export these field values to a text file for the selected record (shown "
"in yellow in the QGIS map area). Here is the action to achieve this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2897
msgid ""
"After selecting a few localities and running the action on each one, "
"opening the output file will show something like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2909
msgid ""
"As an exercise, we can create an action that does a Google search on the "
"``lakes`` layer. First, we need to determine the URL required to perform "
"a search on a keyword. This is easily done by just going to Google and "
"doing a simple search, then grabbing the URL from the address bar in your"
" browser. From this little effort, we see that the format is "
"https://www.google.com//search?q=QGIS, where ``QGIS`` is the search term."
" Armed with this information, we can proceed:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2916
msgid "Make sure the ``lakes`` layer is loaded."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2917
msgid ""
"Open the :guilabel:`Layer Properties` dialog by double-clicking on the "
"layer in the legend, or right-click and choose "
":menuselection:`Properties` from the pop-up menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2920
msgid "Click on the :guilabel:`Actions` tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2921
msgid "Click |signPlus| :sup:`Add a new action`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2922
msgid "Choose the :guilabel:`Open` action type,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2923
msgid "Enter a name for the action, for example ``Google Search``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2924
msgid ""
"Additionally you can add a :guilabel:`Short Name` or even an "
":guilabel:`Icon`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2925
msgid ""
"Choose the action :guilabel:`Scope`. See :ref:`adding_actions` for "
"further information. Leave the default settings for this example."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2927
msgid ""
"For the action, we need to provide the name of the external program to "
"run. In this case, we can use Firefox. If the program is not in your "
"path, you need to provide the full path."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2930
msgid ""
"Following the name of the external application, add the URL used for "
"doing a Google search, up to but not including the search term: "
"``https://www.google.com//search?q=``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2933
msgid ""
"The text in the :guilabel:`Action` field should now look like this: "
"``https://www.google.com//search?q=``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2935
msgid ""
"Click on the drop-down box containing the field names for the ``lakes`` "
"layer. It's located just to the left of the :guilabel:`Insert` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2937
msgid "From the drop-down box, select 'NAMES' and click :guilabel:`Insert`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2938
msgid "Your action text now looks like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2940
msgid "``https://www.google.com//search?q=[%NAMES%]``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2941
msgid "To finalize and add the action, click the :guilabel:`OK` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2948
msgid "Edit action dialog configured with the example"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2950
msgid ""
"This completes the action, and it is ready to use. The final text of the "
"action should look like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2957
msgid ""
"We can now use the action. Close the :guilabel:`Layer Properties` dialog "
"and zoom in to an area of interest. Make sure the ``lakes`` layer is "
"active and identify a lake. In the result box you'll now see that our "
"action is visible:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2966
msgid "Select feature and choose action"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2968
msgid ""
"When we click on the action, it brings up Firefox and navigates to the "
"URL https://www.google.com/search?q=Tustumena. It is also possible to add"
" further attribute fields to the action. Therefore, you can add a ``+`` "
"to the end of the action text, select another field and click on "
":guilabel:`Insert Field`. In this example, there is just no other field "
"available that would make sense to search for."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2975
msgid ""
"You can define multiple actions for a layer, and each will show up in the"
" :guilabel:`Identify Results` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2979
msgid ""
"You can also invoke actions from the attribute table by selecting a row "
"and right-clicking, then choosing the action from the pop-up menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2983
msgid ""
"There are all kinds of uses for actions. For example, if you have a point"
" layer containing locations of images or photos along with a file name, "
"you could create an action to launch a viewer to display the image. You "
"could also use actions to launch web-based reports for an attribute field"
" or combination of fields, specifying them in the same way we did in our "
"Google search example."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2990
msgid ""
"We can also make more complex examples, for instance, using **Python** "
"actions."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2993
msgid ""
"Usually, when we create an action to open a file with an external "
"application, we can use absolute paths, or eventually relative paths. In "
"the second case, the path is relative to the location of the external "
"program executable file. But what about if we need to use relative paths,"
" relative to the selected layer (a file-based one, like Shapefile or "
"SpatiaLite)? The following code will do the trick:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3014
msgid ""
"We just have to remember that the action is one of type *Python* and the "
"*command* and *imagerelpath* variables must be changed to fit our needs."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3017
msgid ""
"But what about if the relative path needs to be relative to the (saved) "
"project file? The code of the Python action would be:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3031
msgid ""
"Another Python action example is the one that allows us to add new layers"
" to the project. For instance, the following examples will add to the "
"project respectively a vector and a raster. The names of the files to be "
"added to the project and the names to be given to the layers are data "
"driven (*filename* and *layername* are column names of the table of "
"attributes of the vector where the action was created):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3044
msgid "To add a raster (a TIF image in this example), it becomes:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3055
msgid "Display Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3057
msgid ""
"|display| The :guilabel:`Display` tab helps you configure fields to use "
"for feature identification:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3060
msgid ""
"The :guilabel:`Display name`: based on a field or an :ref:`expression "
"<vector_expressions>`. This is:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3063
msgid ""
"the label shown on top of the feature information in the :ref:`Identify "
"tool <identify>` results;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3065
msgid ""
"the field used in the :ref:`locator bar <locator_options>` when looking "
"for features in all layers;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3067
msgid ""
"the feature identifier in the attribute table :ref:`form view "
"<attribute_table_view>`;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3069
msgid ""
"the map tip information, i.e. the message displayed in the map canvas "
"when hovering over a feature of the active layer with the |mapTips| "
":sup:`Show Map Tips` icon pressed. Applicable when no :guilabel:`HTML Map"
" Tip` is set."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3073
msgid ""
"The :guilabel:`HTML Map Tip` is specifically created for the map tips: "
"it's a more complex and full HTML text mixing fields, expressions and "
"html tags (multiline, fonts, images, hyperlink...)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3082
msgid "HTML code for map tip"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3085
msgid ""
"To activate map tips, select the menu option :menuselection:`View --> "
"Show Map Tips` or click on the |mapTips| :sup:`Show Map Tips` icon of the"
" :guilabel:`Attributes Toolbar`. Map tip is a cross-session feature "
"meaning that once activated, it stays on and apply to any layer in any "
"project, even in future QGIS sessions until it's toggled off."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3096
msgid "Map tip made with HTML code"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3103
msgid "Rendering Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3106
msgid "Scale dependent visibility"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3108
msgid ""
"You can set the :guilabel:`Maximum (inclusive)` and :guilabel:`Minimum "
"(exclusive)` scale, defining a range of scale in which features will be "
"visible. Out of this range, they are hidden. The |mapIdentification| "
":sup:`Set to current canvas scale` button helps you use the current map "
"canvas scale as boundary of the range visibility. See "
":ref:`label_scaledepend` for more information."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3116
msgid "Simplify geometry"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3118
msgid ""
"QGIS offers support for on-the-fly feature generalisation. This can "
"improve rendering times when drawing many complex features at small "
"scales. This feature can be enabled or disabled in the layer settings "
"using the |checkbox| :guilabel:`Simplify geometry` option. There is also "
"a global setting that enables generalisation by default for newly added "
"layers (see :ref:`global simplification <global_simplification>` for more"
" information)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3130
msgid "Layer Geometry Simplification dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3134
msgid ""
"Feature generalisation may introduce artefacts into your rendered output "
"in some cases. These may include slivers between polygons and inaccurate "
"rendering when using offset-based symbol layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3139
msgid ""
"While rendering extremely detailed layers (e.g. polygon layers with a "
"huge number of nodes), this can cause layout exports in PDF/SVG format to"
" be huge as all nodes are included in the exported file. This can also "
"make the resultant file very slow to work with/open in other programs."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3144
msgid ""
"Checking |checkbox| :guilabel:`Force layer to render as raster` forces "
"these layers to be rasterised so that the exported files won't have to "
"include all the nodes contained in these layers and the rendering is "
"therefore sped up."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3148
msgid ""
"You can also do this by forcing the layout to export as a raster, but "
"that is an all-or-nothing solution, given that the rasterisation is "
"applied to all layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3152
msgid ""
":guilabel:`Refresh layer at interval (seconds)`: set a timer to "
"automatically refresh individual layers at a matching interval. Canvas "
"updates are deferred in order to avoid refreshing multiple times if more "
"than one layer has an auto update interval set."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3157
msgid ""
"Depending on the data provider (e.g. PostgreSQL), notifications can be "
"sent to QGIS when changes are applied to the data source, out of QGIS. "
"Use the |checkbox| :guilabel:`Refresh layer on notification` option to "
"trigger an update. You can also limit the layer refresh to a specific "
"message set in the |checkbox| :guilabel:`Only if message is` text box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3168
msgid "Variables Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3170
msgid ""
"|expression| The :guilabel:`Variables` tab lists all the variables "
"available at the layer's level (which includes all global and project's "
"variables)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3173
msgid ""
"It also allows the user to manage layer-level variables. Click the "
"|signPlus| button to add a new custom layer-level variable. Likewise, "
"select a custom layer-level variable from the list and click the "
"|signMinus| button to remove it."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3178
msgid ""
"More information on variables usage in the General Tools "
":ref:`general_tools_variables` section."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3186
msgid "Metadata Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3188
msgid ""
"|editMetadata| The :guilabel:`Metadata` tab provides you with options to "
"create and edit a metadata report on your layer. Information to fill "
"concern:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3191
msgid ""
"the data :guilabel:`Identification`: basic attribution of the dataset "
"(parent, identifier, title, abstract, language...);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3193
msgid ""
"the :guilabel:`Categories` the data belongs to. Alongside the **ISO** "
"categories, you can add custom ones;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3195
msgid ""
"the :guilabel:`Keywords` to retrieve the data and associated concepts "
"following a standard based vocabulary;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3197
msgid ""
"the :guilabel:`Access` to the dataset (licenses, rights, fees, and "
"constraints);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3198
msgid ""
"the :guilabel:`Extent` of the dataset, either spatial one (CRS, map "
"extent, altitudes) or temporal;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3200
msgid "the :guilabel:`Contact` of the owner(s) of the dataset;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3201
msgid "the :guilabel:`Links` to ancillary resources and related information;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3202
msgid "the :guilabel:`History` of the dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3204
msgid ""
"A summary of the filled information is provided in the "
":guilabel:`Validation` tab and helps you identify potential issues "
"related to the form. You can then either fix them or ignore them."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3208
msgid ""
"Metadata are currently saved in the project file. It can also be saved as"
" an :file:`.XML` file alongside file based layers or in a local "
":file:`.sqlite` database for remote layers (e.g. PostGIS)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3216
msgid "Dependencies Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3218
msgid ""
"|dependencies| The :guilabel:`Dependencies` tab allows to declare data "
"dependencies between layers. A data dependency occurs when a data "
"modification in a layer, not by direct user manipulation, may modify data"
" of other layers. This is the case for instance when geometry of a layer "
"is updated by a database trigger or custom PyQGIS scripting after "
"modification of another layer's geometry."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3225
msgid ""
"In the :guilabel:`Dependencies` tab, you can select any layers which may "
"externally alter the data in the current layer. Correctly specifying "
"dependent layers allows QGIS to invalidate caches for this layer when the"
" dependent layers are altered."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3235
msgid "Legend Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3237
msgid ""
"|legend| The :guilabel:`Legend` properties tab provides you with advanced"
" settings for the :ref:`Layers panel <label_legend>` and/or the "
":ref:`print layout legend <layout_legend_item>`. These options include:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3241
msgid ""
"|checkbox| :guilabel:`Text on symbols`: In some cases it can be useful to"
" add extra information to the symbols in the legend. With this frame, you"
" can affect to any of the symbols used in the layer symbology a text that"
" is displayed over the symbol, in both :guilabel:`Layers` panel and print"
" layout legend. This mapping is done by typing each text next to the "
"symbol in the table widget or filling the table using the :guilabel:`Set "
"Labels from Expression` button. Text appearance is handled through the "
"font and color selector widgets of the :guilabel:`Text Format` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3255
msgid ""
"Setting text on symbols (left) and its rendering in the "
":guilabel:`Layers` panel (right)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3257
msgid ""
"a list of widgets you can embed within the layer tree in the Layers "
"panel. The idea is to have a way to quickly access some actions that are "
"often used with the layer (setup transparency, filtering, selection, "
"style or other stuff...)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3262
msgid ""
"By default, QGIS provides transparency widget but this can be extended by"
" plugins registering their own widgets and assign custom actions to "
"layers they manage."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3272
msgid "QGIS Server Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3274
msgid ""
"|overlay| The :guilabel:`QGIS Server` tab consists of "
":guilabel:`Description`, :guilabel:`Attribution`, "
":guilabel:`MetadataURL`, and :guilabel:`LegendUrl` sections."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3277
msgid ""
"You can add or edit a title and abstract for the layer in the "
":guilabel:`Description` section. It's also possible to define a "
":guilabel:`Keyword list` here. These keyword lists can be used in a "
"metadata catalog. If you want to use a title from an XML metadata file, "
"you have to fill in a link in the :guilabel:`DataUrl` field."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3283
msgid ""
"Use :guilabel:`Attribution` to get attribute data from an XML metadata "
"catalog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3285
msgid ""
"In :guilabel:`MetadataUrl`, you can define the general path to the XML "
"metadata catalog. This information will be saved in the QGIS project file"
" for subsequent sessions and will be used for QGIS server."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3289
msgid ""
"In the :guilabel:`LegendUrl` section, you can provide the url of a legend"
" image in the url field. You can use the Format drop-down option to apply"
" the appropriate format of the image. Currently png, jpg and jpeg image "
"formats are supported."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3298
msgid "QGIS Server tab in vector layers properties dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3303
msgid "Digitizing Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3305
msgid ""
"|digitizing| The :guilabel:`Digitizing` tab gives access to options that "
"help to ensure the quality of digitized geometries."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3313
msgid "The QGIS Digitizing tab in the vector layers properties dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3316
msgid "Automatic Fixes"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3318
msgid ""
"Options in the :guilabel:`Automatic Fixes` section will directly affect "
"the vertices of any geometry which is added or modified. If the "
"|checkbox| :guilabel:`Remove duplicate nodes` option is checked, any two "
"subsequent vertices with exactly the same coordinates will be removed. If"
" the :guilabel:`Geometry precision` is set, all vertices will be rounded "
"to the closest multiple of the configured geometry precision. The "
"rounding will happen in the layer coordinate reference system. Z and M "
"values are not rounded. With many map tools, a grid is shown on the "
"canvas while digitizing."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3328
msgid "Geometry Checks"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3330
msgid ""
"In the :guilabel:`Geometry checks` section, additional validations on a "
"per geometry basis can be activated. Immediately after any geometry "
"modification, failures in these checks are reported to the user in the "
"geometry validation panel. As long as a check is failing, it is not "
"possible to save the layer. The |checkbox| :guilabel:`Is valid` check "
"will run basic validity checks like self intersection on geometries."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3338
msgid "Topology Checks"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3340
msgid ""
"In the :guilabel:`Topology checks` section, additional topology "
"validation checks can be activated. Topology checks will be executed when"
" the user saves the layer. Check errors will be reported in the geometry "
"validation panel. As long as validation errors are present, the layer can"
" not be saved. Topology checks are executed in the area of the bounding "
"box of the modified features. Since other features may be present in the "
"same area, topological errors concerning these features are reported as "
"well as errors introduced in the current edit session."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3352
msgid "Topology check option"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3353
msgid "Illustration"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3354
msgid ""
"The |checkbox| :guilabel:`Gap` check will check for gaps between "
"neighbouring polygons."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3357
msgid ""
"The |checkbox| :guilabel:`Overlap` check will check for overlaps between "
"neighbouring polygons."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:3360
msgid ""
"The |checkbox| :guilabel:`Missing vertex` check will check for shared "
"boundaries of neighbouring polygons where one border misses a vertex "
"which is present on the other one."
msgstr ""

#~ msgid ""
#~ "To access the :guilabel:`Layer Properties` "
#~ "dialog, double-click on a layer in"
#~ " the legend or right-click on "
#~ "the layer and select "
#~ ":menuselection:`Properties` from the pop-up"
#~ " menu."
#~ msgstr ""

#~ msgid ""
#~ "Depending on the :ref:`external plugins "
#~ "<plugins>` you have installed, new tabs"
#~ " may be added to the layer "
#~ "properties dialog. Those are not "
#~ "presented below."
#~ msgstr ""

#~ msgid "**Live update rendering**"
#~ msgstr ""

#~ msgid ""
#~ "The :ref:`layer_styling_panel` provides you "
#~ "with some of the common features "
#~ "of the Layer properties dialog and "
#~ "is a good modeless widget that you"
#~ " can use to speed up the "
#~ "configuration of the layer styles and"
#~ " automatically view your changes in "
#~ "the map canvas."
#~ msgstr ""

#~ msgid "General Properties"
#~ msgstr ""

#~ msgid ""
#~ "|general| Use this tab to make "
#~ "general settings for the vector layer."
#~ " There are several options available:"
#~ msgstr ""

#~ msgid "Layer Info"
#~ msgstr ""

#~ msgid ""
#~ "Set the :guilabel:`Layer name` to "
#~ "display in the :guilabel:`Layers Panel`"
#~ msgstr ""

#~ msgid "Display the :guilabel:`Layer source` of the vector layer"
#~ msgstr ""

#~ msgid ""
#~ "Define the :guilabel:`Data source encoding`"
#~ " to define provider-specific options "
#~ "and to be able to read the "
#~ "file"
#~ msgstr ""

#~ msgid "Create a :guilabel:`Spatial Index` (only for OGR-supported formats)"
#~ msgstr ""

#~ msgid ":guilabel:`Update Extents` information for a layer"
#~ msgstr ""

#~ msgid "General tab in vector layers properties dialog"
#~ msgstr ""

#~ msgid ""
#~ "Under the **Provider Feature Filter** "
#~ "frame, the Query Builder allows you "
#~ "to define a subset of the features"
#~ " in the layer using a SQL-like"
#~ " WHERE clause and to display the "
#~ "result in the main window. As long"
#~ " as the query is active, only "
#~ "the features corresponding to its result"
#~ " are available in the project. The"
#~ " query result can be saved as a"
#~ " new vector layer."
#~ msgstr ""

#~ msgid ""
#~ "The **Query Builder** is accessible "
#~ "through the eponym term at the "
#~ "bottom of the :guilabel:`General` tab in"
#~ " the Layer Properties. Under "
#~ ":guilabel:`Feature subset`, click on the "
#~ "**[Query Builder]** button to open the"
#~ " :guilabel:`Query builder`. For example, if"
#~ " you have a ``regions`` layer with"
#~ " a ``TYPE_2`` field, you could select"
#~ " only regions that are ``borough`` in"
#~ " the :guilabel:`Provider specific filter "
#~ "expression` box of the Query Builder."
#~ " Figure_vector_querybuilder_ shows an example "
#~ "of the Query Builder populated with "
#~ "the :file:`regions.shp` layer from the "
#~ "QGIS sample data. The Fields, Values "
#~ "and Operators sections help you to "
#~ "construct the SQL-like query."
#~ msgstr ""

#~ msgid ""
#~ "The **Fields list** contains all "
#~ "attribute columns of the attribute table"
#~ " to be searched. To add an "
#~ "attribute column to the SQL WHERE "
#~ "clause field, double click its name "
#~ "in the Fields list. Generally, you "
#~ "can use the various fields, values "
#~ "and operators to construct the query,"
#~ " or you can just type it into"
#~ " the SQL box."
#~ msgstr ""

#~ msgid ""
#~ "The **Values list** lists the values "
#~ "of an attribute table. To list all"
#~ " possible values of an attribute, "
#~ "select the attribute in the Fields "
#~ "list and click the **[all]** button. "
#~ "To list the first 25 unique values"
#~ " of an attribute column, select the"
#~ " attribute column in the Fields list"
#~ " and click the **[Sample]** button. "
#~ "To add a value to the SQL "
#~ "WHERE clause field, double click its "
#~ "name in the Values list."
#~ msgstr ""

#~ msgid ""
#~ "The **Operators section** contains all "
#~ "usable operators. To add an operator "
#~ "to the SQL WHERE clause field, "
#~ "click the appropriate button. Relational "
#~ "operators ( ``=`` , ``>`` , ...),"
#~ " string comparison operator (``LIKE``), and"
#~ " logical operators (``AND``, ``OR``, ...)"
#~ " are available."
#~ msgstr ""

#~ msgid ""
#~ "The **[Test]** button shows a message"
#~ " box with the number of features "
#~ "satisfying the current query, which is"
#~ " useful in the process of query "
#~ "construction. The **[Clear]** button clears"
#~ " the text in the SQL WHERE "
#~ "clause text field. The **[OK]** button"
#~ " closes the window and selects the"
#~ " features satisfying the query. The "
#~ "**[Cancel]** button closes the window "
#~ "without changing the current selection."
#~ msgstr ""

#~ msgid ""
#~ "QGIS treats the resulting subset acts"
#~ " as if it were the entire "
#~ "layer. For example if you applied "
#~ "the filter above for 'Borough', you "
#~ "can not display, query, save or "
#~ "edit Anchorage, because that is a "
#~ "'Municipality' and therefore not part of"
#~ " the subset."
#~ msgstr ""

#~ msgid ""
#~ "The only exception is that unless "
#~ "your layer is part of a database,"
#~ " using a subset will prevent you "
#~ "from editing the layer."
#~ msgstr ""

#~ msgid "Style Properties"
#~ msgstr ""

#~ msgid ""
#~ "|symbology| The Style tab provides you"
#~ " with a comprehensive tool for "
#~ "rendering and symbolizing your vector "
#~ "data. You can use tools that are"
#~ " common to all vector data, as "
#~ "well as special symbolizing tools that"
#~ " were designed for the different "
#~ "kinds of vector data. However all "
#~ "types share the following dialog "
#~ "structure: in the upper part, you "
#~ "have a widget that helps you "
#~ "prepare the classification and the "
#~ "symbol to use for features and at"
#~ " the bottom the:ref:`layer_rendering` widget."
#~ msgstr ""

#~ msgid ""
#~ "The renderer is responsible for drawing"
#~ " a feature together with the correct"
#~ " symbol. Regardless layer geometry type,"
#~ " there are four common types of "
#~ "renderers: single symbol, categorized, "
#~ "graduated and rule-based. For point "
#~ "layers, there are a point displacement"
#~ " and a heatmap renderers available "
#~ "while polygon layers can also be "
#~ "rendered with the inverted renderer."
#~ msgstr ""

#~ msgid ""
#~ "The |singleSymbol| :guilabel:`Single Symbol` "
#~ "Renderer is used to render all "
#~ "features of the layer using a "
#~ "single user-defined symbol. See :ref"
#~ ":`symbol-selector` for further information "
#~ "about symbol representation."
#~ msgstr ""

#~ msgid ""
#~ "If in your **Layers Panel** you "
#~ "have layers with categories defined "
#~ "through categorized, graduated or rule-"
#~ "based style mode, you can quickly "
#~ "change the fill color of the "
#~ "symbol of the categories by right-"
#~ "clicking on a category and choose "
#~ "the color you prefer from a "
#~ "|colorWheel| :sup:`color wheel` menu. "
#~ "Right-clicking on a category will "
#~ "also give you access to the "
#~ "options **Hide all items**, **Show all"
#~ " items** and **Edit symbol**."
#~ msgstr ""

#~ msgid ""
#~ "The |categorizedSymbol| :guilabel:`Categorized "
#~ "Renderer` is used to render the "
#~ "features of a layer, using a "
#~ "user-defined symbol whose aspect reflects"
#~ " the discrete values of a field "
#~ "or an expression. The Categorized menu"
#~ " allows you to"
#~ msgstr ""

#~ msgid ""
#~ "Then click on **[Classify]** button to"
#~ " create classes from the distinct "
#~ "value of the attribute column. Each "
#~ "class can be disabled unchecking the "
#~ "checkbox at the left of the class"
#~ " name."
#~ msgstr ""

#~ msgid ""
#~ "The |graduatedSymbol| :guilabel:`Graduated Renderer`"
#~ " is used to render all the "
#~ "features from a layer, using an "
#~ "user-defined symbol whose color or "
#~ "size reflects the assignment of a "
#~ "selected feature's attribute to a class."
#~ msgstr ""

#~ msgid ""
#~ "Equal Interval: each class has the "
#~ "same size (e.g. values from 0 to"
#~ " 16 and 4 classes, each class "
#~ "has a size of 4);"
#~ msgstr ""

#~ msgid ""
#~ "Quantile: each class will have the "
#~ "same number of element inside (the "
#~ "idea of a boxplot);"
#~ msgstr ""

#~ msgid ""
#~ "Natural Breaks (Jenks): the variance "
#~ "within each class is minimal while "
#~ "the variance between classes is maximal;"
#~ msgstr ""

#~ msgid ""
#~ "Standard Deviation: classes are built "
#~ "depending on the standard deviation of"
#~ " the values;"
#~ msgstr ""

#~ msgid ""
#~ "The listbox in the center part of"
#~ " the :guilabel:`Style` tab lists the "
#~ "classes together with their ranges, "
#~ "labels and symbols that will be "
#~ "rendered."
#~ msgstr ""

#~ msgid ""
#~ "Proportional Symbol and Multivariate Analysis"
#~ " are not rendering types available "
#~ "from the Style rendering drop-down "
#~ "list. However with the **Size "
#~ "Assistant** options applied over any of"
#~ " the previous rendering options, QGIS "
#~ "allows you to display your point "
#~ "and line data with such representation."
#~ msgstr ""

#~ msgid ""
#~ "Proportional rendering is done by first"
#~ " applying to the layer the "
#~ ":ref:`single_symbol_renderer`. Once you set "
#~ "the symbol, at the upper level of"
#~ " the symbol tree, the |dataDefined| "
#~ ":guilabel:`Data-defined override` button "
#~ "available beside :guilabel:`Size` or "
#~ ":guilabel:`Width` options (for point or "
#~ "line layers respectively) provides tool "
#~ "to create proportional symbology for the"
#~ " layer. An assistant is moreover "
#~ "accessible through the |dataDefined| menu "
#~ "to help you define size expression."
#~ msgstr ""

#~ msgid "Varying size assistant"
#~ msgstr ""

#~ msgid "The assistant lets you define:"
#~ msgstr ""

#~ msgid ""
#~ "The attribute to represent, using the"
#~ " Field listbox or the |expression| "
#~ ":sup:`Set column expression` function (see "
#~ ":ref:`vector_expressions`)"
#~ msgstr ""

#~ msgid ""
#~ "the scale method of representation which"
#~ " can be 'Flannery', 'Surface' or "
#~ "'Radius'"
#~ msgstr ""

#~ msgid "The minimum and maximum size of the symbol"
#~ msgstr ""

#~ msgid ""
#~ "The range of values to represent: "
#~ "The down pointing arrow helps you "
#~ "fill automatically these fields with the"
#~ " minimum (or zero) and maximum values"
#~ " returned by the chosen attribute or"
#~ " the expression applied to your data."
#~ msgstr ""

#~ msgid "An unique size to represent NULL values."
#~ msgstr ""

#~ msgid ""
#~ "To the right side of the dialog,"
#~ " you can preview the features "
#~ "representation within a live-update "
#~ "widget. This representation is added to"
#~ " the layer tree in the layer "
#~ "legend and is also used to shape"
#~ " the layer representation in the "
#~ "print composer legend item."
#~ msgstr ""

#~ msgid ""
#~ "The values presented in the varying "
#~ "size assistant above will set the "
#~ "size 'Data-defined override' with: ::"
#~ msgstr ""

#~ msgid ""
#~ "The simplest way to create multivariate"
#~ " analysis in QGIS is to first "
#~ "apply a categorized or graduated "
#~ "rendering on a layer, using the "
#~ "same type of symbol for all the"
#~ " classes. Then, clicking on the "
#~ "symbol **[Change]** button above the "
#~ "classification frame, you get the :ref"
#~ ":`symbol-selector` dialog from which, as"
#~ " seen above, you can activate and "
#~ "set the :ref:`size assistant <size_assistant>`"
#~ " option either on size (for point "
#~ "layer) or width (for line layer)."
#~ msgstr ""

#~ msgid ""
#~ "Like the proportional symbol, the "
#~ "size-related symbol is added to the"
#~ " layer tree, at the top of the"
#~ " categorized or graduated classes symbols."
#~ " And both representation are also "
#~ "available in the print composer legend"
#~ " item."
#~ msgstr ""

#~ msgid "Multivariate example"
#~ msgstr ""

#~ msgid "Rule-based rendering"
#~ msgstr ""

#~ msgid ""
#~ "The |ruleBasedSymbol| :guilabel:`Rule-based "
#~ "Renderer` is used to render all "
#~ "the features from a layer, using "
#~ "rule-based symbols whose aspect reflects"
#~ " the assignment of a selected "
#~ "feature's attribute to a class. The "
#~ "rules are based on SQL statements. "
#~ "The dialog allows rule grouping by "
#~ "filter or scale, and you can "
#~ "decide if you want to enable "
#~ "symbol levels or use only the "
#~ "first-matched rule."
#~ msgstr ""

#~ msgid ""
#~ "To create a rule, activate an "
#~ "existing row by double-clicking on "
#~ "it, or click on '+' and click "
#~ "on the new rule. In the "
#~ ":guilabel:`Rule properties` dialog, you can"
#~ " define a label for the rule. "
#~ "Press the |browseButton| button to open"
#~ " the expression string builder. In "
#~ "the **Function List**, click on "
#~ ":guilabel:`Fields and Values` to view "
#~ "all attributes of the attribute table"
#~ " to be searched. To add an "
#~ "attribute to the field calculator "
#~ "**Expression** field, double click on "
#~ "its name in the :guilabel:`Fields and"
#~ " Values` list. Generally, you can use"
#~ " the various fields, values and "
#~ "functions to construct the calculation "
#~ "expression, or you can just type "
#~ "it into the box (see "
#~ ":ref:`vector_expressions`). You can create a"
#~ " new rule by copying and pasting "
#~ "an existing rule with the right "
#~ "mouse button. You can also use the"
#~ " 'ELSE' rule that will be run "
#~ "if none of the other rules on "
#~ "that level matches. Since QGIS 2.8 "
#~ "the rules appear in a tree "
#~ "hierarchy in the map legend. Just "
#~ "double-click the rules in the map "
#~ "legend and the Style tab of the"
#~ " layer properties appears showing the "
#~ "rule that is the background for "
#~ "the symbol in the tree."
#~ msgstr ""

#~ msgid "Point displacement"
#~ msgstr ""

#~ msgid ""
#~ "The |pointDisplacementSymbol| :guilabel:`Point "
#~ "Displacement` renderer works to visualize "
#~ "all features of a point layer, "
#~ "even if they have the same "
#~ "location. To do this, the symbols "
#~ "of the points are placed on a "
#~ "displacement circle around one center "
#~ "symbol or on several concentric circles."
#~ msgstr ""

#~ msgid ""
#~ "You can still render features with "
#~ "other renderer like Single symbol, "
#~ "Graduated, Categorized or Rule-Based "
#~ "renderer using the :guilabel:`Renderer` "
#~ "drop-down list then the :guilabel:`Renderer"
#~ " Settings...` button."
#~ msgstr ""

#~ msgid "Point Cluster"
#~ msgstr ""

#~ msgid ""
#~ "Unlike the |pointDisplacementSymbol| "
#~ ":guilabel:`Point Displacement` renderer which "
#~ "blows up overlaid point features "
#~ "placement, the |pointClusterSymbol| :guilabel:`Point"
#~ " Cluster` renderer groups nearby points "
#~ "into a single rendered marker symbol."
#~ " Based on a specified :guilabel:`Distance`,"
#~ " points that fall within from each"
#~ " others are merged into a single "
#~ "symbol. Points aggregation is made based"
#~ " on the closest group being formed,"
#~ " rather than just assigning them the"
#~ " first group within the search "
#~ "distance."
#~ msgstr ""

#~ msgid ""
#~ "use the :guilabel:`Renderer` drop-down "
#~ "list to apply any of the other "
#~ "feature rendering types to the layer "
#~ "(single, categorized, rule-based...). Then,"
#~ " push the **[Renderer settings...]** button"
#~ " to configure features' symbology as "
#~ "usual. Note that this renderer is "
#~ "only visible on features that are "
#~ "not clustered. Also, when the symbol "
#~ "color is the same for all the "
#~ "point features inside a cluster, that"
#~ " color sets the ``@cluster_color`` variable"
#~ " of the cluster."
#~ msgstr ""

#~ msgid ""
#~ "Point displacement and cluster renderers "
#~ "do not alter feature geometry, meaning"
#~ " that points are not moved from "
#~ "their position. They are still located"
#~ " at their initial place. Changes are"
#~ " only visual, for rendering purpose."
#~ msgstr ""

#~ msgid "Inverted Polygon"
#~ msgstr ""

#~ msgid "Heatmap"
#~ msgstr ""

#~ msgid ""
#~ "With the |heatmapSymbol| :guilabel:`Heatmap` "
#~ "renderer you can create live dynamic "
#~ "heatmaps for (multi)point layers. You "
#~ "can specify the heatmap radius in "
#~ "pixels, mm or map units, choose "
#~ "and edit a color ramp for the "
#~ "heatmap style and use a slider for"
#~ " selecting a trade-off between render"
#~ " speed and quality. You can also "
#~ "define a maximum value limit and "
#~ "give a weight to points using a"
#~ " field or an expression. When adding"
#~ " or removing a feature the heatmap"
#~ " renderer updates the heatmap style "
#~ "automatically."
#~ msgstr ""

#~ msgid "2.5D"
#~ msgstr ""

#~ msgid ""
#~ "From the Style tab, you can also"
#~ " set some options that invariabily "
#~ "act on all features of the layer:"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Layer transparency` |slider|: You "
#~ "can make the underlying layer in "
#~ "the map canvas visible with this "
#~ "tool. Use the slider to adapt the"
#~ " visibility of your vector layer to"
#~ " your needs. You can also make "
#~ "a precise definition of the percentage"
#~ " of visibility in the the menu "
#~ "beside the slider."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Layer blending mode` and "
#~ ":guilabel:`Feature blending mode`: You can "
#~ "achieve special rendering effects with "
#~ "these tools that you may previously "
#~ "only know from graphics programs. The"
#~ " pixels of your overlaying and "
#~ "underlaying layers are mixed through the"
#~ " settings described in :ref:`blend-modes`."
#~ msgstr ""

#~ msgid "choose a field or build an expression to apply to the layer features"
#~ msgstr ""

#~ msgid ""
#~ "set in which order the fetched "
#~ "features should be sorted, i.e. if "
#~ "you choose **Ascending** order, the "
#~ "features with lower value are rendered"
#~ " under those with upper value."
#~ msgstr ""

#~ msgid ""
#~ "define when features returning NULL "
#~ "value should be rendered: **first** or"
#~ " **last**."
#~ msgstr ""

#~ msgid ""
#~ "You can add several rules of "
#~ "ordering. The first rule is applied "
#~ "to all the features in the layer,"
#~ " z-ordering them according to the "
#~ "value returned. Then, for each group "
#~ "of features with the same value "
#~ "(including those with NULL value) and"
#~ " thus same z-level, the next rule "
#~ "is applied to sort its items among"
#~ " them. And so on..."
#~ msgstr ""

#~ msgid "Symbols levels"
#~ msgstr ""

#~ msgid ""
#~ "For most of the renderers, you can"
#~ " access the Symbols levels option by"
#~ " clicking the **[Advanced]** button below"
#~ " the saved symbols list and choosing"
#~ " :guilabel:`Symbol levels`. For the "
#~ ":ref:`rule_based_rendering` the option is "
#~ "directly available through **[Symbols "
#~ "levels]** button, while for "
#~ ":ref:`point_displacement` renderer the same "
#~ "button is inside the :guilabel:`Rendering "
#~ "settings` dialog."
#~ msgstr ""

#~ msgid ""
#~ "The option is available in the "
#~ ":guilabel:`Layer Properties --> Style` dialog,"
#~ " under the :ref:`Layer rendering "
#~ "<layer_rendering>` group (applying to the "
#~ "whole layer) or in :ref:`symbol layer"
#~ " properties <symbol-selector>` (applying to"
#~ " corresponding features). You can combine"
#~ " both usage."
#~ msgstr ""

#~ msgid ""
#~ "Paint effects can be activated by "
#~ "checking the |checkbox| :guilabel:`Draw "
#~ "effects` option and clicking the "
#~ "|paintEffects| :sup:`Customize effects` button, "
#~ "that will open the :guilabel:`Effect "
#~ "Properties` Dialog (see figure_effects_source_). "
#~ "The following effect types, with custom"
#~ " options are available:"
#~ msgstr ""

#~ msgid ""
#~ "**Source:** Draws the feature's original "
#~ "style according to the configuration of"
#~ " the layer's properties. The transparency"
#~ " of its style can be adjusted."
#~ msgstr ""

#~ msgid ""
#~ "**Blur:** Adds a blur effect on "
#~ "the vector layer. The options that "
#~ "someone can change are the "
#~ ":menuselection:`Blur type` (:menuselection:`Stack` "
#~ "or :menuselection:`Gaussian blur`), the "
#~ "strength and transparency of the blur"
#~ " effect."
#~ msgstr ""

#~ msgid ""
#~ "**Colorize:** This effect can be used"
#~ " to make a version of the style"
#~ " using one single hue. The base "
#~ "will always be a grayscale version "
#~ "of the symbol and you can use "
#~ "the |selectString| :guilabel:`Grayscale` to "
#~ "select how to create it (options "
#~ "are: 'lightness', 'luminosity' and 'average')."
#~ " If |checkbox| :guilabel:`Colorise` is "
#~ "selected, it will be possible to "
#~ "mix another color and choose how "
#~ "strong it should be. You can also"
#~ " control the :guilabel:`Brightness`, "
#~ ":guilabel:`contrast` and :guilabel:`saturation` "
#~ "levels of the resulting symbol."
#~ msgstr ""

#~ msgid ""
#~ "**Drop Shadow:** Using this effect adds"
#~ " a shadow on the feature, which "
#~ "looks like adding an extra dimension."
#~ " This effect can be customized by "
#~ "changing the :menuselection:`offset` degrees "
#~ "and radius, determining where the shadow"
#~ " shifts towards to and the proximity"
#~ " to the source object. :menuselection:`Drop"
#~ " Shadow` also has the option to "
#~ "change the blur radius, the transparency"
#~ " and the color of the effect."
#~ msgstr ""

#~ msgid ""
#~ "**Inner Shadow:** This effect is similar"
#~ " to the :menuselection:`Drop Shadow` "
#~ "effect, but it adds the shadow "
#~ "effect on the inside of the edges"
#~ " of the feature. The available "
#~ "options for customization are the same"
#~ " as the :menuselection:`Drop Shadow` "
#~ "effect."
#~ msgstr ""

#~ msgid ""
#~ "**Inner Glow:** Adds a glow effect "
#~ "inside the feature. This effect can "
#~ "be customized by adjusting the "
#~ ":menuselection:`spread` (width) of the glow,"
#~ " or the :menuselection:`Blur radius`. The"
#~ " latter specifies the proximity from "
#~ "the edge of the feature where you"
#~ " want any blurring to happen. "
#~ "Additionally, there are options to "
#~ "customize the color of the glow, "
#~ "with a single color or a color "
#~ "ramp."
#~ msgstr ""

#~ msgid ""
#~ "**Outer Glow:** This effect is similar"
#~ " to the :menuselection:`Inner Glow` effect,"
#~ " but it adds the glow effect on"
#~ " the outside of the edges of "
#~ "the feature. The available options for"
#~ " customization are the same as the"
#~ " :menuselection:`Inner Glow` effect."
#~ msgstr ""

#~ msgid ""
#~ "**Transform:** Adds the possibility of "
#~ "transforming the shape of the symbol."
#~ " The first options available for "
#~ "customization are the :menuselection:`Reflect "
#~ "horizontal` and :menuselection:`Reflect vertical`,"
#~ " which actually create a reflection "
#~ "on the horizontal and/or vertical axes."
#~ " The 4 other options are:"
#~ msgstr ""

#~ msgid ":menuselection:`Shear`: slants the feature along the x and/or y axis"
#~ msgstr ""

#~ msgid ""
#~ ":menuselection:`Scale`: enlarges or minimizes "
#~ "the feature along the x and/or y"
#~ " axis by the given percentage"
#~ msgstr ""

#~ msgid ":menuselection:`Rotation`: turns the feature around its center point"
#~ msgstr ""

#~ msgid ""
#~ "and :menuselection:`Translate` changes the "
#~ "position of the item based on a"
#~ " distance given on the x and/or "
#~ "the y axis."
#~ msgstr ""

#~ msgid ""
#~ "There are some common options available"
#~ " for all draw effect types. "
#~ ":guilabel:`Transparency` and :guilabel:`Blend mode`"
#~ " options work similar to the ones "
#~ "described in :ref:`layer_rendering` and can"
#~ " be used in all draw effects "
#~ "except for the transform one."
#~ msgstr ""

#~ msgid ""
#~ "One or more draw effects can used"
#~ " at the same time. You "
#~ "activate/deactivate an effect using its "
#~ "checkbox in the effects list. You "
#~ "can change the selected effect type "
#~ "by using the |selectstring| :guilabel:`Effect"
#~ " type` option. You can reorder the"
#~ " effects using |arrowUp| :sup:`Move up` "
#~ "and |arrowDown| :sup:`Move down` buttons, "
#~ "and also add/remove effects using the"
#~ " |signPlus| :sup:`Add effect` and "
#~ "|signMinus| :sup:`Remove effect` buttons."
#~ msgstr ""

#~ msgid ""
#~ "There is also a |selectString| "
#~ ":guilabel:`Draw mode` option available for "
#~ "every draw effect, and you can "
#~ "choose whether to render and/or to "
#~ "modify the symbol. Effects render from"
#~ " top to bottom.'Render only' mode "
#~ "means that the effect will be "
#~ "visible while the 'Modify only' mode "
#~ "means that the effect will not be"
#~ " visible but the changes that it "
#~ "applies will be passed to the next"
#~ " effect (the one immediately below). "
#~ "The 'Render and Modify' mode will "
#~ "make the effect visible and pass "
#~ "any changes to the next effect. If"
#~ " the effect is in the top of"
#~ " the effects list or if the "
#~ "immediately above effect is not in "
#~ "modify mode, then it will use the"
#~ " original source symbol from the "
#~ "layers properties (similar to source)."
#~ msgstr ""

#~ msgid ""
#~ "The first step is to choose the"
#~ " labeling method from the drop-down"
#~ " list. There are four options "
#~ "available:"
#~ msgstr ""

#~ msgid "**No labels**"
#~ msgstr ""

#~ msgid "**Show labels for this layer**"
#~ msgstr ""

#~ msgid ":ref:`Rule-based labeling <rule_based_labeling>`"
#~ msgstr ""

#~ msgid ""
#~ "and **Blocking**: allows to set a "
#~ "layer as just an obstacle for "
#~ "other layer's labels without rendering "
#~ "any labels of its own."
#~ msgstr ""

#~ msgid ""
#~ "The next steps assume you select "
#~ "the **Show labels for this layer** "
#~ "option, enabling following tabs that "
#~ "help you configure the labeling:"
#~ msgstr ""

#~ msgid ""
#~ "It also enables the **Label with** "
#~ "drop-down list, from which you can"
#~ " select an attribute column to use."
#~ " Click |expression| if you want to"
#~ " define labels based on expressions -"
#~ " See :ref:`labeling_with_expressions`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Text` tab, you can "
#~ "define the :guilabel:`Font`, :guilabel:`Style`, "
#~ "and :guilabel:`Size` of your labels' "
#~ "text (see Figure_labels_). There are "
#~ "options available to set the labels' "
#~ ":guilabel:`Color` and :guilabel:`Transparency`. Use"
#~ " the :guilabel:`Type case` option to "
#~ "change the capitalization style of the"
#~ " text. You have the possibility to"
#~ " render the text as 'All uppercase',"
#~ " 'All lowercase' or 'Capitalize first "
#~ "letter'. In :guilabel:`Spacing`, you can "
#~ "change the space between words and "
#~ "between individual letters. Finally, use "
#~ "the :guilabel:`Blend mode` option to "
#~ "determine how your labels will mix "
#~ "with the map features below them "
#~ "(see more about it in :ref:`blend-"
#~ "modes`)."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Formatting` tab, you "
#~ "can define a character for a line"
#~ " break in the labels with the "
#~ ":guilabel:`Wrap on character` option. You "
#~ "can also format the :guilabel:`Line "
#~ "Height` and the :guilabel:`alignment`. For "
#~ "the latter, typical values are available"
#~ " (left, right, and center), plus "
#~ "*Follow label placement* for point "
#~ "layers. When set to this mode, "
#~ "text alignment for labels will be "
#~ "dependent on the final placement of "
#~ "the label relative to the point. "
#~ "E.g., if the label is placed to"
#~ " the left of the point, then "
#~ "the label will be right aligned, "
#~ "while if it is placed to the "
#~ "right, it will be left aligned."
#~ msgstr ""

#~ msgid ""
#~ "To create a buffer around the "
#~ "labels, activate the |checkbox| "
#~ ":guilabel:`Draw text buffer` checkbox in "
#~ "the :guilabel:`Buffer` tab. You can set"
#~ " the buffer's :guilabel:`Size`, "
#~ ":guilabel:`color`, and :guilabel:`Transparency`. The"
#~ " buffer expands from the label's "
#~ "outline , so, if the |checkbox| "
#~ ":guilabel:`color buffer's fill` checkbox is"
#~ " activated, the buffer interior is "
#~ "filled. This may be relevant when "
#~ "using partially transparent labels or "
#~ "with non-normal blending modes, which"
#~ " will allow seeing behind the label's"
#~ " text. Deactivating |checkbox| :guilabel:`color"
#~ " buffer's fill` checkbox (while using "
#~ "totally transparent labels) will allow "
#~ "you to create outlined text labels."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Background` tab, you "
#~ "can define with :guilabel:`Size X` and"
#~ " :guilabel:`Size Y` the shape of your"
#~ " background. Use :guilabel:`Size type` to"
#~ " insert an additional 'Buffer' into "
#~ "your background. The buffer size is "
#~ "set by default here. The background "
#~ "then consists of the buffer plus "
#~ "the background in :guilabel:`Size X` and"
#~ " :guilabel:`Size Y`. You can set a"
#~ " :guilabel:`Rotation` where you can choose"
#~ " between 'Sync with label', 'Offset "
#~ "of label' and 'Fixed'. Using 'Offset "
#~ "of label' and 'Fixed', you can "
#~ "rotate the background. Define an "
#~ ":guilabel:`Offset X,Y` with X and Y "
#~ "values, and the background will be "
#~ "shifted. When applying :guilabel:`Radius X,Y`,"
#~ " the background gets rounded corners. "
#~ "Again, it is possible to mix the"
#~ " background with the underlying layers "
#~ "in the map canvas using the "
#~ ":guilabel:`Blend mode` (see :ref:`blend-"
#~ "modes`)."
#~ msgstr ""

#~ msgid ""
#~ "Use the :guilabel:`Shadow` tab for a "
#~ "user-defined :guilabel:`Drop shadow`. The "
#~ "drawing of the background is very "
#~ "variable. Choose between 'Lowest label "
#~ "component', 'Text', 'Buffer' and 'Background'."
#~ " The :guilabel:`Offset` angle depends on"
#~ " the orientation of the label. If "
#~ "you choose the |checkbox| :guilabel:`Use "
#~ "global shadow` checkbox, then the zero"
#~ " point of the angle is always "
#~ "oriented to the north and doesn't "
#~ "depend on the orientation of the "
#~ "label. You can influence the appearance"
#~ " of the shadow with the "
#~ ":guilabel:`Blur radius`. The higher the "
#~ "number, the softer the shadows. The "
#~ "appearance of the drop shadow can "
#~ "also be altered by choosing a "
#~ "blend mode."
#~ msgstr ""

#~ msgid ""
#~ "Choose the :guilabel:`Placement` tab for "
#~ "configuring label placement and labeling "
#~ "priority. Note that the placement "
#~ "options differ according to the type "
#~ "of vector layer, namely point, line "
#~ "or polygon."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Rendering` tab, you "
#~ "can tune when the labels can be"
#~ " rendered and their interaction with "
#~ "other labels and features."
#~ msgstr ""

#~ msgid ""
#~ "To create a rule, select the "
#~ "**Rule-based labeling** option in the "
#~ "main drop-down list from the "
#~ ":guilabel:`Labels` tab and click the "
#~ "|signPlus| button at the bottom  of "
#~ "the dialog. Then fill the new "
#~ "dialog with a description and an "
#~ "expression to filter features. You can"
#~ " also set a :ref:`scale range "
#~ "<label_scaledepend>` in which the label "
#~ "rule should be applied. The other "
#~ "options available in this dialog are "
#~ "the :ref:`common settings <showlabels>` seen"
#~ " beforehand."
#~ msgstr ""

#~ msgid ""
#~ "Whether you choose simple or rule-"
#~ "based labeling type, QGIS allows using"
#~ " expressions to label features. Click "
#~ "the |expression| icon near the "
#~ ":guilabel:`Label with` drop-down list in"
#~ " the |labeling| :guilabel:`Labels` tab of"
#~ " the properties dialog. In "
#~ "figure_labels_expression_, you see a sample"
#~ " expression to label the alaska "
#~ "regions with name and area size, "
#~ "based on the field 'NAME_2', some "
#~ "descriptive text, and the function "
#~ "``$area`` in combination with "
#~ "``format_number()`` to make it look "
#~ "nicer."
#~ msgstr ""

#~ msgid ""
#~ "You need to combine all elements "
#~ "(strings, fields, and functions) with a"
#~ " string concatenation function such as "
#~ "``concat``, ``+`` or ``||``. Be aware"
#~ " that in some situations (when null"
#~ " or numeric value are involved) not"
#~ " all of these tools will fit "
#~ "your need."
#~ msgstr ""

#~ msgid ""
#~ "With the |dataDefined| :sup:`Data defined "
#~ "override` functions, the settings for "
#~ "the labeling are overridden by entries"
#~ " in the attribute table. It can "
#~ "be used to set values for most "
#~ "of the labeling options described above."
#~ " See the widget's description and "
#~ "manipulation in :ref:`data_defined` section."
#~ msgstr ""

#~ msgid ""
#~ "Combined with the :guilabel:`Label Toolbar`,"
#~ " the data defined override setting "
#~ "helps you manipulate labels in the "
#~ "map canvas (move, edit, rotate). We "
#~ "now describe an example using the "
#~ "data-defined override function for the "
#~ "|moveLabel|:sup:`Move label` function (see "
#~ "figure_labels_data_defined_)."
#~ msgstr ""

#~ msgid "Fields Properties"
#~ msgstr ""

#~ msgid ""
#~ "|attributes| The :guilabel:`Fields` tab helps"
#~ " you organize the fields of the "
#~ "selected dataset and the way you "
#~ "can interact with the feature's "
#~ "attributes. The buttons |newAttribute| "
#~ ":sup:`New field` and |deleteAttribute| "
#~ ":sup:`Delete field` can be used when "
#~ "the dataset is in |toggleEditing| "
#~ ":sup:`Editing mode`."
#~ msgstr ""

#~ msgid ""
#~ "You can rename fields by double-"
#~ "clicking in the fields name (note "
#~ "that you should switch to editing "
#~ "mode to edit the field name). This"
#~ " is only supported for data providers"
#~ " like PostgreSQL, Oracle, Memory layer "
#~ "and some OGR layer depending the "
#~ "OGR data format and version."
#~ msgstr ""

#~ msgid ""
#~ "Comments can be added by clicking "
#~ "in the comment field of the column"
#~ " but if you are using a "
#~ "PostgreSQL layer, comment of the column"
#~ " could be the one in the "
#~ "PostgreSQL table if set. Comments are"
#~ " saved in the QGIS project file "
#~ "as for the alias."
#~ msgstr ""

#~ msgid ""
#~ "The dialog also lists read-only "
#~ "characteristics of the field such as "
#~ "its ``type``, ``type name``, ``length`` "
#~ "and ``precision``. When serving the "
#~ "layer as ``WMS`` or ``WFS``, you "
#~ "can also check here which fields "
#~ "could be retrieved."
#~ msgstr ""

#~ msgid "Field properties tab"
#~ msgstr ""

#~ msgid ""
#~ "Within the :guilabel:`Fields` tab, you "
#~ "also find an **Edit widget** column. "
#~ "This column can be used to define"
#~ " values or a range of values "
#~ "that are allowed to be added to"
#~ " the specific attribute table column. "
#~ "It also helps to set the type "
#~ "of widget used to fill or display"
#~ " values of the field, in the "
#~ "attribute table or the feature form. "
#~ "If you click on the **[Edit "
#~ "widget]** button, a dialog opens, where"
#~ " you can define different widgets."
#~ msgstr ""

#~ msgid ""
#~ "Regardless the type of widget applied"
#~ " to the field, there are some "
#~ "common properties you can set to "
#~ "control whether and how a field "
#~ "can be edited:"
#~ msgstr ""

#~ msgid ""
#~ "**Editable**: uncheck this to set the"
#~ " field read-only (not manually "
#~ "modifiable) when the layer is in "
#~ "edit mode. Note that checking this "
#~ "setting doesn't override any edit "
#~ "limitation from the provider."
#~ msgstr ""

#~ msgid ""
#~ "**Label on top**: places the field "
#~ "name above or beside the widget in"
#~ " the feature form"
#~ msgstr ""

#~ msgid ""
#~ "**Default value**: for new features, "
#~ "automatically populates by default the "
#~ "field with a predefined value or "
#~ "an :ref:`expression-based one "
#~ "<vector_expressions>`. For example, you can:"
#~ msgstr ""

#~ msgid ""
#~ "use ``$x``, ``$length``, ``$area`` to "
#~ "populate a field with the feature's "
#~ "x coordinate, length, area or any "
#~ "geometric information at its creation;"
#~ msgstr ""

#~ msgid ""
#~ "incremente a field by 1 for each"
#~ " new feature using ``maximum(\"field\")+1``;"
#~ msgstr ""

#~ msgid ""
#~ "**Constraints**: you can constrain the "
#~ "value to insert in the field. This"
#~ " constraint can be:"
#~ msgstr ""

#~ msgid "|checkbox| :guilabel:`Not null`: force the user to provide a value"
#~ msgstr ""

#~ msgid ""
#~ "based on a custom expression: e.g. "
#~ "``regexp_match(col0,'A-Za-z')`` to ensure that "
#~ "the value of the field *col0* has"
#~ " only alphabetical letter."
#~ msgstr ""

#~ msgid ""
#~ "A short description of the constraint"
#~ " can be added and will be "
#~ "displayed at the top of the form"
#~ " as a warning message when the "
#~ "value supplied does not match the "
#~ "constraint."
#~ msgstr ""

#~ msgid "The available widgets are:"
#~ msgstr ""

#~ msgid ""
#~ "**Checkbox**: Displays a checkbox, and "
#~ "you can define what attribute is "
#~ "added to the column when the "
#~ "checkbox is activated or not."
#~ msgstr ""

#~ msgid ""
#~ "**Classification**: Displays a combo box "
#~ "with the values used for classification,"
#~ " if you have chosen 'unique value'"
#~ " as legend type in the "
#~ ":guilabel:`Style` tab of the properties "
#~ "dialog."
#~ msgstr ""

#~ msgid ""
#~ "**Color**: Displays a color button "
#~ "allowing user to choose a color "
#~ "from the color dialog window."
#~ msgstr ""

#~ msgid ""
#~ "**Enumeration**: Opens a combo box with"
#~ " values that can be used within "
#~ "the columns type. This is currently "
#~ "only supported by the PostgreSQL "
#~ "provider."
#~ msgstr ""

#~ msgid ""
#~ "**External Resource**: Uses a \"Open "
#~ "file\" dialog to store file path "
#~ "in a relative or absolute mode. It"
#~ " can also be used to display a"
#~ " hyperlink (to document path), a "
#~ "picture or a web page."
#~ msgstr ""

#~ msgid ""
#~ "**File Name**: Simplifies the selection "
#~ "by adding a file chooser dialog."
#~ msgstr ""

#~ msgid ""
#~ "**Photo**: Field contains a filename for"
#~ " a picture. The width and height "
#~ "of the field can be defined."
#~ msgstr ""

#~ msgid ""
#~ "**UUID Generator**: Generates a read-"
#~ "only UUID (Universally Unique Identifiers) "
#~ "field, if empty."
#~ msgstr ""

#~ msgid ""
#~ "**Value Relation**: Offers values from a"
#~ " related table in a combobox. You "
#~ "can select layer, key column and "
#~ "value column. Several options are "
#~ "available to change the standard "
#~ "behaviours: allow null value, order by"
#~ " value, allow multiple selections and "
#~ "use of autocompleter. The forms will "
#~ "display either a drop-down list or"
#~ " a line edit field when completer "
#~ "checkbox is enabled."
#~ msgstr ""

#~ msgid ""
#~ "**Web View**: Field contains a URL. "
#~ "The width and height of the field"
#~ " is variable."
#~ msgstr ""

#~ msgid ""
#~ "QGIS has an advanced 'hidden' option "
#~ "to define your own field widget "
#~ "using python and add it to this"
#~ " impressive list of widgets. It is"
#~ " tricky but it is very well "
#~ "explained in following excellent blog "
#~ "that explains how to create a real"
#~ " time validation widget that can be"
#~ " used like described widgets. See "
#~ "http://blog.vitu.ch/10142013-1847/write-your-own-"
#~ "qgis-form-elements"
#~ msgstr ""

#~ msgid "**Relative Path in widgets**"
#~ msgstr ""

#~ msgid ""
#~ "If the path which is selected with"
#~ " the file browser is located in "
#~ "the same directory as the :file:`.qgs`"
#~ " project file or below, paths are "
#~ "converted to relative paths. This "
#~ "increases portability of a :file:`.qgs` "
#~ "project with multimedia information attached."
#~ " This is enabled only for File "
#~ "Name, Photo and Web View at this"
#~ " moment."
#~ msgstr ""

#~ msgid "Customize a form for your data"
#~ msgstr ""

#~ msgid ""
#~ "By default, when you click on a"
#~ " feature with the |identify| :sup:`Identify"
#~ " Features` tool or switch the "
#~ "attribute table to the *form view* "
#~ "mode, QGIS displays a form with "
#~ "tabulated textboxes (one per field). "
#~ "This rendering is the result of "
#~ "the default ``Autogenerate`` value of "
#~ "the :menuselection:`Layer properties --> "
#~ "Fields --> Attribute editor layout` "
#~ "setting. Thanks to the :ref:`widget "
#~ "setting <configure_field>`, you can improve"
#~ " this dialog."
#~ msgstr ""

#~ msgid ""
#~ "You can furthermore define built-in "
#~ "forms (see figure_fields_form_), e.g. when "
#~ "you have objects with many attributes,"
#~ " you can create an editor with "
#~ "several tabs and named groups to "
#~ "present the attribute fields."
#~ msgstr ""

#~ msgid ""
#~ "Choose ``Drag and drop designer`` from"
#~ " the :guilabel:`Attribute editor layout` "
#~ "combobox to layout the features form "
#~ "within QGIS. Then, drag and drop "
#~ "rows from the :guilabel:`Fields` frame "
#~ "to the :guilabel:`Label` panel to have"
#~ " fields added to your custom form."
#~ msgstr ""

#~ msgid ""
#~ "You can also use categories (tab "
#~ "or group frames) to better structure "
#~ "the form. The first step is to "
#~ "use the |signPlus| icon to create "
#~ "a tab in which fields and groups"
#~ " will be displayed (see "
#~ "figure_fields_layout_). You can create as "
#~ "many categories as you want. The "
#~ "next step will be to assign to "
#~ "each category the relevant fields, using"
#~ " the |arrowRight| icon. You'd need to"
#~ " select the targeted category beforehand."
#~ " You can use the same fields "
#~ "many times."
#~ msgstr ""

#~ msgid "choose to hide or show the item label"
#~ msgstr ""

#~ msgid "rename the category"
#~ msgstr ""

#~ msgid ""
#~ "set over how many columns the "
#~ "fields under the category should be "
#~ "distributed"
#~ msgstr ""

#~ msgid ""
#~ "enter an expression to control the "
#~ "category visibility. The expression will "
#~ "be re-evaluated everytime values in "
#~ "the form change and the tab or "
#~ "groupbox shown/hidden accordingly."
#~ msgstr ""

#~ msgid "show the category as a group box (only available for tabs)"
#~ msgstr ""

#~ msgid ""
#~ "In case the layer is involved in"
#~ " ``one to many relations`` (see "
#~ ":ref:`vector_relations`), referencing layers are "
#~ "listed in the :guilabel:`Relations` frame "
#~ "and their form can be embedded in"
#~ " the current layer form by drag-"
#~ "and-drop. Like the other items, "
#~ "double-click the relation label to "
#~ "configure some options:"
#~ msgstr ""

#~ msgid "show the link button"
#~ msgstr ""

#~ msgid "show the unlink button"
#~ msgstr ""

#~ msgid "Provide an ui-file"
#~ msgstr ""

#~ msgid ""
#~ "For detailed information, see "
#~ "https://nathanw.net/2011/09/05/qgis-tips-custom-"
#~ "feature-forms-with-python-logic/."
#~ msgstr ""

#~ msgid "|checkbox| :guilabel:`Cache join layer in virtual memory`"
#~ msgstr ""

#~ msgid ""
#~ "**pie charts**, a circular statistical "
#~ "graphic divided into slices to "
#~ "illustrate numerical proportion. The arc "
#~ "length of each slice is proportional "
#~ "to the quantity it represents,"
#~ msgstr ""

#~ msgid ""
#~ "**text diagrams**, a horizontaly divided "
#~ "circle showing statistics values inside"
#~ msgstr ""

#~ msgid "and **histograms**."
#~ msgstr ""

#~ msgid ":ref:`Appearance <diagram_appearance>`"
#~ msgstr ""

#~ msgid ""
#~ "This label is the default text "
#~ "displayed in the legend of the "
#~ "print composer or of the layer "
#~ "tree."
#~ msgstr ""

#~ msgid "Appearance"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Appearance` defines how the diagram"
#~ " looks like. It provides general "
#~ "settings that do not interfere with "
#~ "the statistic values such as:"
#~ msgstr ""

#~ msgid "the graphic transparency, its outline width and color"
#~ msgstr ""

#~ msgid "the width of the bar in case of histogram"
#~ msgstr ""

#~ msgid ""
#~ "the circle background color in case "
#~ "of text diagram, and the font used"
#~ " for texts"
#~ msgstr ""

#~ msgid "In this tab, you can also manage the diagram visibility:"
#~ msgstr ""

#~ msgid ""
#~ "by removing diagrams that overlap others"
#~ " or :guilabel:`Show all diagrams` even "
#~ "if they overlap each other"
#~ msgstr ""

#~ msgid ""
#~ "by selecting a field with "
#~ ":guilabel:`Data defined visibility` to "
#~ "precisely tune which diagrams should be"
#~ " rendered"
#~ msgstr ""

#~ msgid "by setting the :ref:`scale visibility <label_scaledepend>`"
#~ msgstr ""

#~ msgid "Diagram properties - Appearance tab"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Size` is the main tab to "
#~ "set how the selected statistics are "
#~ "represented. The diagram size units can"
#~ " be 'Map Units' or 'Millimeters'. You"
#~ " can use :"
#~ msgstr ""

#~ msgid ""
#~ "The diagram can also be placed "
#~ "using feature data by filling the "
#~ "``X`` and ``Y`` fields with an "
#~ "attribute of the feature."
#~ msgstr ""

#~ msgid ""
#~ "The placement of the diagrams can "
#~ "interact with the labeling, so you "
#~ "can detect and solve position conflicts"
#~ " between diagrams and labels by "
#~ "setting the **Priority** slider or the"
#~ " **z-index** value."
#~ msgstr ""

#~ msgid ""
#~ "From the :guilabel:`Legend` tab, you can"
#~ " choose to display items of the "
#~ "diagram in the :ref:`label_legend`, besides"
#~ " the layer symbology. It can be:"
#~ msgstr ""

#~ msgid ""
#~ "the represented attributes: color and "
#~ "legend text set in :guilabel:`Attributes` "
#~ "tab"
#~ msgstr ""

#~ msgid "and if applicable, the diagram size, whose symbol you can customize."
#~ msgstr ""

#~ msgid ""
#~ "When set, the diagram legend items "
#~ "are also available in the print "
#~ "composer legend, besides the layer "
#~ "symbology."
#~ msgstr ""

#~ msgid "Now click **[Apply]** to display the diagram in the QGIS main window."
#~ msgstr ""

#~ msgid "Finally, click **[Ok]**."
#~ msgstr ""

#~ msgid ""
#~ "There are several examples included in"
#~ " the dialog. You can load them "
#~ "by clicking on **[Create default "
#~ "actions]**. To edit any of the "
#~ "examples, double-click its row. One "
#~ "example is performing a search based "
#~ "on an attribute value. This concept "
#~ "is used in the following discussion."
#~ msgstr ""

#~ msgid "``konqueror http://www.google.com/search?q=%nam``"
#~ msgstr ""

#~ msgid "``konqueror http://www.google.com/search?q=%%``"
#~ msgstr ""

#~ msgid ""
#~ "In the first example, the web "
#~ "browser konqueror is invoked and passed"
#~ " a URL to open. The URL "
#~ "performs a Google search on the "
#~ "value of the ``nam`` field from "
#~ "our vector layer. Note that the "
#~ "application or script called by the "
#~ "action must be in the path, or "
#~ "you must provide the full path. To"
#~ " be certain, we could rewrite the "
#~ "first example as: ``/opt/kde3/bin/konqueror "
#~ "http://www.google.com/search?q=%nam``. This will "
#~ "ensure that the konqueror application "
#~ "will be executed when the action "
#~ "is invoked."
#~ msgstr ""

#~ msgid ""
#~ "Actions can be invoked from either "
#~ "the :guilabel:`Identify Results` dialog, an"
#~ " :guilabel:`Attribute Table` dialog or from"
#~ " :guilabel:`Run Feature Action` (recall "
#~ "that these dialogs can be opened "
#~ "by clicking |identify| :sup:`Identify "
#~ "Features` or |openTable| :sup:`Open Attribute"
#~ " Table` or |actionRun| :sup:`Run Feature"
#~ " Action`). To invoke an action, right"
#~ " click on the feature and choose "
#~ "the action from the pop-up menu"
#~ " (they should have been enabled to"
#~ " be displayed in the attribute "
#~ "table). Actions are listed in the "
#~ "popup menu by the name you "
#~ "assigned when defining the action. Click"
#~ " on the action you wish to "
#~ "invoke."
#~ msgstr ""

#~ msgid ""
#~ "As an exercise, we can create an"
#~ " action that does a Google search "
#~ "on the ``lakes`` layer. First, we "
#~ "need to determine the URL required "
#~ "to perform a search on a keyword."
#~ " This is easily done by just "
#~ "going to Google and doing a simple"
#~ " search, then grabbing the URL from"
#~ " the address bar in your browser. "
#~ "From this little effort, we see "
#~ "that the format is "
#~ "http://google.com/search?q=qgis, where ``QGIS`` is"
#~ " the search term. Armed with this "
#~ "information, we can proceed:"
#~ msgstr ""

#~ msgid "click |signPlus| :sup:`Add a new action`."
#~ msgstr ""

#~ msgid ""
#~ "Following the name of the external "
#~ "application, add the URL used for "
#~ "doing a Google search, up to but"
#~ " not including the search term: "
#~ "``http://google.com/search?q=``"
#~ msgstr ""

#~ msgid ""
#~ "The text in the :guilabel:`Action` field"
#~ " should now look like this: ``firefox"
#~ " http://google.com/search?q=``"
#~ msgstr ""

#~ msgid ""
#~ "Click on the drop-down box "
#~ "containing the field names for the "
#~ "``lakes`` layer. It's located just to"
#~ " the left of the **[Insert]** button."
#~ msgstr ""

#~ msgid "From the drop-down box, select 'NAMES' and click **[Insert]**."
#~ msgstr ""

#~ msgid "``firefox http://google.com/search?q=%NAMES``"
#~ msgstr ""

#~ msgid "To finalize and add the action, click the **[OK]** button."
#~ msgstr ""

#~ msgid ""
#~ "When we click on the action, it"
#~ " brings up Firefox and navigates to"
#~ " the URL http://www.google.com/search?q=Tustumena. "
#~ "It is also possible to add further"
#~ " attribute fields to the action. "
#~ "Therefore, you can add a ``+`` to"
#~ " the end of the action text, "
#~ "select another field and click on "
#~ "**[Insert Field]**. In this example, "
#~ "there is just no other field "
#~ "available that would make sense to "
#~ "search for."
#~ msgstr ""

#~ msgid ""
#~ "Usually, when we create an action "
#~ "to open a file with an external"
#~ " application, we can use absolute "
#~ "paths, or eventually relative paths. In"
#~ " the second case, the path is "
#~ "relative to the location of the "
#~ "external program executable file. But "
#~ "what about if we need to use "
#~ "relative paths, relative to the selected"
#~ " layer (a file-based one, like "
#~ "a shapefile or SpatiaLite)? The "
#~ "following code will do the trick:"
#~ msgstr ""

#~ msgid ""
#~ "|mapTips| This tab is specifically "
#~ "created for map tips: display a "
#~ "message in the map canvas when "
#~ "hovering over a feature of the "
#~ "active layer. This message can either"
#~ " be the value of a |radioButtonOff|"
#~ " :guilabel:`Field` or a more complex "
#~ "and full |radioButtonOff| :guilabel:`HTML` "
#~ "text mixing fields, :ref:`expressions "
#~ "<vector_expressions>` and html tags "
#~ "(multiline, fonts, images, hyperlink ...)."
#~ msgstr ""

#~ msgid ""
#~ "To activate Map Tips, select the "
#~ "menu option :menuselection:`View --> Map "
#~ "Tips` or click on the |mapTips| "
#~ ":sup:`Map Tips` icon. Map tip is a"
#~ " cross-session feature meaning that "
#~ "once activated, it stays on and "
#~ "apply to any set layer in any "
#~ "project, even in future QGIS sessions"
#~ " until it's toggled off."
#~ msgstr ""

#~ msgid ""
#~ "Figures Display Code and Mapped show "
#~ "an example of HTML code and how"
#~ " it behaves in map canvas."
#~ msgstr ""

#~ msgid ""
#~ "|rendering| QGIS offers support for "
#~ "on-the-fly feature generalisation. This "
#~ "can improve rendering times when drawing"
#~ " many complex features at small "
#~ "scales. This feature can be enabled "
#~ "or disabled in the layer settings "
#~ "using the |checkbox| :guilabel:`Simplify "
#~ "geometry` option. There is also a "
#~ "global setting that enables generalisation "
#~ "by default for newly added layers "
#~ "(see :ref:`global simplification "
#~ "<global_simplification>` for more information)."
#~ msgstr ""

#~ msgid ""
#~ "While rendering extremely detailed layers "
#~ "(e.g. polygon layers with a huge "
#~ "number of nodes), this can cause "
#~ "composer exports in PDF/SVG format to"
#~ " be huge as all nodes are "
#~ "included in the exported file. This "
#~ "can also make the resultant file "
#~ "very slow to work with/open in "
#~ "other programs."
#~ msgstr ""

#~ msgid ""
#~ "You can also do this by forcing"
#~ " the composer to export as a "
#~ "raster, but that is an all-or-"
#~ "nothing solution, given that the "
#~ "rasterisation is applied to all layers."
#~ msgstr ""

#~ msgid ""
#~ "|metadata| The :guilabel:`Metadata` tab "
#~ "consists of :guilabel:`Description`, "
#~ ":guilabel:`Attribution`, :guilabel:`MetadataURL`, "
#~ ":guilabel:`LegendUrl` and :guilabel:`Properties` "
#~ "sections."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Properties` section, you "
#~ "get general information about the layer,"
#~ " including specifics about the type "
#~ "and location, number of features, "
#~ "feature type, and editing capabilities. "
#~ "The :guilabel:`Extents` table provides you "
#~ "with information on the layer extent "
#~ "and the :guilabel:`Layer Spatial Reference "
#~ "System`, which is information about the"
#~ " CRS of the layer. This can "
#~ "provide a quick way to get useful"
#~ " information about the layer."
#~ msgstr ""

#~ msgid ""
#~ "Additionally, you can add or edit "
#~ "a title and abstract for the layer"
#~ " in the :guilabel:`Description` section. "
#~ "It's also possible to define a "
#~ ":guilabel:`Keyword list` here. These keyword"
#~ " lists can be used in a "
#~ "metadata catalog. If you want to "
#~ "use a title from an XML metadata"
#~ " file, you have to fill in a"
#~ " link in the :guilabel:`DataUrl` field."
#~ msgstr ""

#~ msgid "Metadata tab in vector layers properties dialog"
#~ msgstr ""

#~ msgid ""
#~ "Using the :menuselection:`Styles --> Add` "
#~ "combobox at the bottom of the "
#~ ":guilabel:`Layer Properties` dialog, you can"
#~ " save as many combinations of layer"
#~ " properties settings (symbology, labeling, "
#~ "diagram, fields form, actions...) as you"
#~ " want. Then, simply switch between "
#~ "styles from the context menu of "
#~ "the layer in :guilabel:`Layers Panel` to"
#~ " automatically get different representations "
#~ "of your data."
#~ msgstr ""

#~ msgid ""
#~ "|legend| The :guilabel:`Legend` tab provides"
#~ " you with a list of widgets you"
#~ " can embed within the layer tree "
#~ "in the Layers panel. The idea is"
#~ " to have a way to quickly "
#~ "access some actions that are often "
#~ "used with the layer (setup transparency,"
#~ " filtering, selection, style or other "
#~ "stuff...)."
#~ msgstr ""

